{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/event-stats/event-stats.component.css","webpack:///./src/app/components/event-stats/event-stats.component.html","webpack:///./src/app/components/event-stats/event-stats.component.ts","webpack:///./src/app/components/event-stats/view-event-attendance/view-event-attendance.css","webpack:///./src/app/components/event-stats/view-event-attendance/view-event-attendance.html","webpack:///./src/app/components/event-stats/view-event-attendance/view-event-attendance.ts","webpack:///./src/app/components/extra-credit-classes/add-user-class-dialog/add-user-class-dialog.css","webpack:///./src/app/components/extra-credit-classes/add-user-class-dialog/add-user-class-dialog.html","webpack:///./src/app/components/extra-credit-classes/add-user-class-dialog/add-user-class-dialog.ts","webpack:///./src/app/components/extra-credit-classes/extra-credit-classes.component.css","webpack:///./src/app/components/extra-credit-classes/extra-credit-classes.component.html","webpack:///./src/app/components/extra-credit-classes/extra-credit-classes.component.ts","webpack:///./src/app/components/hacker-data/hacker-data.component.css","webpack:///./src/app/components/hacker-data/hacker-data.component.html","webpack:///./src/app/components/hacker-data/hacker-data.component.ts","webpack:///./src/app/components/hacker-data/view-hacker-data-dialog/view-hacker-data-dialog.css","webpack:///./src/app/components/hacker-data/view-hacker-data-dialog/view-hacker-data-dialog.html","webpack:///./src/app/components/hacker-data/view-hacker-data-dialog/view-hacker-data-dialog.ts","webpack:///./src/app/components/item-checkout/add-checkout-request-dialog/add-checkout-request-dialog.component.css","webpack:///./src/app/components/item-checkout/add-checkout-request-dialog/add-checkout-request-dialog.component.html","webpack:///./src/app/components/item-checkout/add-checkout-request-dialog/add-checkout-request-dialog.component.ts","webpack:///./src/app/components/item-checkout/item-checkout.component.css","webpack:///./src/app/components/item-checkout/item-checkout.component.html","webpack:///./src/app/components/item-checkout/item-checkout.component.ts","webpack:///./src/app/components/item-checkout/return-checkout-sheet.component.html","webpack:///./src/app/components/item-checkout/return-checkout-sheet.component.ts","webpack:///./src/app/components/live-update/live-update.component.css","webpack:///./src/app/components/live-update/live-update.component.html","webpack:///./src/app/components/live-update/live-update.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/manage-admin/location-dialog.css","webpack:///./src/app/components/manage-admin/location-dialog.html","webpack:///./src/app/components/manage-admin/location-dialog.ts","webpack:///./src/app/components/manage-admin/manage-admin.component.css","webpack:///./src/app/components/manage-admin/manage-admin.component.html","webpack:///./src/app/components/manage-admin/manage-admin.component.ts","webpack:///./src/app/components/manage-events/add-event-dialog/add-event-dialog.css","webpack:///./src/app/components/manage-events/add-event-dialog/add-event-dialog.html","webpack:///./src/app/components/manage-events/add-event-dialog/add-event-dialog.ts","webpack:///./src/app/components/manage-events/manage-events.component.css","webpack:///./src/app/components/manage-events/manage-events.component.html","webpack:///./src/app/components/manage-events/manage-events.component.ts","webpack:///./src/app/components/manage-events/update-event-dialog/update-event-dialog.css","webpack:///./src/app/components/manage-events/update-event-dialog/update-event-dialog.html","webpack:///./src/app/components/manage-events/update-event-dialog/update-event-dialog.ts","webpack:///./src/app/components/manage-hackathon/manage-hackathon.component.css","webpack:///./src/app/components/manage-hackathon/manage-hackathon.component.html","webpack:///./src/app/components/manage-hackathon/manage-hackathon.component.ts","webpack:///./src/app/components/manage-locations/add-location-dialog/add-location-dialog.css","webpack:///./src/app/components/manage-locations/add-location-dialog/add-location-dialog.html","webpack:///./src/app/components/manage-locations/add-location-dialog/add-location-dialog.ts","webpack:///./src/app/components/manage-locations/manage-locations.component.css","webpack:///./src/app/components/manage-locations/manage-locations.component.html","webpack:///./src/app/components/manage-locations/manage-locations.component.ts","webpack:///./src/app/components/manage-locations/remove-location-dialog/remove-location-dialog.css","webpack:///./src/app/components/manage-locations/remove-location-dialog/remove-location-dialog.html","webpack:///./src/app/components/manage-locations/remove-location-dialog/remove-location-dialog.ts","webpack:///./src/app/components/manage-locations/update-location-dialog/update-location-dialog.css","webpack:///./src/app/components/manage-locations/update-location-dialog/update-location-dialog.html","webpack:///./src/app/components/manage-locations/update-location-dialog/update-location-dialog.ts","webpack:///./src/app/components/manage-rsvp/manage-rsvp.component.css","webpack:///./src/app/components/manage-rsvp/manage-rsvp.component.html","webpack:///./src/app/components/manage-rsvp/manage-rsvp.component.ts","webpack:///./src/app/components/manage-users/manage-users.component.css","webpack:///./src/app/components/manage-users/manage-users.component.html","webpack:///./src/app/components/manage-users/manage-users.component.ts","webpack:///./src/app/components/pre-registration-table/pre-registration-table.component.css","webpack:///./src/app/components/pre-registration-table/pre-registration-table.component.html","webpack:///./src/app/components/pre-registration-table/pre-registration-table.component.ts","webpack:///./src/app/components/registration-table/registration-table.component.css","webpack:///./src/app/components/registration-table/registration-table.component.html","webpack:///./src/app/components/registration-table/registration-table.component.ts","webpack:///./src/app/components/send-email/add-email-dialog.css","webpack:///./src/app/components/send-email/add-email-dialog.html","webpack:///./src/app/components/send-email/add-email-dialog.ts","webpack:///./src/app/components/send-email/send-email.component.css","webpack:///./src/app/components/send-email/send-email.component.html","webpack:///./src/app/components/send-email/send-email.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/components/statistics/statistics.component.css","webpack:///./src/app/components/statistics/statistics.component.html","webpack:///./src/app/components/statistics/statistics.component.ts","webpack:///./src/app/components/user-view/user-view.component.css","webpack:///./src/app/components/user-view/user-view.component.html","webpack:///./src/app/components/user-view/user-view.component.ts","webpack:///./src/app/components/vis/vis.component.css","webpack:///./src/app/components/vis/vis.component.html","webpack:///./src/app/components/vis/vis.component.ts","webpack:///./src/app/helpers/AppConstants.ts","webpack:///./src/app/helpers/AuthGuard.ts","webpack:///./src/app/helpers/app-routing.module.ts","webpack:///./src/app/helpers/custom.materials.ts","webpack:///./src/app/helpers/resolvers/UserResolver/user.resolver.ts","webpack:///./src/app/models/ApiRoute.ts","webpack:///./src/app/models/checkout-instance-model.ts","webpack:///./src/app/models/event-model.ts","webpack:///./src/app/models/item-checkout-model.ts","webpack:///./src/app/models/login-model.ts","webpack:///./src/app/models/privilege-model.ts","webpack:///./src/app/models/registration-model.ts","webpack:///./src/app/models/update-model.ts","webpack:///./src/app/services/AuthService/auth.service.ts","webpack:///./src/app/services/base-http/base-http.service.ts","webpack:///./src/app/services/custom-error-handler/custom-error-handler.service.ts","webpack:///./src/app/services/email-list/email-list.service.ts","webpack:///./src/app/services/http-admin/http-admin.service.ts","webpack:///./src/app/services/live-updates/live-updates.service.ts","webpack:///./src/app/services/services.ts","webpack:///./src/assets/email_template.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@import \\\"https://fonts.googleapis.com/css?family=Lato:300,400,500,600,700\\\";\\n\\n/* Application-wide Styles */\\n\\nh1 {\\n    color: #fff;\\n}\\n\\nh2, h3 {\\n    color: #444;\\n    font-family: Lato, Helvetica, sans-serif;\\n    font-weight: lighter;\\n}\\n\\nbody {\\n    margin: 2em;\\n    font-family: Lato, Georgia, sans-serif;\\n}\\n\\np {\\n    color: #888;\\n    font-family: Lato, Georgia, sans-serif;\\n}\\n\\n.header {\\n    border-bottom: #333333 solid 1px;\\n}\\n\\n.example-app-name {\\n    line-height: 56px;\\n    margin-left: 10px;\\n}\\n\\n.mat-drawer-container {\\n    overflow: visible;\\n}\\n\\n.mat-drawer-content {\\n    overflow: initial;\\n}\\n\\n.mat-sidenav-container {\\n    height: 100vh;\\n}\\n\\nmat-sidenav-content {\\n    padding: 0 5%;\\n}\\n\\n@media screen and (max-width: 768px) {\\n    .example-app-name {\\n        display: none;\\n    }\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"example-toolbar\\\">\\n    <button mat-icon-button (click)=\\\"snav.toggle()\\\">\\n        <mat-icon>menu</mat-icon>\\n    </button>\\n    <div class=\\\"logo item\\\" style=\\\"flex: 5; height: 100%; display:flex;\\\">\\n        <a href=\\\"https://admin.hackpsu.org/\\\" style=\\\"height: 90%;\\\">\\n            <img src=\\\"../assets/images/logo.svg\\\" class=\\\"hoverable\\\" style=\\\"height: 100%;\\\">\\n        </a>\\n        <h1 class=\\\"example-app-name\\\">HackPSU Admin App</h1>\\n    </div>\\n    <div style=\\\"flex: 1;\\\">\\n        <app-user-view></app-user-view>\\n    </div>\\n</mat-toolbar>\\n\\n<mat-sidenav-container class=\\\"example-sidenav-container\\\" \\n                       [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\">\\n    <mat-sidenav role=\\\"navigation\\\" #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\"\\n                 [fixedInViewport]=\\\"mobileQuery.matches\\\" fixedTopGap=\\\"56\\\">\\n        <app-sidebar></app-sidebar>\\n    </mat-sidenav>\\n\\n    <mat-sidenav-content role=\\\"navigation\\\">\\n        <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\\n<ngx-alerts></ngx-alerts>\\n<ng-progress #progressBar [spinner]=\\\"false\\\"></ng-progress>\"","import { ChangeDetectorRef, Component, NgModule, OnDestroy } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { AngularFireAuth, AngularFireAuthModule } from 'angularfire2/auth';\nimport { MediaMatcher } from '@angular/cdk/layout';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    RouterModule,\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent],\n})\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\n\nexport class AppComponent implements AngularFireAuthModule, OnDestroy {\n\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(public afAuth: AngularFireAuth, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  \n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport {\n  AddCheckoutRequestDialogComponent,\n } from './components/item-checkout/add-checkout-request-dialog/add-checkout-request-dialog.component';\nimport { ReturnCheckoutSheetComponent } from './components/item-checkout/return-checkout-sheet.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AppRoutingModule } from './helpers/app-routing.module';\nimport { AngularFireAuth, AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireModule } from 'angularfire2';\nimport { environment } from '../environments/environment';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { UserViewComponent } from './components/user-view/user-view.component';\nimport { CustomMaterialModule } from './helpers/custom.materials';\nimport { RegistrationTableComponent } from './components/registration-table/registration-table.component';\nimport { ManageUsersComponent } from './components/manage-users/manage-users.component';\nimport { PreRegistrationTableComponent } from './components/pre-registration-table/pre-registration-table.component';\nimport { LiveUpdateComponent } from './components/live-update/live-update.component';\nimport { SendEmailComponent } from './components/send-email/send-email.component';\nimport { EmailListService } from './services/email-list/email-list.service';\nimport { HttpAdminService } from './services/http-admin/http-admin.service';\nimport { ManageEventsComponent } from './components/manage-events/manage-events.component';\nimport { ManageRsvpComponent } from './components/manage-rsvp/manage-rsvp.component';\nimport {\n  ManageLocationsComponent,\n} from './components/manage-locations/manage-locations.component';\nimport { ExtraCreditClassesComponent } from './components/extra-credit-classes/extra-credit-classes.component';\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\nimport { VisComponent } from './components/vis/vis.component';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { AddEventDialogComponent } from './components/manage-events/add-event-dialog/add-event-dialog';\nimport { UpdateEventDialogComponent } from './components/manage-events/update-event-dialog/update-event-dialog';\nimport { AddUserClassDialogComponent } from './components/extra-credit-classes/add-user-class-dialog/add-user-class-dialog';\nimport { AddLocationDialogComponent } from './components/manage-locations/add-location-dialog/add-location-dialog';\nimport { UpdateLocationDialogComponent } from './components/manage-locations/update-location-dialog/update-location-dialog';\nimport { RemoveLocationDialogComponent } from './components/manage-locations/remove-location-dialog/remove-location-dialog';\nimport { AddEmailDialogComponent } from './components/send-email/add-email-dialog';\nimport { ViewEventAttendanceDialogComponent } from './components/event-stats/view-event-attendance/view-event-attendance';\nimport { HackerDataComponent } from './components/hacker-data/hacker-data.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ViewHackerDataDialogComponent } from './components/hacker-data/view-hacker-data-dialog/view-hacker-data-dialog';\nimport { ManageAdminComponent } from './components/manage-admin/manage-admin.component';\nimport { LocationDialogComponent } from './components/manage-admin/location-dialog';\nimport { StatisticsComponent } from './components/statistics/statistics.component';\nimport { AuthService, CustomErrorHandlerService } from './services/services';\nimport { AlertModule } from 'ngx-alerts';\nimport { NgProgressModule } from '@ngx-progressbar/core';\nimport { UserResolver } from './helpers/resolvers/UserResolver/user.resolver';\nimport { NgProgressHttpModule } from '@ngx-progressbar/http';\nimport { ItemCheckoutComponent } from './components/item-checkout/item-checkout.component';\nimport { EventStatsComponent } from './components/event-stats/event-stats.component';\nimport { ManageHackathonComponent } from './components/manage-hackathon/manage-hackathon.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SidebarComponent,\n    UserViewComponent,\n    RegistrationTableComponent,\n    ManageUsersComponent,\n    PreRegistrationTableComponent,\n    LiveUpdateComponent,\n    SendEmailComponent,\n    AddEmailDialogComponent,\n    AddEventDialogComponent,\n    UpdateEventDialogComponent,\n    ManageEventsComponent,\n    ManageRsvpComponent,\n    ManageLocationsComponent,\n    AddLocationDialogComponent,\n    UpdateLocationDialogComponent,\n    RemoveLocationDialogComponent,\n    ExtraCreditClassesComponent,\n    AddUserClassDialogComponent,\n    AddCheckoutRequestDialogComponent,\n    ViewEventAttendanceDialogComponent,\n    VisComponent,\n    ReturnCheckoutSheetComponent,\n    HackerDataComponent,\n    DashboardComponent,\n    ViewHackerDataDialogComponent,\n    ManageAdminComponent,\n    LocationDialogComponent,\n    StatisticsComponent,\n    ItemCheckoutComponent,\n    EventStatsComponent,\n    ManageHackathonComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ChartsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    CustomMaterialModule,\n    NgxChartsModule,\n    AlertModule.forRoot({ maxMessages: 5, timeout: 5000 }),\n    NgProgressModule.forRoot(),\n    NgProgressHttpModule,\n  ],\n  entryComponents: [\n    AddEmailDialogComponent, AddUserClassDialogComponent, AddEventDialogComponent,\n    AddLocationDialogComponent, UpdateLocationDialogComponent, RemoveLocationDialogComponent,\n    ViewHackerDataDialogComponent, LocationDialogComponent, ViewEventAttendanceDialogComponent,\n    AddCheckoutRequestDialogComponent, ReturnCheckoutSheetComponent,\n    UpdateEventDialogComponent,\n  ],\n  providers: [\n    EmailListService, HttpAdminService, AngularFireAuth, AuthService,\n    CustomErrorHandlerService, UserResolver,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n","module.exports = \"/* Extra small devices (phones, 600px and down) */\\n@media only screen and (max-width: 600px) {\\n\\t.main-container {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tflex-wrap: nowrap;\\n\\t}\\n\\t.card-container {\\n\\t\\tmargin: 10px;\\n\\t}\\n\\n\\tmat-card {\\n\\t\\twidth: 100%;\\n\\t}\\n\\tmat-icon {\\n\\t\\tmargin-right: 5px;\\n\\t}\\n\\n\\t.with-icon {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t}\\n\\n\\ta {\\n\\t\\ttext-decoration: none;\\n\\t\\tcolor: black;\\n\\t}\\n\\n\\ta:hover {\\n\\t\\tcolor: #6C88B7;\\n\\t}\\n}\\n/* Small devices (portrait tablets and large phones, 600px and up) */\\n@media only screen and (min-width: 600px) {\\n\\t.main-container {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: row;\\n\\t\\tflex-wrap: wrap;\\n\\t}\\n\\n\\t.card-container {\\n\\t\\tmargin: 10px;\\n\\t\\tflex-basis: 30%;\\n\\t}\\n\\n\\tmat-card {\\n\\t\\twidth: 100%;\\n\\t}\\n\\tmat-icon {\\n\\t\\tmargin-right: 5px;\\n\\t}\\n\\n\\t.with-icon {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t}\\n\\n\\ta {\\n\\t\\ttext-decoration: none;\\n\\t\\tcolor: black;\\n\\t}\\n\\n\\ta:hover {\\n\\t\\tcolor: #6C88B7;\\n\\t}\\n}\\n/* Medium devices (landscape tablets, 768px and up) */\\n@media only screen and (min-width: 768px) {\\n\\t.main-container {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: row;\\n\\t\\tflex-wrap: wrap;\\n\\t}\\n\\n\\t.card-container {\\n\\t\\tmargin: 10px;\\n\\t\\tflex-basis: 30%;\\n\\t}\\n\\n\\tmat-card {\\n\\t\\twidth: 100%;\\n\\t}\\n\\tmat-icon {\\n\\t\\tmargin-right: 5px;\\n\\t}\\n\\n\\t.with-icon {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t}\\n\\n\\ta {\\n\\t\\ttext-decoration: none;\\n\\t\\tcolor: black;\\n\\t}\\n\\n\\ta:hover {\\n\\t\\tcolor: #6C88B7;\\n\\t}\\n}\\n/* Large devices (laptops/desktops, 992px and up) */\\n@media only screen and (min-width: 992px) {\\n\\t.main-container {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: row;\\n\\t\\tflex-wrap: wrap;\\n\\t}\\n\\n\\t.card-container {\\n\\t\\tmargin: 10px;\\n\\t\\tflex-basis: 30%;\\n\\t}\\n\\n\\tmat-card {\\n\\t\\twidth: 100%;\\n\\t}\\n\\tmat-icon {\\n\\t\\tmargin-right: 5px;\\n\\t}\\n\\n\\t.with-icon {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t}\\n\\n\\ta {\\n\\t\\ttext-decoration: none;\\n\\t\\tcolor: black;\\n\\t}\\n\\n\\ta:hover {\\n\\t\\tcolor: #6C88B7;\\n\\t}\\n}\\n/* Extra large devices (large laptops and desktops, 1200px and up) */\\n@media only screen and (min-width: 1200px) {\\n\\t.main-container {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: row;\\n\\t\\tflex-wrap: wrap;\\n\\t}\\n\\n\\t.card-container {\\n\\t\\tmargin: 10px;\\n\\t\\tflex-basis: 30%;\\n\\t}\\n\\n\\tmat-card {\\n\\t\\twidth: 100%;\\n\\t}\\n\\tmat-icon {\\n\\t\\tmargin-right: 5px;\\n\\t}\\n\\n\\t.with-icon {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t}\\n\\n\\ta {\\n\\t\\ttext-decoration: none;\\n\\t\\tcolor: black;\\n\\t}\\n\\n\\ta:hover {\\n\\t\\tcolor: #6C88B7;\\n\\t}\\n}\"","module.exports = \"<div class=\\\"main-container\\\">\\n\\t<!-- Users Card -->\\n\\t<div class=\\\"card-container\\\">\\n\\t\\t<mat-card>\\n\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t<a routerLink=\\\"../hackerdata\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"with-icon\\\">\\n\\t\\t\\t\\t  \\t\\t<mat-icon>people</mat-icon><h4>Hackers</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</mat-card-content>\\n\\t\\t</mat-card>\\n\\t</div>\\n\\n\\t<!-- Events Card -->\\n\\t<div class=\\\"card-container\\\">\\n\\t\\t<mat-card>\\n\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t<a routerLink=\\\"../events\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"with-icon\\\">\\n\\t\\t\\t\\t  \\t\\t<mat-icon>event</mat-icon><h4>Events</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</mat-card-content>\\n\\t\\t</mat-card>\\n\\t</div>\\n\\n\\t<!-- Locations Card -->\\n\\t<div class=\\\"card-container\\\">\\n\\t\\t<mat-card>\\n\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t<a routerLink=\\\"../locations\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"with-icon\\\">\\n\\t\\t\\t\\t  \\t\\t<mat-icon>location_on</mat-icon><h4>Locations</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</mat-card-content>\\n\\t\\t</mat-card>\\n\\t</div>\\n\\n\\t<!-- Item Checkout Card -->\\n\\t<div class=\\\"card-container\\\">\\n\\t\\t<mat-card>\\n\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t<a routerLink=\\\"../checkout\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"with-icon\\\">\\n\\t\\t\\t\\t  \\t\\t<mat-icon>weekend</mat-icon><h4>Item Checkout</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</mat-card-content>\\n\\t\\t</mat-card>\\n\\t</div>\\n\\n\\t<!-- Extra Credit Card -->\\n\\t<div class=\\\"card-container\\\">\\n\\t\\t<mat-card>\\n\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t<a routerLink=\\\"../classes\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"with-icon\\\">\\n\\t\\t\\t\\t  \\t\\t<mat-icon>class</mat-icon><h4>Extra Credit</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</mat-card-content>\\n\\t\\t</mat-card>\\n\\t</div>\\n\\n\\t<!-- Event Statistics Card -->\\n\\t<div class=\\\"card-container\\\">\\n\\t\\t<mat-card>\\n\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t<a routerLink=\\\"../eventstats\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"with-icon\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>looks</mat-icon><h4>Event Statistics</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</mat-card-content>\\n\\t\\t</mat-card>\\n\\t</div>\\n</div>\\n\"","/*\n * Dashboard style landing page when logging into the Admin Web Application. It has card style links for\n * easy access to different pages. Each link is protected by the router guard.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { ICountModel } from '../../models/count-model';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  providers: [HttpAdminService],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n\n  /*\n   * Local private integers representing the counts in the latest stats header.\n   */\n  private preRegStatNumber = -1;\n  private regStatNumber = -1;\n  private rsvpStatNumber = -1;\n  private checkInStatNumber = -1;\n\n  /*\n   * Error array used to display error messages\n   */\n  private errors: Error = null;\n\n  constructor(\n    public adminService: HttpAdminService,\n    private activatedRoute: ActivatedRoute,\n    ) {\n  }\n\n  /**\n   * On the initilization of all angular components, execute the functions\n   *\n   * Retrieves the current user from authentication then sets the local variable\n   *\n   * @exception: Failure on the auth service will cause an error to be displayed on the /userdata/ route page\n   * @exception: Issue with the user not existing in the auth service database will cause an error to be\n   *             displayed on the /userdata/ route page\n   */\n  ngOnInit() {\n    this.activatedRoute.data\n      .subscribe((user) => {\n      });\n  }\n}\n\n\n","module.exports = \"mat-cell a {\\n    text-decoration: none;\\n    color: black;\\n  }\\n  \\nmat-cell a:hover {\\n    color: #6C88B7;\\n}\\n  \\n.stats-filter {\\n  margin: 10px;\\n  font-size: small;\\n  flex-basis: 50%;\\n}\\n  \\n.stats-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n  \\n.title-button-group {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-basis: 25%;\\n}\"","module.exports = \"<mat-card>\\n\\t<mat-card-title>\\n\\t\\t<div class='stats-container'>\\n\\t\\t\\tEvent Statistics\\n\\t\\t\\t<mat-form-field class=\\\"stats-filter\\\">\\n\\t\\t\\t\\t<input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" id=\\\"stats-filter\\\">\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\t<div class = \\\"title-button-group\\\">\\n\\t\\t\\t\\t<div class=\\\"context-menu\\\">\\n\\t\\t\\t\\t\\t<button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class = \\\"menu-icon\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>settings</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<mat-menu #menu=\\\"matMenu\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-menu-item>\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>build</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t<span>Settings</span>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t<button mat-menu-item (click)=\\\"refreshData()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>refresh</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t<span>Refresh Data</span>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</mat-menu>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</mat-card-title>\\n\\t<mat-card-content>\\n\\t\\t<mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\t\\t\\t<!-- Event Title Column -->\\n\\t\\t\\t<ng-container matColumnDef=\\\"eventTitle\\\">\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef>Event Title</mat-header-cell>\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let event\\\">\\n\\t\\t\\t\\t\\t<a (click)='viewAttendanceData(event.attendees)'>{{event.event_title}}</a>\\n\\t\\t\\t\\t</mat-cell>\\n\\t\\t\\t</ng-container>\\n\\t\\n\\t\\t\\t<!-- Event Attendance Column -->\\n\\t\\t\\t<ng-container matColumnDef=\\\"eventAttendance\\\">\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef>Scans / Attendance</mat-header-cell>\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let event\\\">{{event.attendees.length}}</mat-cell>\\n\\t\\t\\t</ng-container>\\n\\t\\n\\t\\t\\t<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n\\t\\t\\t<mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\t\\t</mat-table>\\n\\t\\t<mat-paginator #paginator\\n\\t\\t\\t[pageSize]=\\\"10\\\"\\n\\t\\t\\t[pageSizeOptions]=\\\"[50,100,500]\\\"\\n\\t\\t\\t[showFirstLastButtons]=\\\"true\\\">\\n\\t\\t</mat-paginator>\\n\\t</mat-card-content>\\n</mat-card>\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatTableDataSource,\n} from '@angular/material';\nimport { AlertService } from 'ngx-alerts';\nimport { IHackerRegistrationModel } from 'app/models/hacker-registration-model';\nimport { IEventStatisticsModel } from '../../models/event-statistic-model';\nimport { ViewEventAttendanceDialogComponent } from './view-event-attendance/view-event-attendance';\n\n@Component({\n  selector: 'app-event-stats',\n  templateUrl: './event-stats.component.html',\n  styleUrls: ['./event-stats.component.css'],\n})\nexport class EventStatsComponent implements OnInit {\n\n  private static tableCols = ['eventTitle', 'eventAttendance'];\n  public displayedColumns = EventStatsComponent.tableCols;\n  public dataSource = new MatTableDataSource<any>([]);\n  private errors: Error = null;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    public adminService: HttpAdminService,\n    public activatedRoute: ActivatedRoute,\n    public alertsService: AlertService,\n    public dialog: MatDialog,\n    ) { }\n  /*\n\t* Error array used to display error messages\n\t*/\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((user) => {\n      if (user) {\n        this.getEventData();\n      } else {\n        this.errors = new Error('Error: No user');\n        console.error('No User');\n      }\n    },                                 (error) => {\n      this.errors = new Error('Error: Issue with authentication of user');\n      console.error(error);\n    });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  getEventData() {\n    this.adminService.getEventAttendance().subscribe((data: IEventStatisticsModel) => {\n      let formattedData: IEventStatisticsModel[] = [];\n      formattedData = Object.keys(data).map((key) => {\n        return data[key];\n      });\n\n      this.displayedColumns = EventStatsComponent.tableCols;\n      this.dataSource.data = formattedData;\n    },                                               (error) => {\n      console.error(error);\n      this.alertsService.danger('Error: Issue with getting the event attendance');\n    })\n  }\n\n  refreshData() {\n    this.getEventData();\n  }\n\n  /**\n   * Modify the data source to only have the filtered results\n   *\n   * Convert the filter value (string) to lowercase and remove any additional spacing. Then\n   * set the filter property of the local datasource to the new filter value.\n   *\n   * @param: filterValue  String to filter the datasource\n   */\n  applyFilter(filterValue: string) {\n    const mFilterValue = filterValue.trim().toLowerCase();\n    this.dataSource.filter = mFilterValue;\n  }\n\n\n  viewAttendanceData(hacker: IHackerRegistrationModel) {\n    const dialogRef = this.dialog.open(ViewEventAttendanceDialogComponent, {\n      height: '600px',\n      width: '750px',\n      data: hacker,\n      autoFocus: false,\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\n    <mat-card-title>\\n        Event Attendees\\n    </mat-card-title>\\n    <mat-card-content>\\n        <mat-table #table [dataSource]=\\\"dataSource\\\">\\n            <!-- Hacker First Name Column -->\\n            <ng-container matColumnDef=\\\"hackerFirstName\\\">\\n                <mat-header-cell *matHeaderCellDef>First Name</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let hacker\\\">{{hacker.firstname}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Hacker Last Name Column -->\\n            <ng-container matColumnDef=\\\"hackerLastName\\\">\\n                <mat-header-cell *matHeaderCellDef>Last Name</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let hacker\\\">{{hacker.lastname}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Hacker Email Column -->\\n            <ng-container matColumnDef=\\\"hackerEmail\\\">\\n                <mat-header-cell *matHeaderCellDef>Email</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let hacker\\\">{{hacker.email}}</mat-cell>\\n            </ng-container>\\n    \\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n        <mat-paginator #paginator\\n            [pageSize]=\\\"10\\\"\\n            [pageSizeOptions]=\\\"[50,100,500]\\\"\\n            [showFirstLastButtons]=\\\"true\\\">\\n        </mat-paginator>\\n    </mat-card-content>\\n</mat-card>\"","import { AfterViewInit, Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { IHackerRegistrationModel } from 'app/models/hacker-registration-model';\n\n@Component({\n  selector: 'app-view-event-attendance-dialog',\n  templateUrl: './view-event-attendance.html',\n  styleUrls: ['./view-event-attendance.css'],\n})\nexport class ViewEventAttendanceDialogComponent {\n\n  private static tableCols = ['hackerFirstName', 'hackerLastName', 'hackerEmail'];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private attendeeData: IHackerRegistrationModel[];\n  public displayedColumns = ViewEventAttendanceDialogComponent.tableCols;\n  public dataSource = new MatTableDataSource<any>([]);\n\n\n  constructor(public dialogRef: MatDialogRef<ViewEventAttendanceDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.attendeeData = data;\n    this.displayedColumns = ViewEventAttendanceDialogComponent.tableCols;\n    this.dataSource.data = this.attendeeData;\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \".mat-dialog-actions {\\n\\tdisplay: inline-block;\\n}\\n\\n.mat-form-field {\\n    float: right;\\n    width: 100%;\\n}\"","module.exports = \"<h1 mat-dialog-title>Add User</h1>\\n<div mat-dialog-content>\\n    <p>Enter User Email</p>\\n\\t<mat-form-field class=\\\"user-maker\\\" class=\\\"col-sm-6 col-sm-offset-3\\\">\\n\\t    <input matInput #usermaker placeholder=\\\"User Email\\\" id=\\\"user-maker\\\">\\n\\t</mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n\\t<button mat-button mat-dialog-close>No Thanks</button>\\n\\t<button mat-button [mat-dialog-close]=\\\"usermaker.value\\\"> Add User </button>\\n</div>\\n    \"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-add-user-class-dialog',\n  templateUrl: './add-user-class-dialog.html',\n  styleUrls: ['./add-user-class-dialog.css'],\n})\nexport class AddUserClassDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<AddUserClassDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \".table-container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 75vh;\\n}\\n\\n.mat-header-cell.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.email-filter {\\n  display: block;\\n  width: 80%;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.mat-column-select {\\n  overflow: visible;\\n}\\n\\n.mat-header-row {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  background: white;\\n  z-index: 9999;\\n}\\n\\n.mat-card-title {\\n    display: flex;\\n}\\n\\n.card-title {\\n    flex: 5;\\n}\\n\\n.context-menu {\\n    float: right;\\n}\\n\\n.item-selected {\\n    background-color: rgba(170, 202, 204, 0.3);\\n    color: #6C88B7;\\n    font-size: small;\\n}\\n\\n.item-selected p {\\n    margin: 10px;\\n}\"","module.exports = \"<br>\\n<mat-card>\\n    <mat-card-title>\\n        <div *ngIf=\\\"selection.isEmpty(); else showSelection\\\" class=\\\"card-title\\\">\\n            <p>\\n            Extra Credit Classes\\n            </p>\\n        </div>\\n        <ng-template #showSelection>\\n            <div class=\\\"item-selected card-title\\\">\\n                <p>\\n                {{selection.selected.length === 1 ? selection.selected.length + \\\" row selected\\\" :\\n                selection.selected.length + \\\" rows selected\\\"}}\\n                <p>\\n            </div>\\n        </ng-template>\\n        <div class=\\\"context-menu\\\">\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n                <button mat-menu-item (click)=\\\"refreshData()\\\">\\n                    <mat-icon>refresh</mat-icon>\\n                    <span>Refresh Data</span>\\n                </button>\\n                <button mat-menu-item *ngIf=\\\"!selection.isEmpty()\\\" (click)=\\\"addUserToClasses()\\\">\\n                    <mat-icon>add</mat-icon>\\n                    <span>Add User to Classes</span>\\n                </button>\\n            </mat-menu>\\n        </div>\\n    </mat-card-title>\\n    <mat-card-content>\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n            <!-- Checkbox Column -->\\n            <ng-container matColumnDef=\\\"select\\\">\\n                <mat-header-cell *matHeaderCellDef>\\n                    <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                                  [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                                  [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                    </mat-checkbox>\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\">\\n                    <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                                  (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                                  [checked]=\\\"selection.isSelected(row)\\\">\\n                    </mat-checkbox>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <!--  Class Name Column -->\\n            <ng-container matColumnDef=\\\"class_name\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Class Name</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let class\\\"> {{class.class_name}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- UID Column -->\\n            <ng-container matColumnDef=\\\"uid\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Class UID</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let class\\\"> {{class.uid}}</mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n        <mat-paginator #paginator\\n                       [pageSize]=\\\"10\\\"\\n                       [pageSizeOptions]=\\\"[50,100,500]\\\"\\n                       [showFirstLastButtons]=\\\"true\\\">\\n        </mat-paginator>\\n    </mat-card-content>\\n</mat-card>\\n\"","/**\n * TODO: Add docstring explaining component\n */\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\n\nimport {\n  MatDialog,\n  MatPaginator,\n  MatSort,\n  MatTableDataSource,\n} from '@angular/material';\nimport { AngularFireAuth } from 'angularfire2/auth';\n\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { AddUserClassDialogComponent } from './add-user-class-dialog/add-user-class-dialog';\nimport { AlertService } from 'ngx-alerts';\n\n@Component({\n  selector: 'app-extra-credit-classes',\n  providers: [\n    HttpAdminService,\n  ],\n  templateUrl: './extra-credit-classes.component.html',\n  styleUrls: ['./extra-credit-classes.component.css'],\n})\nexport class ExtraCreditClassesComponent implements OnInit, AfterViewInit {\n  private static regCols = ['select', 'class_name', 'uid'];\n  displayedColumns = ExtraCreditClassesComponent.regCols;\n  public dataSource = new MatTableDataSource<any>([]);\n  private user: firebase.User;\n  selection = new SelectionModel<any>(true, []);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) table: MatSort;\n\n  constructor(\n    public adminService: HttpAdminService,\n    public afAuth: AngularFireAuth,\n    public dialog: MatDialog,\n    public alertsService: AlertService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.afAuth.auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.user = user;\n        this.onClassesClick();\n      } else {\n        console.error('NO USER');\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.table;\n  }\n\n  applyFilter(filterValue: string) {\n    let mFilterValue = filterValue.trim();\n    mFilterValue = mFilterValue.toLowerCase();\n    this.dataSource.filter = mFilterValue;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n    this.selection.clear() :\n    this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  onClassesClick() {\n    this.adminService.getExtraCreditClasses()\n        .subscribe((data) => {\n          this.displayedColumns = ExtraCreditClassesComponent.regCols;\n          this.dataSource.data = data;\n        },         (error) => {\n          console.error(error);\n        });\n  }\n\n  refreshData() {\n    this.onClassesClick();\n  }\n\n  addUserToClasses() {\n    const dialogRef = this.dialog.open(AddUserClassDialogComponent, {\n      height: '240px',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.adminService.getUserUID(result)\n            .subscribe((resp: {uid: string}) => {\n              this.selection.selected.forEach(({ uid }) => {\n                this.adminService.addHackerToExtraCreditClass(resp.uid, uid)\n                .subscribe((rest) => {\n                  this.alertsService.success('Success: Added Hacker');\n                },         (error) => {\n                  console.error(error);\n                  this.alertsService.danger('Error: Failed to add Hacker');\n                });\n              });\n            },         (error) => {\n              console.error(error);\n              this.alertsService.warning('Error: Issue with the provided Email');\n            });\n      }\n    });\n  }\n}\n\n","module.exports = \".main-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.title-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  margin: 20px;\\n}\\n\\n.section-title-letter {\\n    display: inline-block;\\n    font-size: 2.5em;\\n}\\n\\n.section-title-word {\\n    display: inline-block;\\n    white-space: nowrap;\\n    padding-right: 1.5%;\\n}\\n\\n.body-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.latest-container {\\n  margin: 10px;\\n}\\n\\n.table-container {\\n  margin: 10px;\\n}\\n\\n.table-title-container {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.latest-container mat-card-content {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-around;\\n\\n}\\n\\n.stat-container {\\n  margin: 10px !important;\\n  height: 100px;\\n  width: 200px;\\n}\\n\\n.stat-container h3 {\\n  text-align: center;\\n}\\n\\nmat-header-cell.master-select, mat-cell.select-box {\\n  max-width: 100px;\\n}\\n\\n.card-title {\\n  font-size: large;\\n  flex-basis: 25%;\\n}\\n\\n.card-title p {\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  flex-basis: 25%;\\n}\\n\\n.item-selected {\\n  background-color: rgba(170, 202, 204, 0.3);\\n  color: #6C88B7;\\n  font-size: large;\\n}\\n\\n.item-selected p {\\n    margin: 10px;\\n}\\n\\nmat-icon.check-circle-green {\\n  color: green;\\n}\\n\\n.check-in-button{\\n  width: 24px;\\n}\\n\\n.check-in-button:hover{\\n  color: green;\\n}\\n\\n.email-filter {\\n  margin: 10px;\\n  font-size: small;\\n  flex-basis: 50%;\\n}\\n\\n.title-button-group {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-basis: 25%;\\n}\\n\\nmat-cell a {\\n  text-decoration: none;\\n  color: black;\\n}\\n\\nmat-cell a:hover {\\n  color: #6C88B7;\\n}\\n\\n.change-hackathon-container {\\n  display: inline-flex;\\n  flex-direction: row;\\n  align-items: center;\\n}\\n\\n@font-face {\\n  font-family: 'Cornerstone';\\n  src: url('/assets/fonts/Cornerstone.ttf');\\n}\\n\\n.header-text {\\n  font-family: 'Cornerstone';\\n  font-size: 3.5em;\\n  line-height: 100%;\\n  margin-top: 25px;\\n}\\n\\n.text-center {\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n  margin: 0 auto;\\n  width: 50%;\\n}\"","module.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"title-container\\\">\\n        <div class=\\\"header-text text-center\\\">Hacker Data</div>\\n    </div>\\n    <div class='change-hackathon-container'>\\n        <mat-form-field color=\\\"primary\\\">\\n            <mat-select placeholder=\\\"View hackathon\\\" (selectionChange)=\\\"changeSelectedHackathon()\\\" [(ngModel)]=\\\"selectedHackathon\\\" name=\\\"hackathon\\\">\\n                <mat-option *ngFor=\\\"let hackathon of hackathonOptions\\\" [value]=\\\"hackathon\\\">\\n                    {{hackathon.viewValue}}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n    </div>\\n    <div class=\\\"body-container\\\">\\n            <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\">\\n                {{ errors.message }}\\n            </div>\\n        <div class=\\\"latest-container\\\">\\n            <mat-card>\\n                <mat-card-title>\\n                    <b>Latest Stats</b>\\n                </mat-card-title>\\n                <mat-card-content>\\n                    <div class = \\\"stat-container\\\">\\n                        <h3> {{preRegStatNumber}} </h3>\\n                        <h3> Pre-Registrations </h3>\\n                    </div>\\n                    <div class = \\\"stat-container\\\">\\n                        <h3> {{regStatNumber}} </h3>\\n                        <h3> Registrations </h3>\\n                    </div>\\n                    <div class = \\\"stat-container\\\">\\n                        <h3> {{rsvpStatNumber}} </h3>\\n                        <h3> RSVP </h3>\\n                    </div>\\n                    <div class = \\\"stat-container\\\">\\n                        <h3> {{checkInStatNumber}} </h3>\\n                        <h3> Check-In </h3>\\n                    </div>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n        <div class=\\\"table-container\\\">\\n            <mat-card>\\n                <mat-card-title>\\n                    <b>Hackers</b>\\n                    <div class=\\\"table-title-container\\\">\\n                        <div *ngIf=\\\"selection.isEmpty(); else showSelection\\\" class=\\\"card-title\\\">\\n                            <p> Registration Data </p>\\n                        </div>\\n                        <ng-template #showSelection>\\n                            <div class=\\\"item-selected card-title\\\">\\n                                <p>\\n                                {{selection.selected.length === 1 ? selection.selected.length + \\\" row selected\\\" :\\n                                selection.selected.length + \\\" rows selected\\\"}}\\n                                </p>\\n                            </div>\\n                        </ng-template>\\n                        <mat-form-field style=\\\"font-size: medium;\\\">\\n                            <mat-select placeholder=\\\"Filter By\\\" (selectionChange)=\\\"onFilterSelection()\\\" [(value)]=\\\"filterSelect\\\">\\n                                <mat-option>None</mat-option>\\n                                <mat-option *ngFor=\\\"let option of searchFilterOptions\\\" [value]='option.value'>\\n                                    {{option.viewValue}}\\n                                </mat-option>\\n                            </mat-select>\\n                            </mat-form-field>\\n                        <mat-form-field class=\\\"email-filter\\\">\\n                            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" id=\\\"email-filter\\\">\\n                        </mat-form-field>\\n                        <div class = \\\"title-button-group\\\">\\n                            <div class=\\\"context-menu\\\">\\n                                <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class = \\\"menu-icon\\\">\\n                                    <mat-icon>settings</mat-icon>\\n                                </button>\\n                                <mat-menu #menu=\\\"matMenu\\\">\\n                                    <button mat-menu-item>\\n                                        <mat-icon>build</mat-icon>\\n                                        <span>Settings</span>\\n                                    </button>\\n                                    <button mat-menu-item (click)=\\\"refreshData()\\\">\\n                                        <mat-icon>refresh</mat-icon>\\n                                        <span>Refresh Data</span>\\n                                    </button>\\n                                    <button mat-menu-item *ngIf=\\\"!selection.isEmpty()\\\" (click)=\\\"sendEmail()\\\">\\n                                        <mat-icon>email</mat-icon>\\n                                        <span>Send email</span>\\n                                    </button>\\n                                </mat-menu>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </mat-card-title>\\n                <mat-card-content>\\n                    <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n                        <!-- Select Column -->\\n                        <ng-container matColumnDef=\\\"select\\\">\\n                            <mat-header-cell *matHeaderCellDef class=\\\"master-select\\\">\\n                                <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                                              [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                                              [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                                </mat-checkbox>\\n                            </mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let row\\\" class=\\\"select-box\\\">\\n                                <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                                              (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                                              [checked]=\\\"selection.isSelected(row)\\\">\\n                                </mat-checkbox>\\n                            </mat-cell>\\n                        </ng-container>\\n\\n                         <!-- Full Name Column -->\\n                        <ng-container matColumnDef=\\\"name\\\">\\n                            <mat-header-cell *matHeaderCellDef>Hacker</mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let hacker\\\"> \\n                                <a (click)='viewAdditionalHackerData(hacker)'>{{hacker.firstname}} {{hacker.lastname}}</a>\\n                            </mat-cell>\\n                        </ng-container>\\n                        \\n                        <!-- Last Name Column\\n                        <ng-container matColumnDef=\\\"lastname\\\">\\n                            <mat-header-cell *matHeaderCellDef> Last Name</mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let user\\\"> {{user.lastname}}</mat-cell>\\n                        </ng-container> -->\\n\\n                        <!-- Email Column -->\\n                        <ng-container matColumnDef=\\\"email\\\">\\n                            <mat-header-cell *matHeaderCellDef> Email</mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let user\\\"> {{user.email}}</mat-cell>\\n                        </ng-container>\\n\\n                        <!-- University Column -->\\n                        <ng-container matColumnDef=\\\"university\\\">\\n                            <mat-header-cell *matHeaderCellDef> University</mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let user\\\"> {{user.university}}</mat-cell>\\n                        </ng-container>\\n\\n                        <!-- Academic Year Column -->\\n                        <ng-container matColumnDef=\\\"academic_year\\\">\\n                            <mat-header-cell *matHeaderCellDef class = \\\"academic-year\\\"> Academic Year</mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let user\\\" class = \\\"academic-year\\\"> {{user.academic_year}}</mat-cell>\\n                        </ng-container>\\n\\n                        <!--  Pin Number Column -->\\n                        <ng-container matColumnDef=\\\"pin\\\">\\n                            <mat-header-cell *matHeaderCellDef class = \\\"pin-number\\\"> Pin Number</mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let user\\\" class = \\\"pin-number\\\"> {{user.pin}} </mat-cell>\\n                        </ng-container>\\n\\n                        <!-- Icon Display Column -->\\n                        <ng-container matColumnDef=\\\"display\\\">\\n                            <mat-header-cell *matHeaderCellDef class = \\\"display\\\"> Pre/Reg/RSVP/CheckIn </mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let user\\\" class = \\\"display-cell\\\">\\n\\n                                <!-- Pre-Registered -->\\n                                <ng-template [ngIf]=\\\"checkHackerStatus(user, 'PreReg')\\\" [ngIfElse] = \\\"preRegisterEmpty\\\">\\n                                    <mat-icon class=\\\"check-circle-green\\\">check_circle</mat-icon>\\n                                </ng-template>\\n                                <ng-template #preRegisterEmpty>\\n                                    <mat-icon>panorama_fish_eye</mat-icon>\\n                                </ng-template>\\n\\n                                <!-- Registered -->\\n                                <ng-template [ngIf]=\\\"checkHackerStatus(user, 'Reg')\\\" [ngIfElse] = \\\"registerEmpty\\\">\\n                                    <mat-icon class=\\\"check-circle-green\\\">check_circle</mat-icon>\\n                                </ng-template>\\n                                <ng-template #registerEmpty>\\n                                    <mat-icon>panorama_fish_eye</mat-icon>\\n                                </ng-template>\\n\\n                                <!-- RSVP --> \\n                                <ng-template [ngIf]=\\\"checkHackerStatus(user, 'RSVP')\\\" [ngIfElse] = \\\"rsvpEmpty\\\">\\n                                    <mat-icon class=\\\"check-circle-green\\\">check_circle</mat-icon>\\n                                </ng-template>\\n                                <ng-template #rsvpEmpty>\\n                                    <mat-icon>panorama_fish_eye</mat-icon>\\n                                </ng-template>\\n\\n                                <!-- Check-In -->\\n                                <ng-template [ngIf]=\\\"checkHackerStatus(user, 'CheckIn')\\\" [ngIfElse] = \\\"checkinEmpty\\\">\\n                                    <mat-icon class=\\\"check-circle-green\\\">check_circle</mat-icon>\\n                                </ng-template>\\n                                <ng-template #checkinEmpty>\\n                                    <button mat-icon-button class = \\\"check-in-button\\\" (click) = \\\"onClickCheckedIn(user)\\\">\\n                                        <ng-template [ngIf]=\\\"user.check_in_status\\\" [ngIfElse] = \\\"unchecked\\\">\\n                                            <mat-icon class=\\\"check-circle-green\\\">check_circle</mat-icon>\\n                                        </ng-template>\\n                                        <ng-template #unchecked>\\n                                            <mat-icon>panorama_fish_eye</mat-icon>\\n                                        </ng-template>\\n                                    </button>\\n                                </ng-template>\\n                            </mat-cell>\\n                        </ng-container>\\n                        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n                    </mat-table>\\n                    <mat-paginator #paginator\\n                                   [pageSize]=\\\"10\\\"\\n                                   [pageSizeOptions]=\\\"[50,100,500]\\\"\\n                                   [showFirstLastButtons]=\\\"true\\\">\\n                    </mat-paginator>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\"","/**\n * User data component features a latest stats header and a user data table. The table serves\n * as a means of viewing, filtering, and modifying user data without directly accessing the database.\n * The latest stats header provides the reader with a count of the number of users in each category.\n */\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { NgProgress } from '@ngx-progressbar/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatSort,\n  MatTableDataSource,\n} from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\nimport { AppConstants } from '../../helpers/AppConstants';\nimport { EmailListService } from '../../services/email-list/email-list.service';\nimport { IHackerDataModel } from '../../models/hacker-model';\nimport { ViewHackerDataDialogComponent } from './view-hacker-data-dialog/view-hacker-data-dialog';\nimport { AlertService } from 'ngx-alerts';\nimport { IHackerRegistrationModel } from '../../models/hacker-registration-model';\nimport { IMatSelectionModel } from '../../models/interfaces/mat-selection-interface';\nimport { IHackathonModel } from '../../models/hackathon-model';\n\nenum HackerStatus {\n  PreReg = 'pre_uid',\n  Reg = 'uid',\n  RSVP = 'user_id',\n  CheckIn = 'user_uid',\n  NULL = '',\n}\n\n@Component({\n  selector: 'app-user-data',\n  providers: [\n    HttpAdminService,\n  ],\n  templateUrl: './hacker-data.component.html',\n  styleUrls: ['./hacker-data.component.css'],\n})\n\nexport class HackerDataComponent implements OnInit, AfterViewInit {\n  private static tableCols = [\n    'select', 'name', 'email', 'university', 'academic_year', 'pin', 'display',\n  ];\n\n  public displayedColumns = HackerDataComponent.tableCols;\n  public dataSource = new MatTableDataSource<any>([]);\n  public selection = new SelectionModel<any>(true, []);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) table: MatSort;\n\n  /*\n   * Local private integers representing the counts in the latest stats header\n   */\n  public preRegStatNumber = 0;\n  public regStatNumber = -1;\n  public rsvpStatNumber = 0;\n  public checkInStatNumber = -1;\n\n  /*\n   * Boolean variable for user editing Hacker Data\n   */\n  private canEditHackerData = false;\n\n  /*\n   * Error array used to display error messages\n   */\n  public errors: Error = null;\n\n  /*\n   * Table Filtering - array of categorys to filter by and currently selected category\n   */\n  private searchFilterOptions = [];\n  private filterSelect = '';\n  private orgFilterPredicate: (data: IHackerDataModel, filter: string) => boolean;\n\n  private activeHackathon: IHackathonModel;\n  private hackathonOptions: IMatSelectionModel[];\n  private selectedHackathon: IMatSelectionModel;\n\n  constructor(\n    public emailListService: EmailListService,\n    private router: Router,\n    private progressService: NgProgress,\n    public adminService: HttpAdminService,\n    public activatedRoute: ActivatedRoute,\n    public dialog: MatDialog,\n    public alertsService: AlertService,\n  ) {\n  }\n\n  /**\n   * On the initilization of all angular components, execute the functions\n   *\n   * Retrieves the current user from authentication then calls to check the user permission level.\n   * Then it calls to get the list of hackathons and stores a copy of the filter predicate.\n   *\n   * @exception: Failure on the auth service will cause an error to be displayed on the /userdata/ route page\n   * @exception: Issue with the user not existing in the auth service database will cause an error to be displayed\n   *              on the /userdata/ route page\n   */\n  ngOnInit() {\n    this.activeHackathon = null;\n    this.activatedRoute.data.subscribe((user) => {\n      if (user) {\n        this.checkUserPermissions();\n        this.getHackathons();\n        this.orgFilterPredicate = this.dataSource.filterPredicate\n      } else {\n        this.errors = new Error('Error: No user');\n        console.error('No User');\n      }\n    },                                 (error) => {\n      this.errors = new Error('Error: Issue with authentication of user');\n      console.error(error);\n    });\n  }\n\n  /**\n   * Gets a list of the all the available hackathons to view data for\n   *\n   * Retrieves a list of all the hackathons in the database to be able to switch between and sets up the\n   * drop down menu. Then signals to load the table data and update the latest statistics header.\n   *\n   * @exception: Failure with the admin service will cause an error to be displayed on the /userdata/ route page\n   */\n  getHackathons() {\n    this.adminService.getHackathons().subscribe((data: IHackathonModel[]) => {\n      this.hackathonOptions = [];\n      data.map((hackathon) => {\n        if (hackathon.active) {\n          hackathon.name += ' - Current';\n          this.activeHackathon = hackathon;\n        }\n        this.hackathonOptions.push({\n          value: hackathon.uid, viewValue: hackathon.name,\n        });\n      });\n      this.loadTableData(this.activeHackathon.uid);\n      this.updateStatHeader(this.activeHackathon.uid);\n    },                                          (error) => {\n      this.hackathonOptions = [];\n      this.hackathonOptions.push({ value: 'error', viewValue: 'Error Occurred' });\n      this.errors = new Error('Error: Issue with loading the hackathon options. Please refresh the page.');\n      console.error(error);\n    });\n  }\n\n  /**\n   * After the initilization of all angular components, set the variables\n   *\n   * After the component view has been initialized, set the local data source paginiator property\n   * to the new instance of pagninator. Similar effect with sort.\n   */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.table;\n  }\n\n  /**\n   * Modify the data source to only have the filtered results\n   *\n   * Convert the filter value (string) to lowercase and remove any additional spacing. Then\n   * set the filter property of the local datasource to the new filter value.\n   *\n   * @param: filterValue  String to filter the datasource\n   */\n  applyFilter(filterValue: string) {\n    const mFilterValue = filterValue.trim().toLowerCase();\n    this.dataSource.filter = mFilterValue;\n  }\n\n  /**\n   * Sets the filter category for the search/filter box.\n   */\n  onFilterSelection() {\n    if (this.filterSelect) {\n      const filterProperty = this.filterSelect;\n      this.dataSource.filterPredicate =\n        (data: IHackerDataModel, filter: string) =>\n        data ? (data[filterProperty] ? data[filterProperty].toString().trim().toLowerCase().indexOf(filter) !== -1 : false) : false;\n    } else {\n      this.dataSource.filterPredicate = this.orgFilterPredicate;\n    }\n  }\n\n  /**\n   * Determine if the number of selected elements matches the total number of rows\n   */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /**\n   * Selects all rows if they are not all selected, otherwise clear selection.\n   */\n  masterToggle() {\n    this.isAllSelected() ?\n    this.selection.clear() :\n    this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /**\n   * Retrieve and load the hacker data into the datasource\n   *\n   * Call the admin service request to retrieve the hacker data. Then set the columns names to\n   * the entries defined in tableCols and the datasource data to the request response data.\n   *\n   * @exception: Failure with the admin service will cause an error to be displayed on the /userdata/ route page\n   */\n  loadTableData(hackathonUid?: string) {\n    this.adminService.getAllHackers(null, hackathonUid).subscribe((resp) => {\n      this.displayedColumns = HackerDataComponent.tableCols;\n      this.dataSource.data = resp.body.data;\n      this.progressService.complete();\n      let dataNames = Object.getOwnPropertyNames(resp.body.data[0]);\n      dataNames = dataNames.filter(option => !option.includes('id'));\n      dataNames.forEach((field) => {\n        const tempObj = { value: field, viewValue: field }\n        this.searchFilterOptions.push(tempObj);\n      });\n\n    },                                                            (error) => {\n      this.errors = new Error('Error: Issue with loading the hacker table. Please refresh the page.');\n      console.error(error);\n    });\n  }\n\n  /**\n   * Sets the email list of the email service to the rows selected and routes to the email page\n   *\n   * @exception: Failure with the admin service with cause an error to be displayed on the /userdata/ route page\n   */\n  sendEmail() {\n    this.emailListService.emailList = this.selection.selected;\n    this.router.navigate([AppConstants.EMAIL_ENDPOINT])\n        .catch(e => console.error(e));\n  }\n\n  /**\n   * Abstraction for refreshing the data in a table\n   */\n  refreshData(hackathon?: IMatSelectionModel) {\n    this.errors = null;\n    if (hackathon) {\n      this.loadTableData(hackathon.value);\n      this.updateStatHeader(hackathon.value);\n    } else {\n      this.loadTableData(this.activeHackathon.uid);\n      this.updateStatHeader(this.activeHackathon.uid);\n    }\n  }\n\n  /**\n   * Changes the selected hackathon view\n   */\n  changeSelectedHackathon() {\n    if (this.selectedHackathon) {\n      this.refreshData(this.selectedHackathon);\n    } else {\n      this.refreshData();\n    }\n  }\n\n  /**\n   * Conversion from one numerical base to another numerical base\n   *\n   * @param: str  String representing the number\n   * @param: fromBase Number representing the base to convert from\n   * @param: toBase  Number representing the base to conver to\n   */\n  convertFromBaseToBase(str: string, fromBase: number, toBase: number) {\n    if (str == null) {\n      return 'N/A';\n    }\n    const num = parseInt(str, fromBase);\n    return num.toString(toBase);\n  }\n\n  /**\n   * Returns the status of a hacker for Pre-Registration, Registration, RSVP, and Check-In\n   *\n   * @param hacker Hacker Information\n   * @param status Hacker Status\n   */\n  checkHackerStatus(hacker, status: string) {\n    let hs: HackerStatus;\n    switch (status) {\n      case 'PreReg': hs = HackerStatus.PreReg; break;\n      case 'Reg': hs = HackerStatus.Reg; break;\n      case 'RSVP': hs = HackerStatus.RSVP; break;\n      case 'CheckIn': hs = HackerStatus.CheckIn; break;\n      default: hs = HackerStatus.NULL;\n    }\n    if (hs !== HackerStatus.NULL) {\n      return !!hacker[hs];\n    }\n    return false;\n  }\n\n  /**\n   * Changes hacker status to checked in\n   *\n   * @param: hacker  Hacker Information from the datasource\n   */\n  onClickCheckedIn(hacker) {\n    hacker.check_in_status = true;\n    this.adminService.setHackerCheckedIn(hacker.uid)\n        .subscribe(() => {},\n                   (error) => {\n                     hacker.check_in_status = false;\n                     this.errors = new Error('Error: Issue with manually checking hacker in');\n                     console.error(error);\n                   });\n  }\n\n  /**\n   * Locally determines the permission level of the user and enables editing of hacker registration data if\n   * they are above the threshold: privilege level > 3\n   *\n   * @exception: Failure with the admin service with cause an error to be displayed on the /userdata/ route page\n   */\n  checkUserPermissions() {\n    this.adminService.getAdminStatus()\n        .subscribe((resp) => {\n          resp.privilege > 3 ? this.canEditHackerData = true : this.canEditHackerData = false;\n        },         (error) => {\n          this.errors = new Error('Error: Issue with getting the privilege level of the user');\n          console.error(error);\n        });\n  }\n\n  /**\n   * Updates the latest stats header with the current counts\n   *\n   * @exception: Failure with the admin service with cause an error to be displayed on the /userdata/ route page\n   */\n  updateStatHeader(hackathonUid?: string) {\n    this.adminService.getAllHackerCount(hackathonUid).subscribe((data) => {\n      this.preRegStatNumber = data.preregistration_count;\n      this.regStatNumber = data.registration_count;\n      this.rsvpStatNumber = data.rsvp_count;\n      this.checkInStatNumber = data.checkin_count;\n    },                                                          (error) => {\n      this.errors = new Error('Error: Issue with getting the number of hackers');\n      console.error(error);\n    });\n  }\n\n  /**\n   * Opens a modal for displaying more single hacker information, located in ViewUserDataDialog.ts\n   *\n   * @param: hacker  Hacker Information\n   */\n  viewAdditionalHackerData(hacker: IHackathonModel) {\n    const editPermission = this.canEditHackerData;\n    const dt = { editPermission, hacker };\n    const dialogRef = this.dialog.open(ViewHackerDataDialogComponent, {\n      height: '600px',\n      width: '750px',\n      data: dt,\n      autoFocus: false,\n    });\n    dialogRef.afterClosed().subscribe((result: IHackerRegistrationModel) => {\n      if (result) {\n        this.progressService.start();\n        this.adminService.updateHackerRegistration(result)\n        .subscribe((resp) => {\n          const hacker_name = result.firstName + ' ' + result.lastName;\n          this.alertsService.success('Updated Hacker Information for ' +  hacker_name);\n          this.refreshData();\n        },         (err) => {\n          console.log(err);\n          this.alertsService.danger('There was an issue with updating Hacker Information');\n        });\n      }\n    })\n  }\n}\n","module.exports = \"table {\\n    border-collapse: collapse;\\n    width: 100%;\\n}\\n\\ntd, th {\\n    border: 1px solid #dddddd;\\n    text-align: left;\\n    padding: 8px;\\n    max-width: 600px;\\n    overflow: auto;\\n}\\n\\n/* tr:nth-child(even) {\\n    background-color: #;\\n} */\\n\\na href {\\n\\ttext-decoration: none;\\n}\\n\\n.title-container p {\\n\\tmargin-top: 10px;\\n}\\n\\n.title-container {\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n\\talign-items: center;\\n}\\n\\n.university-form-field, .major-form-field, .race-form-field, .coding-form-field, \\n.referral-form-field, .project-form-field, .expectation-form-field {\\n    width: 100%;\\n}\\n\\n.diet-res-container {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\"","module.exports = \"<mat-card>\\n\\t<mat-card-title>\\n\\t\\t<div class=\\\"title-container\\\">\\n\\t\\t\\t<p>{{hacker_data.firstname}} {{hacker_data.lastname}}</p>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<mat-slide-toggle name=\\\"editToggle\\\" style=\\\"margin-left: 5px;\\\" color=\\\"accent\\\" (change)=\\\"onChange($event)\\\" [disabled]=\\\"editToggleDisabled\\\">Edit</mat-slide-toggle>\\n\\t\\t\\t\\t<button mat-icon-button color=\\\"primary\\\" (click)=\\\"onResetHackerDataClick()\\\" style=\\\"margin-left: 5px;\\\" matTooltip=\\\"Reset Hacker Data\\\"><mat-icon aria-label=\\\"Refresh button with refresh icon\\\">refresh</mat-icon></button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</mat-card-title>\\n\\t<mat-card-content>\\n\\t\\t<ng-container *ngIf=\\\"editToggleState; else noedit\\\"></ng-container>\\n\\t\\t<!-- Edit Toggle Enabled -->\\n\\t\\t<ng-template [ngIf]=\\\"editToggleState\\\">\\n\\t\\t\\t<table>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th>User Property</th>\\n\\t\\t\\t\\t\\t<th>User Response</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>First Name</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input matInput [(ngModel)]=\\\"hacker.firstname\\\" placeholder={{hacker_data.firstname}}>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Last Name</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input matInput [(ngModel)]=\\\"hacker.lastname\\\" placeholder={{hacker_data.lastname}}>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Email</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input matInput [(ngModel)]=\\\"hacker.email\\\" placeholder={{hacker_data.email}}>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Gender</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Gender\\\" [(ngModel)]=\\\"hacker.gender\\\" name=\\\"gender\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let gender of genderOptions\\\" [value]=\\\"gender.value\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{gender.viewValue}}\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>University</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"university-form-field\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder={{hacker_data.university}} [formControl]=\\\"schoolFormControl\\\" [matAutocomplete]=\\\"autoUniveristy\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-autocomplete #autoUniveristy=\\\"matAutocomplete\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let university of filteredSchoolOptions | async\\\" [value]=\\\"university\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{university}}\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t</mat-autocomplete>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Academic Year</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Academic Year\\\" [(ngModel)]=\\\"hacker.academic_year\\\" name=\\\"academic\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let year of academicYearOptions\\\" [value]=\\\"year.value\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{year.viewValue}}\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Major</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"major-form-field\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder={{hacker_data.major}} [formControl]=\\\"majorFormControl\\\" [matAutocomplete]=\\\"autoMajor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-autocomplete #autoMajor=\\\"matAutocomplete\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let major of filteredMajorOptions | async\\\" [value]=\\\"major\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{major}}\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t</mat-autocomplete>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Shirt Size</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Shirt Size\\\" [(ngModel)]=\\\"hacker.shirt_size\\\" name=\\\"shirt\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let size of shirtSizeOptions\\\" [value]=\\\"size.value\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{size.viewValue}}\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Dietary Restrictions</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"diet-res-container\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"diet-res-select-container\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"editToggleState\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Dietary Restriction\\\" [(value)]=\\\"dietaryResSelection\\\" name=\\\"dietary\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-option></mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let option of dietaryRestrictionOptions\\\" [value]=\\\"option.value\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{option.viewValue}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"dietaryResSelection === 'other'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput [(ngModel)]=\\\"hacker.dietary_restriction\\\" placeholder={{hacker_data.dietary_restriction}}>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Allergies</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input matInput [(ngModel)]=\\\"hacker.allergies\\\" placeholder={{hacker_data.allergies}}>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Travel Reimbursement</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tNo\\n\\t\\t\\t\\t\\t\\t<mat-slide-toggle name=\\\"travelReim\\\" [color]=\\\"accent\\\" (change)=\\\"onChange($event)\\\" [checked]=\\\"travelReimToggle\\\"></mat-slide-toggle>\\n\\t\\t\\t\\t\\t\\tYes\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>First Hackathon</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tNo\\n\\t\\t\\t\\t\\t\\t<mat-slide-toggle name=\\\"firstHack\\\" [color]=\\\"accent\\\" (change)=\\\"onChange($event)\\\" [checked]=\\\"firstHackToggle\\\"></mat-slide-toggle>\\n\\t\\t\\t\\t\\t\\tYes\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Phone Number</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input matInput [(ngModel)]=\\\"hacker.phone\\\" placeholder={{hacker_data.phone}}>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Race</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"race-form-field\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Race\\\" [(ngModel)]=\\\"hacker.race\\\" name=\\\"race\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let race of raceOptions\\\" [value]=\\\"race.value\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{race.viewValue}}\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Resume</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\tFeature not implemented!\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Coding Experience</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"coding-form-field\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Coding\\\" [(ngModel)]=\\\"hacker.coding_experience\\\" name=\\\"coding\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let option of codingOptions\\\" [value]=\\\"option.value\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{option.viewValue}}\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Eighteen Before Event</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tNo\\n\\t\\t\\t\\t\\t\\t<mat-slide-toggle name=\\\"eighteenBefore\\\" [color]=\\\"accent\\\" (change)=\\\"onChange($event)\\\" [checked]=\\\"eighteenBeforeToggle\\\"></mat-slide-toggle>\\n\\t\\t\\t\\t\\t\\tYes\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>MLH Code of Conduct (coc)</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tNo\\n\\t\\t\\t\\t\\t\\t<mat-slide-toggle name=\\\"mlhCoc\\\" [color]=\\\"accent\\\" (change)=\\\"onChange($event)\\\" [checked]=\\\"mlhCocToggle\\\"></mat-slide-toggle>\\n\\t\\t\\t\\t\\t\\tYes\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>MLH DCP (dcp)</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tNo\\n\\t\\t\\t\\t\\t\\t<mat-slide-toggle name=\\\"mlhDcp\\\" [color]=\\\"accent\\\" (change)=\\\"onChange($event)\\\" [checked]=\\\"mlhDcpToggle\\\"></mat-slide-toggle>\\n\\t\\t\\t\\t\\t\\tYes\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Referral Source</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"referral-form-field\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder={{hacker_data.referral}} [formControl]=\\\"referralFormControl\\\" [matAutocomplete]=\\\"autoReferral\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-autocomplete #autoReferral=\\\"matAutocomplete\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let source of filteredReferralOptions | async\\\" [value]=\\\"source\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{source}}\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t</mat-autocomplete>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Project Description</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"project-form-field\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<textarea matInput [(ngModel)]=\\\"hacker.project\\\" placeholder={{hacker_data.project}}></textarea>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Expectations</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"expectation-form-field\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n\\t\\t\\t\\t\\t\\t\\t<textarea matInput [(ngModel)]=\\\"hacker.expectations\\\" placeholder={{hacker_data.expectations}}></textarea>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Veteran Status</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tNo\\n\\t\\t\\t\\t\\t\\t<mat-slide-toggle name=\\\"veteran\\\" [color]=\\\"accent\\\" (change)=\\\"onChange($event)\\\" [checked]=\\\"veteranToggle\\\"></mat-slide-toggle>\\n\\t\\t\\t\\t\\t\\tYes\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Pin Number</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tFeature not implemented!\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Hackathon ID</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tFeature not implemented!\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Pre-Registration ID</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tFeature not implemented!\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Registration ID</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tFeature not implemented!\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>RSVP ID</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tFeature Not Implemented!\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Scan User ID</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\tFeature Not Implemented!\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</table>\\n\\t\\t</ng-template>\\n\\n\\t\\t<!-- Edit Toggle Disabled -->\\n\\t\\t<ng-template #noedit>\\n\\t\\t\\t<table>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th>User Property</th>\\n\\t\\t\\t\\t\\t<th>User Response</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>First Name</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.firstname\\\" [ngIfElse]=\\\"firstNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.firstname}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #firstNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Last Name</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.lastname\\\" [ngIfElse]=\\\"secondNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.lastname}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #secondNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Email</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.email\\\" [ngIfElse]=\\\"emailNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.email}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #emailNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Gender</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.gender\\\" [ngIfElse]=\\\"genderNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{capitalizeFirstLetter(hacker_data.gender)}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #genderNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>University</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.university\\\" [ngIfElse]=\\\"universityNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.university}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #universityNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Academic Year</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.academic_year\\\" [ngIfElse]=\\\"acadYearNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{capitalizeFirstLetter(hacker_data.academic_year)}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #acadYearNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Major</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.major\\\" [ngIfElse]=\\\"majorNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.major}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #majorNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Shirt Size</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.shirt_size\\\" [ngIfElse]=\\\"shirtNa\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{getSizeText(hacker_data.shirt_size)}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #shirtNa>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Dietary Restrictions</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.dietary_restriction\\\" [ngIfElse]=\\\"dietResNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.dietary_restriction}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #dietResNA>\\n\\t\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.dietary_restriction===false\\\" [ngIfElse]='dietResNAA'>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFalse\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t\\t<ng-template #dietResNAA>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Allergies</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.allergies\\\" [ngIfElse]=\\\"allegeryNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.allergies}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #allegeryNA>\\n\\t\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.allergies===false\\\" [ngIfElse]='allegeryNAA'>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFalse\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t\\t<ng-template #allegeryNAA>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Travel Reimbursement</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.travel_reimbursement\\\" [ngIfElse]=\\\"travelNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{capitalizeFirstLetter(hacker_data.travel_reimbursement.toString())}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #travelNA>\\n\\t\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.travel_reimbursement===false\\\" [ngIfElse]='travelNAA'>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFalse\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t\\t<ng-template #travelNAA>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>First Hackathon</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.first_hackathon\\\" [ngIfElse]=\\\"firstHackNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{capitalizeFirstLetter(hacker_data.first_hackathon.toString())}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #firstHackNA>\\n\\t\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.first_hackathon===false\\\" [ngIfElse]='firstHackNAA'>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFalse\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t\\t<ng-template #firstHackNAA>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Phone Number</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.phone\\\" [ngIfElse]=\\\"phoneNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{formatPhoneNumber(hacker_data.phone)}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #phoneNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Race</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.race\\\" [ngIfElse]=\\\"raceNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{capitalizeFirstLetter(hacker_data.race)}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #raceNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Resume</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.resume\\\" [ngIfElse]=\\\"resumeNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a href={{hacker_data.resume}} *ngIf=\\\"hacker_data.resume\\\" target=\\\"_blank\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"accent\\\" style=\\\"text-decoration: none;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfile_download\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #resumeNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Coding Experience</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.coding_experience\\\" [ngIfElse]=\\\"codingNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{capitalizeFirstLetter(hacker_data.coding_experience)}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #codingNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Eighteen Before Event</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.eighteenBeforeEvent\\\" [ngIfElse]=\\\"eighteenNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{capitalizeFirstLetter(hacker_data.eighteenBeforeEvent.toString())}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #eighteenNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>MLH Code of Conduct (coc)</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.mlh_coc\\\" [ngIfElse]=\\\"cocNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.mlh_coc}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #cocNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>MLH DCP (dcp)</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.mlh_dcp\\\" [ngIfElse]=\\\"dcpNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.mlh_dcp}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #dcpNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Referral Source</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.referral\\\" [ngIfElse]=\\\"referralNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.referral}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #referralNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Project Description</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.project\\\" [ngIfElse]=\\\"projectNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.project}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #projectNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Expectations</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.expectations\\\" [ngIfElse]=\\\"expectationNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.expectations}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #expectationNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Veteran Status</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.veteran\\\" [ngIfElse]=\\\"veteranNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.veteran}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #veteranNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Pin Number</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.pin\\\" [ngIfElse]=\\\"pinNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.pin}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #pinNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Hackathon ID</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.hackathon\\\" [ngIfElse]=\\\"hackathonNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.hackathon}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t<ng-template #hackathonNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Pre-Registration ID</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.pre_uid\\\" [ngIfElse]=\\\"preRegIdNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.pre_uid}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t<ng-template #preRegIdNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Registration ID</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.uid\\\" [ngIfElse]=\\\"regIdNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.uid}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t<ng-template #regIdNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>RSVP ID</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.user_id\\\" [ngIfElse]=\\\"rsvpIdNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.user_id}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t<ng-template #rsvpIdNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>Scan User ID</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<ng-template [ngIf]=\\\"hacker_data.user_uid\\\" [ngIfElse]=\\\"scanIdNA\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{hacker_data.user_uid}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t<ng-template #scanIdNA>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\tN/A\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</table>\\n\\t\\t</ng-template>\\n\\t\\t<ng-template [ngIf]=\\\"editToggleState\\\">\\n\\t\\t\\t\\t<button style=\\\"margin-top: 10px;\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmitButtonClick()\\\">Submit Registration Data Changes</button>\\n\\t\\t</ng-template>\\n\\t</mat-card-content>\\n</mat-card>\"","/*\n * Component shows a two column table of data for a single user. This is meant to be a pop-up\n * modal from the /userdata/ route when clicking on a person in the user data table on that\n * page.\n */\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatSlideToggleChange, MatSlideToggle, MatButton} from '@angular/material';\nimport { IHackerDataModel } from '../../../models/hacker-model';\nimport { FormControl } from '@angular/forms';\nimport { Observable, ObservableLike } from 'rxjs';\nimport { map, startWith, toArray } from 'rxjs/operators';\nimport { default as SchoolList } from '../../../../assets/schools.json';\nimport { default as MajorList } from '../../../../assets/majors.json';\nimport { default as ReferralList } from '../../../../assets/referral_sources.json';\nimport { IMatSelectionModel } from '../../../models/interfaces/mat-selection-interface'\n\n@Component({\n  selector: 'app-view-hacker-data-dialog',\n  templateUrl: './view-hacker-data-dialog.html',\n  styleUrls: ['./view-hacker-data-dialog.css'],\n})\nexport class ViewHackerDataDialogComponent implements OnInit {\n\n  private passed_data: any;\n  private hacker_data: IHackerDataModel;\n  private editToggleDisabled: boolean;\n  private editToggleState: boolean;\n  private hacker: IHackerDataModel;\n\n  private genderOptions: IMatSelectionModel[];\n  private academicYearOptions: IMatSelectionModel[];\n  private shirtSizeOptions: IMatSelectionModel[];\n  private dietaryRestrictionOptions: IMatSelectionModel[];\n  private raceOptions: IMatSelectionModel[];\n  private codingOptions: IMatSelectionModel[];\n\n  private schools: string[];\n  private schoolFormControl = new FormControl();\n  private filteredSchoolOptions: Observable<string[]>;\n\n  private majors: string[];\n  private majorFormControl = new FormControl();\n  private filteredMajorOptions: Observable<string[]>;\n\n  private referrals: string[];\n  private referralFormControl = new FormControl();\n  private filteredReferralOptions: Observable<string[]>;\n\n  private dietaryResSelection: string;\n  private travelReimToggle: boolean;\n  private firstHackToggle: boolean;\n  private eighteenBeforeToggle: boolean;\n  private mlhCocToggle: boolean;\n  private mlhDcpToggle: boolean;\n  private veteranToggle: boolean;\n\n  constructor(\n    public dialogRef: MatDialogRef<ViewHackerDataDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) {\n    this.passed_data = data;\n    this.hacker_data = this.passed_data.hacker;\n    this.hacker = Object.assign({}, this.hacker_data);\n  }\n\n  ngOnInit() {\n    this.editToggleState = false;\n    this.editToggleDisabled = !this.passed_data.editPermission;\n    this.setupToggles();\n    this.setupSelectionChoices();\n    this.setupAutoCompleteFilters();\n  }\n\n  private setupSelectionChoices() {\n    this.genderOptions = [\n      { value: 'male', viewValue: 'Male' },\n      { value: 'female', viewValue: 'Female' },\n      { value: 'non-binary', viewValue: 'Non-Binary' },\n      { value: 'no-disclose', viewValue: 'No-Disclose' },\n    ];\n    this.academicYearOptions = [\n      { value: 'freshmen', viewValue: 'Freshmen' },\n      { value: 'sophomore', viewValue: 'Sophomore' },\n      { value: 'junior', viewValue: 'Junior' },\n      { value: 'senior', viewValue: 'Senior' },\n      { value: 'graduate', viewValue: 'Graduate' },\n      { value: 'other', viewValue: 'Other' },\n    ];\n    this.shirtSizeOptions = [\n      { value: 'XS', viewValue: 'Extra Small' },\n      { value: 'S', viewValue: 'Small' },\n      { value: 'M', viewValue: 'Medium' },\n      { value: 'L', viewValue: 'Large' },\n      { value: 'XL', viewValue: 'Extra Large' },\n      { value: 'XXL', viewValue: 'Extra Extra Large' },\n    ];\n    this.dietaryRestrictionOptions = [\n      { value: 'none', viewValue: 'None' },\n      { value: 'vegetarian', viewValue: 'Vegetarian' },\n      { value: 'vegan', viewValue: 'Vegan' },\n      { value: 'kosher', viewValue: 'Kosher' },\n      { value: 'halal', viewValue: 'Halal' },\n      { value: 'gluten-free', viewValue: 'Gluten Free' },\n      { value: 'other', viewValue: 'Other' },\n    ];\n    this.raceOptions = [\n      { value: 'native-american', viewValue: 'Native American or Alaska Native' },\n      { value: 'asian', viewValue: 'Asian' },\n      { value: 'african-american', viewValue: 'Black or African American' },\n      { value: 'latinx', viewValue: 'Hispanic or Latinx' },\n      { value: 'pacific-islander', viewValue: 'Native Hawaiian or Other Pacific Islander' },\n      { value: 'caucasian', viewValue: 'Caucasian' },\n      { value: 'other', viewValue: 'Other' },\n    ];\n    this.codingOptions = [\n      { value: 'none', viewValue: 'None' },\n      { value: 'beginner', viewValue: 'Beginner' },\n      { value: 'intermediate', viewValue: 'Intermediate' },\n      { value: 'advanced', viewValue: 'Advanced' },\n    ];\n  }\n\n  private setupAutoCompleteFilters() {\n    this.schools = Object.keys(SchoolList);\n    this.filteredSchoolOptions = this.schoolFormControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this.filterHelper(value, 'schools')),\n    );\n    this.majors = Object.keys(MajorList);\n    this.filteredMajorOptions = this.majorFormControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this.filterHelper(value, 'majors')),\n    );\n    this.referrals = Object.keys(ReferralList);\n    this.filteredReferralOptions = this.referralFormControl.valueChanges\n    .pipe(\n      startWith(''),\n      map(value => this.filterHelper(value, 'referrals')),\n    );\n  }\n\n  private filterHelper(value: string, filter: string) {\n    if (value) {\n      const filterValue = value.toLowerCase();\n      switch (filter) {\n        case 'majors': return this.majors.filter(option => option.toLowerCase().includes(filterValue));\n        case 'schools': return this.schools.filter(option => option.toLowerCase().includes(filterValue));\n        case 'referrals': return this.referrals.filter(option => option.toLowerCase().includes(filterValue));\n      }\n    } else {\n      switch (filter) {\n        case 'majors': return this.majors;\n        case 'schools': return this.schools;\n        case 'referrals': return this.referrals;\n      }\n    }\n  }\n\n  private setupToggles() {\n    this.travelReimToggle = this.hacker_data.travel_reimbursement ? true : false;\n    this.firstHackToggle = this.hacker_data.first_hackathon ? true : false;\n    this.eighteenBeforeToggle = this.hacker_data.eighteenBeforeEvent ? true : false;\n    this.mlhCocToggle = this.hacker_data.mlh_coc ? true : false;\n    this.mlhDcpToggle = this.hacker_data.mlh_coc ? true : false;\n    this.veteranToggle = this.hacker_data.veteran === 'true' ? true : false;\n  }\n\n  onChange(ob: MatSlideToggleChange) {\n    const matSlideToggle: MatSlideToggle = ob.source;\n    switch (matSlideToggle.name) {\n      case 'editToggle': this.editToggleState = matSlideToggle.checked; break;\n      case 'travelReim': this.travelReimToggle = matSlideToggle.checked; break;\n      case 'firstHack': this.firstHackToggle = matSlideToggle.checked; break;\n      case 'eighteenBefore': this.eighteenBeforeToggle = matSlideToggle.checked; break;\n      case 'mlhCoc': this.mlhCocToggle = matSlideToggle.checked; break;\n      case 'mlcDcp': this.mlhDcpToggle = matSlideToggle.checked; break;\n      case 'veteran': this.veteranToggle = matSlideToggle.checked; break;\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmitButtonClick() {\n    if (this.dietaryResSelection !== 'other') { this.hacker.dietary_restriction = this.dietaryResSelection; }\n    if (this.dietaryResSelection === 'none') { this.hacker.dietary_restriction = 'none'; this.hacker_data.dietary_restriction = 'none'; }\n    if (!this.dietaryResSelection) { this.hacker.dietary_restriction = null; }\n    if (this.hacker.allergies === 'none' || this.hacker.allergies === 'None') {\n      this.hacker.allergies = 'none';\n      this.hacker_data.allergies = 'none';\n    };\n    const changedRegistration = {\n      firstName: this.hacker.firstname || this.hacker_data.firstname,\n      lastName: this.hacker.lastname || this.hacker_data.lastname,\n      email: this.hacker.email || this.hacker_data.email,\n      gender: this.hacker.gender || this.hacker_data.gender,\n      university: this.schoolFormControl.value ? this.schoolFormControl.value : this.hacker_data.university,\n      academicYear: this.hacker.academic_year || this.hacker_data.academic_year,\n      major: this.majorFormControl.value ? this.majorFormControl.value : this.hacker_data.major,\n      shirtSize: this.hacker.shirt_size || this.hacker_data.shirt_size,\n      dietaryRestriction: this.hacker.dietary_restriction || this.hacker_data.dietary_restriction,\n      allergies: this.hacker.allergies || this.hacker_data.allergies,\n      travelReimbursement: this.travelReimToggle.toString() || this.hacker_data.travel_reimbursement.toString(),\n      firstHackathon: this.firstHackToggle.toString() || this.hacker_data.first_hackathon.toString(),\n      phone: this.hacker.phone || this.hacker_data.phone,\n      ethnicity: this.hacker.race || this.hacker_data.race,\n      codingExperience: this.hacker.coding_experience || this.hacker_data.coding_experience,\n      eighteenBeforeEvent: this.eighteenBeforeToggle.toString() || this.hacker_data.eighteenBeforeEvent.toString(),\n      mlhcoc: this.mlhCocToggle.toString() || this.hacker_data.mlh_coc.toString(),\n      mlhdcp: this.mlhDcpToggle.toString() || this.hacker_data.mlh_dcp.toString(),\n      referral: this.referralFormControl.value ? this.referralFormControl.value : this.hacker_data.referral,\n      projectDesc: this.hacker.project || this.hacker_data.project,\n      expectations: this.hacker.expectations || this.hacker_data.expectations,\n      veteran: this.veteranToggle.toString() || this.hacker_data.veteran,\n      uid: this.hacker.uid || this.hacker_data.uid,\n      submitted: this.hacker.submitted || this.hacker_data.submitted,\n      hackathon: this.hacker.hackathon || this.hacker_data.hackathon,\n    }\n    this.dialogRef.close(changedRegistration);\n  }\n\n  /**\n   * Resets the edit form to clear any changes\n   */\n  onResetHackerDataClick() {\n    this.hacker = Object.assign({}, this.hacker_data);\n    this.schoolFormControl.reset();\n    this.majorFormControl.reset();\n    this.referralFormControl.reset();\n    this.setupToggles();\n  }\n\n  /**\n   * Simple function to convert a single character t-shirt size into a string\n   *\n   * @param: user_size  string representing the size of a t-shirt\n   * @return: String representing the size of a t-shirt\n   */\n  getSizeText(user_size: string) {\n    if (user_size) {\n      switch (user_size) {\n        case 'S':\n          return 'Small';\n        case 'M':\n          return 'Medium';\n        case 'L':\n          return 'Large';\n        case 'XL':\n          return 'Extra Large';\n        case 'XXL':\n          return 'Double Extra Large';\n        case 'XXXL':\n          return 'Triple Extra Large';\n      }\n    } else {\n      return 'N/A';\n    }\n  }\n\n  /*\n   * Captializes the first letter in a string\n   */\n  capitalizeFirstLetter(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  /*\n   * Formats the string phone number into (XXX)-XXX-XXX\n   */\n  formatPhoneNumber(str: string) {\n    if (str != null) {\n      return '(' + str.slice(0, 3) + ')' + '-' + str.slice(3, 6) + '-' + str.slice(6);\n    }\n    return 'N/A';\n  }\n}\n","module.exports = \".mat-dialog-actions {\\n    float:right;\\n}\\n\\n.mat-form-field {\\n    width: 100%;\\n}\"","module.exports = \"<h1 mat-dialog-title>Add Checkout Request</h1>\\n<div mat-dialog-content>\\n    <p>Please type a User email in the form below</p>\\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"searchEmail\\\" placeholder=\\\"User email\\\" (keyup)=\\\"searchTerm$.next($event.target.value)\\\">\\n    </mat-form-field>\\n    <div *ngIf=\\\"!(searchResults | async)\\\">\\n        A button will appear here if the email corresponds to a User. Click that button to continue.\\n    </div>\\n    <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"searchResults | async as user\\\" (click)=\\\"submitCheckoutRequest(user)\\\" [mat-dialog-close]=\\\"user.uid\\\">\\n      {{user.displayName || user.uid}}\\n    </button>\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-button mat-dialog-close>No Thanks</button>\\n</div>\\n\"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { debounceTime, distinctUntilChanged, filter, switchMap } from 'rxjs/operators';\nimport { ItemCheckoutModel } from '../../../models/item-checkout-model';\nimport { HttpAdminService } from '../../../services/services';\nimport { Observable, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-add-checkout-request-dialog',\n  templateUrl: './add-checkout-request-dialog.component.html',\n  styleUrls: ['./add-checkout-request-dialog.component.css'],\n})\nexport class AddCheckoutRequestDialogComponent {\n\n  private static readonly emailRegex =\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  public searchEmail: string;\n  public searchTerm$: Subject<string>;\n  searchResults: Observable<any>;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddCheckoutRequestDialogComponent>,\n    private httpService: HttpAdminService,\n    @Inject(MAT_DIALOG_DATA) public data: ItemCheckoutModel,\n  ) {\n    this.searchTerm$ = new Subject();\n    const checker = new RegExp(AddCheckoutRequestDialogComponent.emailRegex);\n    this.searchResults = this.searchTerm$.asObservable()\n      .pipe(\n        filter(searchTerm => checker.test(searchTerm)),\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap(search => this.httpService.getUserUID(search)),\n      );\n  }\n\n  submitCheckoutRequest(result) {\n    this.dialogRef.close(result);\n  }\n}\n","module.exports = \".table-container {\\n    display: flex;\\n    flex-direction: column;\\n    min-width: 300px;\\n}\\n\\n.item-filter, .return-filter {\\n    display: block;\\n    width: 80%;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n\\n.mat-header-row {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    top: 0;\\n    background: white;\\n}\\n\\n.mat-card-title {\\n    display: flex;\\n}\\n\\n.card-title {\\n    flex: 5;\\n}\\n\\n.context-menu {\\n    float: right;\\n}\\n\\n.item-selected {\\n    background-color: rgba(170, 202, 204, 0.3);\\n    color: #6C88B7;\\n    font-size: small;\\n}\\n\\n.item-selected p {\\n    margin: 10px;\\n}\\n\"","module.exports = \"<mat-card>\\n    <mat-tab-group>\\n      <!--Item checkout tab-->\\n      <mat-tab label=\\\"Items\\\">\\n        <div class=\\\"col s12\\\">\\n          <mat-form-field class=\\\"item-filter\\\">\\n            <input matInput (keydown)=\\\"applyItemFilter($event.target.value)\\\" placeholder=\\\"Search\\\"\\n                   id=\\\"item-filter\\\">\\n          </mat-form-field>\\n        </div>\\n        <mat-card-title>\\n          <div class=\\\"card-title\\\">\\n            <p>\\n              Item Checkout\\n            </p>\\n          </div>\\n          <div class=\\\"context-menu\\\">\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n              <button mat-menu-item (click)=\\\"refreshData()\\\">\\n                <mat-icon>refresh</mat-icon>\\n                <span>Refresh Data</span>\\n              </button>\\n              <button mat-menu-item (click)=\\\"addCheckoutItem()\\\" *ngIf=\\\"directorPermission | async\\\">\\n                <mat-icon>add</mat-icon>\\n                <span>Add New Item</span>\\n              </button>\\n            </mat-menu>\\n          </div>\\n        </mat-card-title>\\n        <mat-card-content>\\n          <mat-table #table [dataSource]=\\\"itemDataSource\\\" matSort>\\n  \\n            <!--  Item Name Column -->\\n            <ng-container matColumnDef=\\\"item_name\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Item Name</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item\\\"> {{item.name}}</mat-cell>\\n            </ng-container>\\n  \\n            <!-- Item availability-->\\n            <ng-container matColumnDef=\\\"item_availability\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Availability</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item\\\"> {{item.available}}</mat-cell>\\n            </ng-container>\\n  \\n            <!-- Item Quantity -->\\n            <ng-container matColumnDef=\\\"item_quantity\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Total Quantity</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item\\\"> {{item.quantity}}</mat-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"button\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Action</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item\\\">\\n                <div class=\\\"action-menu\\\">\\n                  <button mat-icon-button [matMenuTriggerFor]=\\\"checkout_menu\\\">\\n                    <mat-icon>settings</mat-icon>\\n                  </button>\\n                  <mat-menu #checkout_menu=\\\"matMenu\\\">\\n                    <button mat-menu-item (click)=\\\"newCheckoutRequest(item)\\\">\\n                      <mat-icon>add</mat-icon>\\n                      <span>New Checkout Request</span>\\n                    </button>\\n                  </mat-menu>\\n                </div>\\n              </mat-cell>\\n            </ng-container>\\n  \\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n          </mat-table>\\n          <mat-paginator #itemPaginator\\n            [pageSize]=\\\"10\\\"\\n            [pageSizeOptions]=\\\"[10,50,100]\\\"\\n            [showFirstLastButtons]=\\\"true\\\">\\n          </mat-paginator>\\n          \\n        </mat-card-content>\\n      </mat-tab>\\n      <!--Returns tab-->\\n      <mat-tab label=\\\"Returns\\\">\\n        <div class=\\\"col s12\\\">\\n          <mat-form-field class=\\\"return-filter\\\">\\n            <input matInput (keydown)=\\\"applyReturnFilter($event.target.value)\\\" placeholder=\\\"Search\\\"\\n                   id=\\\"returns-filter\\\">\\n          </mat-form-field>\\n        </div>\\n        <mat-card-title>\\n          <div class=\\\"card-title\\\">\\n            <p>\\n              Item Return\\n            </p>\\n          </div>\\n          <div class=\\\"context-menu\\\">\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n              <button mat-menu-item (click)=\\\"refreshReturnData()\\\">\\n                <mat-icon>refresh</mat-icon>\\n                <span>Refresh Data</span>\\n              </button>\\n            </mat-menu>\\n          </div>\\n        </mat-card-title>\\n        <mat-card-content>\\n          <mat-table #returnTable [dataSource]=\\\"returnDataSource\\\" matSort>\\n  \\n            <!--Checkout item name-->\\n            <ng-container matColumnDef=\\\"user_name\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Hacker </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item\\\"> {{item.firstname}} {{item.lastname}}</mat-cell>\\n            </ng-container>\\n  \\n            <!--  Item Name Column -->\\n            <ng-container matColumnDef=\\\"item_name\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Item Name</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item\\\"> {{item.name}}</mat-cell>\\n            </ng-container>\\n  \\n            <!-- Checkout time -->\\n            <ng-container matColumnDef=\\\"checkout_time\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Check out time</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item\\\"> {{formatTime(item.checkout_time)}}</mat-cell>\\n            </ng-container>\\n  \\n            <!-- Return time -->\\n            <ng-container matColumnDef=\\\"return_time\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Return time</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item\\\"> {{formatTime(item.return_time)}}</mat-cell>\\n            </ng-container>\\n  \\n            <!-- Total quantity -->\\n            <ng-container matColumnDef=\\\"total_quantity\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Total Quantity</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item\\\"> {{item.quantity}}</mat-cell>\\n            </ng-container>\\n  \\n            <ng-container matColumnDef=\\\"button\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Action</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let item\\\">\\n                <div class=\\\"action-menu\\\">\\n                  <button mat-icon-button [matMenuTriggerFor]=\\\"checkout_menu\\\">\\n                    <mat-icon>settings</mat-icon>\\n                  </button>\\n                  <mat-menu #checkout_menu=\\\"matMenu\\\">\\n                    <button mat-menu-item (click)=\\\"returnItem(item)\\\">\\n                      <mat-icon>reply</mat-icon>\\n                      <span>Return</span>\\n                    </button>\\n                  </mat-menu>\\n                </div>\\n              </mat-cell>\\n            </ng-container>\\n  \\n            <mat-header-row *matHeaderRowDef=\\\"displayedReturnColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedReturnColumns;\\\"></mat-row>\\n          </mat-table>\\n          <mat-paginator #returnPaginator\\n            [pageSize]=\\\"10\\\"\\n            [pageSizeOptions]=\\\"[10,50,100]\\\"\\n            [showFirstLastButtons]=\\\"true\\\">\\n          </mat-paginator>\\n        </mat-card-content>\\n      </mat-tab>\\n    </mat-tab-group>\\n  </mat-card>  \"","import { AfterViewInit, Component, OnInit, ViewChild, QueryList } from '@angular/core';\nimport {\n  MatBottomSheet,\n  MatDialog,\n  MatPaginator,\n  MatSort,\n  MatTableDataSource,\n} from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { AppConstants } from '../../helpers/AppConstants';\nimport { CheckoutInstanceModel } from '../../models/checkout-instance-model';\nimport { ItemCheckoutModel } from '../../models/item-checkout-model';\nimport { LoginResponseModel } from '../../models/deprecated-login-response-model';\nimport { PRIVILEGE_LEVEL } from '../../models/privilege-model';\nimport { HttpAdminService } from '../../services/services';\nimport { AddCheckoutRequestDialogComponent } from './add-checkout-request-dialog/add-checkout-request-dialog.component'\nimport { ReturnCheckoutSheetComponent } from './return-checkout-sheet.component';\nimport { IHackerRegistrationModel } from 'app/models/hacker-registration-model';\nimport { AlertService } from 'ngx-alerts';\n\n@Component({\n  selector: 'app-item-checkout',\n  templateUrl: './item-checkout.component.html',\n  styleUrls: ['./item-checkout.component.css'],\n})\nexport class ItemCheckoutComponent implements OnInit, AfterViewInit {\n\n  private static _regCols =\n    [\n      'item_name',\n      'item_availability',\n      'item_quantity',\n      'button',\n    ];\n\n  private static _returnCols =\n    [\n      'user_name',\n      'item_name',\n      'checkout_time',\n      'return_time',\n      'button',\n    ];\n\n  public itemDataSource: MatTableDataSource<ItemCheckoutModel>;\n  public returnDataSource: MatTableDataSource<CheckoutInstanceModel>;\n\n  public directorPermission: Observable<boolean>;\n  public displayedColumns = ItemCheckoutComponent._regCols;\n  public displayedReturnColumns = ItemCheckoutComponent._returnCols;\n\n  @ViewChild('itemPaginator') itemPaginator: MatPaginator;\n  @ViewChild(MatSort) itemTableSort: MatSort;\n  @ViewChild('returnPaginator') returnPaginator: MatPaginator;\n  @ViewChild(MatSort) returnTableSort: MatSort;\n\n  constructor(\n    private httpService: HttpAdminService,\n    public dialog: MatDialog,\n    private activatedRoute: ActivatedRoute,\n    private matSheet: MatBottomSheet,\n    private _router: Router,\n    public alertsService: AlertService,\n  ) {\n    this.itemDataSource = new MatTableDataSource([]);\n    this.returnDataSource = new MatTableDataSource<CheckoutInstanceModel>([]);\n    this.directorPermission = httpService.getAdminStatus()\n      .pipe(\n        map((data: {admin: boolean, privilege: number}) =>\n          (data.privilege >= PRIVILEGE_LEVEL.DIRECTOR\n          )),\n        take(1),\n      );\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data\n      .subscribe((user) => {\n        if (user) {\n          this.httpService.getAvailableCheckoutItems()\n            .subscribe((items: ItemCheckoutModel[]) => {\n              this.itemDataSource.data = items;\n            },         (error) => {\n              console.log(error);\n              this.alertsService.danger('Error: Issue with getting the available checkout items.')\n            });\n          this.httpService.getCurrentCheckedOutItems()\n            .subscribe((items: CheckoutInstanceModel[]) => {\n              this.returnDataSource.data = items;\n            },         (error) => {\n              console.log(error);\n              this.alertsService.danger('Error: Issue with getting the current checked out items.')\n            })\n        } else {\n          this._router.navigate([AppConstants.LOGIN_ENDPOINT]);\n        }\n      });\n  }\n\n  /**\n   * After the initilization of all angular components, set the variables\n   *\n   * After the component view has been initialized, set the local data source paginiator property\n   * to the new instance of pagninator. Similar effect with sort.\n   */\n  ngAfterViewInit() {\n    this.itemDataSource.paginator = this.itemPaginator;\n    this.itemDataSource.sort = this.itemTableSort;\n\n    this.returnDataSource.paginator = this.returnPaginator;\n    this.returnDataSource.sort = this.returnTableSort;\n  }\n\n  refreshData() {\n    this.httpService.getAvailableCheckoutItems()\n      .subscribe((items: ItemCheckoutModel[]) => {\n        this.itemDataSource.data = items;\n      },         (error) => {\n        console.log(error);\n        this.alertsService.danger('Error: Issue with getting the available checkout items.')\n      });\n  }\n\n  refreshReturnData() {\n    this.httpService.getCurrentCheckedOutItems()\n      .subscribe((items: CheckoutInstanceModel[]) => {\n        this.returnDataSource.data = items;\n      },         (error) => {\n        console.log(error);\n        this.alertsService.danger('Error: Issue with getting the current checked out items.')\n      });\n  }\n\n  addCheckoutItem() {\n    // TODO: implement\n  }\n\n  newCheckoutRequest(item: ItemCheckoutModel) {\n    const dialogRef = this.dialog.open(AddCheckoutRequestDialogComponent, {\n      width: '400px',\n      data: item,\n    });\n    dialogRef\n      .afterClosed()\n      .pipe(\n        switchMap((result: IHackerRegistrationModel) => {\n          if (result) {\n            return this.httpService.addCheckoutRequest(parseInt(item.uid, 10), result.uid);\n          }\n          return of(null);\n        }),\n      )\n      .subscribe(() => {\n        this.refreshData();\n        this.alertsService.success('Success! The item has been checked out.');\n      },         (error) => {\n        console.error(error);\n        this.alertsService.danger('Error: There was a problem with checking out the item');\n      });\n  }\n\n  applyItemFilter(value) {\n    this.itemDataSource.filter = value;\n  }\n\n  applyReturnFilter(value: any) {\n    this.returnDataSource.filter = value;\n  }\n\n  returnItem(item: CheckoutInstanceModel) {\n    this.matSheet.open(ReturnCheckoutSheetComponent, {\n      data: item,\n    })\n      .afterDismissed()\n      .subscribe((resp) => {\n        this.refreshReturnData();\n        this.alertsService.success('Success! The item has been returned.');\n      },         (error) => {\n        console.error(error);\n        this.alertsService.danger('Error: There was a problem with returning the item');\n      });\n  }\n\n  formatTime(time?: string) {\n    if (time) {\n      return new Date(parseInt(time, 10)).toLocaleTimeString('nu', { month: 'short', day: 'numeric' });\n    }\n    return 'N/A';\n  }\n}\n","module.exports = \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"1:1\\\">\\n  <mat-grid-tile>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"dismiss($event)\\\">Cancel</button>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit($event)\\\">Confirm</button>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\"","import { Component, Inject } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material';\nimport { CheckoutInstanceModel } from '../../models/checkout-instance-model';\nimport { HttpAdminService } from '../../services/services';\n\n@Component({\n  selector: 'app-return-checkout-sheet',\n  templateUrl: 'return-checkout-sheet.component.html',\n})\nexport class ReturnCheckoutSheetComponent {\n  constructor(\n    private bottomSheetRef: MatBottomSheetRef<ReturnCheckoutSheetComponent>,\n    private httpService: HttpAdminService,\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: CheckoutInstanceModel,\n  ) {}\n\n  dismiss(event: MouseEvent): void {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n\n  submit(event: MouseEvent): void {\n    this.httpService.returnCheckoutItem(this.data)\n      .subscribe((result) => {\n        this.bottomSheetRef.dismiss(result);\n      });\n    event.preventDefault();\n  }\n}\n","module.exports = \".mat-form-field {\\n    display: block;\\n}\\n\\n.row {\\n    padding: 10px;\\n}\\n\\n.title, .mat-button, .mat-checkbox {\\n    display: block;\\n    text-align: center;\\n    margin: auto;\\n}\\n\"","module.exports = \"<h1 class=\\\"title\\\"> Live Updates </h1>\\n<form class=\\\"registration-form container-fluid\\\"\\n      (ngSubmit)=\\\"registrationModel.form.valid ? sendMessage() : showError(registrationModel.form.errors)\\\"\\n      name=\\\"registrationFormDOM\\\"\\n      #registrationModel=\\\"ngForm\\\">\\n    <mat-form-field class=\\\"example-full-width row\\\">\\n        <input matInput\\n               type=\\\"text\\\"\\n               name=\\\"major\\\"\\n               [(ngModel)]=\\\"title\\\"\\n               #messageInput=\\\"ngModel\\\"\\n               id=\\\"autocomplete-input-title\\\"\\n               required\\n               placeholder=\\\"Enter live update title\\\"\\n               class=\\\"validate required\\\"\\n        >\\n    </mat-form-field>\\n    <div class=\\\"row\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput\\n                   type=\\\"text\\\"\\n                   name=\\\"major\\\"\\n                   [(ngModel)]=\\\"message\\\"\\n                   #messageInput=\\\"ngModel\\\"\\n                   id=\\\"autocomplete-input-major\\\"\\n                   required\\n                   placeholder=\\\"Enter live update\\\"\\n                   class=\\\"validate required\\\"\\n            >\\n        </mat-form-field>\\n        <label class=\\\"data-error\\\" *ngIf=\\\"!messageInput.valid\\\">Required</label><br>\\n    </div>\\n    <mat-checkbox class=\\\"row\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"push_notification\\\" name=\\\"push_notification\\\">Send as a push\\n        notification?\\n    </mat-checkbox>\\n    <div class=\\\"row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"message == '' || title == ''\\\">Submit</button>\\n    </div>\\n</form>\\n\"","/**\n * TODO: Add docstring explaning component\n */\nimport { Component, OnInit } from '@angular/core';\nimport { AlertService } from 'ngx-alerts';\nimport { LiveUpdatesService } from '../../services/live-updates/live-updates.service';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { UpdateModel } from '../../models/update-model';\nimport { HttpAdminService } from '../../services/services';\nimport { IApiResponseModel } from 'app/models/api-response-model';\n\n@Component({\n  selector: 'app-live-update',\n  templateUrl: './live-update.component.html',\n  providers: [LiveUpdatesService],\n  styleUrls: ['./live-update.component.css'],\n})\n\nexport class LiveUpdateComponent implements OnInit {\n\n  private message: string;\n  private title: string;\n  private push_notification = false;\n\n  constructor(public httpService: HttpAdminService, private alertsService: AlertService) {\n    this.message = '';\n    this.title = '';\n  }\n\n  sendMessage() {\n    const liveUpdate = new UpdateModel(this.message, this.title, null, this.push_notification);\n    this.httpService.sendLiveUpdate(liveUpdate)\n      .subscribe((resp: IApiResponseModel<{}>) => {\n        if (resp.status === 200) {\n          this.message = '';\n          this.title = '';\n          this.push_notification = false;\n          this.alertsService.success('Live update sent!');\n        }\n      },         (error) => {\n        console.error(error);\n        this.alertsService.danger('Error: Issue with sending live update.');\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  showError(error: any) {\n    this.alertsService.danger(error.toString());\n  }\n}\n","module.exports = \"/* Login form styles */\\n\\nhtml {\\n    height: 100%;\\n}\\n\\n@font-face {\\n    font-family: 'Cornerstone';\\n    src: url('/assets/fonts/Cornerstone.ttf');\\n}\\n\\n:host {\\n    width: 50%;\\n    margin: 25px auto;\\n}\\n\\n.text-center {\\n    -ms-grid-row-align: center;\\n        align-self: center;\\n    margin: 0 auto;\\n    width: 50%;\\n}\\n\\n@media screen and (min-width: 768px) {\\n    .login-container {\\n        max-width: 50%;\\n    }\\n}\\n\\n.btn {\\n    background-color: #aacacc;\\n    color: #337ab7;\\n    margin: 10px;\\n}\\n\\n.btn span {\\n    color: #C94331;\\n}\\n\\n.btn:hover {\\n    background-color: #D0EAF1;\\n}\\n\\n.login-button {\\n    margin: 0 auto;\\n    display: block;\\n}\\n\\nbody {\\n    height: 100%;\\n    background-image: url(\\\"/assets/images/section-sep-1-mountain.svg\\\");\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    background-position: bottom center;\\n  }\\n\\n.header-text {\\n    font-family: 'Cornerstone';\\n    font-size: 4vh;\\n    line-height: 100%;\\n    margin-top: 25px;\\n}\\n\"","module.exports = \"<body>\\n<!-- LOGIN FORM -->\\n<div class=\\\"container login-container\\\">\\n    <div class=\\\"header-text text-center\\\">Login</div>\\n    <!-- <div class=\\\"logo text-center\\\">Login</div> -->\\n    <!-- Main Form -->\\n    <div class=\\\"row\\\">\\n        <form id=\\\"login-form\\\" class=\\\"col s12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"login-group\\\">\\n                    <mat-form-field class=\\\"col-sm-12\\\">\\n                        <input matInput type=\\\"email\\\"\\n                               id=\\\"lg_username\\\" autocomplete=\\\"email\\\" name=\\\"lg_username\\\"\\n                               placeholder=\\\"email\\\"\\n                               [(ngModel)]=\\\"model.email\\\"\\n                               [formControl]=\\\"email\\\" required>\\n                        <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field class=\\\"col-sm-12\\\">\\n                        <input matInput required class=\\\"form-control\\\" id=\\\"lg_password\\\"\\n                               autocomplete=\\\"current-password\\\" name=\\\"lg_password\\\"\\n                               type=\\\"password\\\"\\n                               placeholder=\\\"password\\\" [(ngModel)]=\\\"model.password\\\">\\n                    </mat-form-field>\\n                </div>\\n                <button type=\\\"submit\\\" (click)=\\\"loginEmail()\\\" class=\\\"login-button btn\\\">Submit<i class=\\\"fa fa-chevron-right\\\"></i></button>\\n            </div>\\n            <div class=\\\"etc-login-form\\\">\\n                <p>forgot your password? <a href=\\\"#\\\">click here</a></p>\\n            </div>\\n        </form>\\n        <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\">\\n            {{ errors.message }}\\n        </div>\\n    </div>\\n    <!-- end:Main Form -->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-offset-2 col-8\\\">\\n            <a class=\\\"btn btn-block btn-social btn-google\\\" (click)=\\\"login()\\\">\\n                <span class=\\\"fa fa-google\\\"></span> Sign in with Google\\n            </a>\\n            <a class=\\\"btn btn-block btn-social btn-facebook\\\" (click)=\\\"loginFacebook()\\\">\\n                <span class=\\\"fa fa-facebook\\\"></span> Continue with Facebook\\n            </a>\\n            <a class=\\\"btn btn-block btn-social btn-github\\\" (click)=\\\"loginGithub()\\\">\\n                <span class=\\\"fa fa-github\\\"></span> Sign in with Github\\n            </a>\\n            <a class=\\\"btn btn-block btn-social btn-email\\\" (click)=\\\"signUp()\\\">\\n                <span class=\\\"fa fa-envelope\\\"></span> Sign up with email\\n            </a>\\n        </div>\\n    </div>\\n</div>\\n</body>\"","/**\n * Component handles login or authorization to the application. Users have the ability to login\n * via different options such as Local, Google, Facebook, and Github.\n */\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\nimport { LoginModel } from '../../models/login-model';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthService, CustomErrorHandlerService } from '../../services/services';\nimport { NgProgress } from '@ngx-progressbar/core';\nimport { AuthProviders } from '../../services/AuthService/auth.service';\nimport { AppConstants } from '../../helpers/AppConstants';\nimport { AlertService } from 'ngx-alerts';\n\n@Component({\n  selector: 'app-login',\n  providers: [HttpAdminService],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n\n  public errors: Error = null;\n  public model: LoginModel;\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  private criticalSectionLock: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private errorHandler: CustomErrorHandlerService,\n    private httpService: HttpAdminService,\n    private activatedRoute: ActivatedRoute,\n    private progressBar: NgProgress,\n    private alertsService: AlertService,\n  ) {\n    this.model = new LoginModel();\n    this.criticalSectionLock = false;\n    this.authService.currentUser\n        .subscribe((user) => {\n          if (user) {\n            this.onLogin(user);\n          }\n        });\n  }\n\n  /**\n   * Login with Google\n   */\n  login() {\n    this.progressBar.start();\n    this.loginHandler(this.authService.signInWithProvider(AuthProviders.GOOGLE_PROVIDER));\n  }\n\n  /**\n   * Login with Facebook\n   */\n  loginFacebook() {\n    this.progressBar.start();\n    this.loginHandler(this.authService.signInWithProvider(AuthProviders.FACEBOOK_PROVIDER));\n  }\n\n  /**\n   * Login with Github\n   */\n  loginGithub() {\n    this.progressBar.start();\n    this.loginHandler(this.authService.signInWithProvider(AuthProviders.GITHUB_PROVIDER));\n  }\n  /**\n   * Login with Email\n   */\n  loginEmail() {\n    if (this.model.email && this.model.password) {\n      this.progressBar.start();\n      this.loginHandler(this.authService.signIn(this.model.email, this.model.password));\n    }\n  }\n\n  /**\n   * Method handles the success of a login attempt and notifies the alert service\n   * \n   * @param loginPromise Auth Service Provider Promise\n   */\n  private loginHandler(loginPromise: Promise<any>) {\n    loginPromise\n      .then(({ user }) => {\n        console.log('Successfully logged in. Verifying credentials now.');\n        this.alertsService.info('Verifying privileges and credentials.');\n      })\n      .catch((error) => {\n        console.error(error);\n        this.errorHandler.handleError(error);\n        this.progressBar.complete();\n      });\n  }\n\n  /**\n   * Determines the admin status of the user input parameter and routes the user to /dashboard/\n   * upon successful authentication. Else the auth service will log the user out and route them\n   * to /login/\n   * \n   * @param user Firebase user\n   */\n  onLogin(user: any) {\n    if (this.criticalSectionLock) {\n      return;\n    }\n    this.criticalSectionLock = true;\n    if (!user) {\n      return;\n    }\n    this.httpService.getAdminStatus()\n        .subscribe((result: {admin: boolean, privilege: number}) => {\n          if (!result.admin) {\n            const error = Error(\n              'You do not have the necessary permission to login here. Please contact an administrator.',\n            );\n            this.errorHandler.handleError(error);\n            this.progressBar.complete();\n            this.authService.signOut().then(() => {\n              this.criticalSectionLock = false;\n            }).catch((err) => {\n              console.error(err);\n              this.criticalSectionLock = false;\n            });\n            return null;\n          }\n          this.readRouteAndNavigate((params) => {\n            this.criticalSectionLock = false;\n            if (!params.redirectUrl) {\n              return this.router.navigate([AppConstants.DASHBOARD_ENDPOINT]);\n            }\n            return this.router.navigate([params['redirectUrl']]);\n          });\n        },         (error) => {\n          console.error(error);\n          this.errorHandler.handleError(error);\n          this.progressBar.complete();\n          this.authService.signOut()\n              .then(() => {\n                this.criticalSectionLock = false;\n              }).catch((err) => {\n                console.error(err);\n                this.criticalSectionLock = false;\n              });\n        });\n  }\n\n  /**\n   * Sets the error message for the email form dependent on the value entered\n   */\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'You must enter a value' :\n           this.email.hasError('email') ? 'Not a valid email' :\n           '';\n  }\n\n  /**\n   * Reads the route requested in the query params and routes accordingly\n   * \n   * @param callback\n   */\n  protected readRouteAndNavigate(callback) {\n    this.progressBar.complete();\n    this.activatedRoute.queryParams\n        .subscribe(callback);\n  }\n\n  /**\n   * Signup for a new account for the application\n   * Currently not supported\n   */\n  signUp() {\n    this.errorHandler.handleError(new Error('Not supported'));\n  }\n}\n","module.exports = \".mat-dialog-actions {\\n\\tdisplay: inline-block;\\n}\\n\\n.mat-form-field {\\n    float: right;\\n    width: 100%;\\n}\"","module.exports = \"<div *ngIf=\\\"actionName === 'Update'\\\">\\n\\t<h1 mat-dialog-title>{{actionName}} Location</h1>\\n\\t<div mat-dialog-content>\\n\\t\\t<p>Current Location Name: {{currentLocationName}}</p>\\n\\t\\t<br>\\n\\t    <p>Enter New Location Name</p>\\n\\t\\t<mat-form-field class=\\\"update-location\\\" class=\\\"col-sm-6 col-sm-offset-3\\\">\\n\\t\\t    <input matInput #updateLocation placeholder=\\\"Location Name\\\" id=\\\"update-location\\\">\\n\\t\\t</mat-form-field>\\n\\t</div>\\n\\t<div mat-dialog-actions>\\n\\t\\t<button mat-button mat-dialog-close>No Thanks</button>\\n\\t\\t<button mat-button [mat-dialog-close]=\\\"'Update' + updateLocation.value\\\"> Update Location </button>\\n\\t</div>\\n</div>\\n\\n<div *ngIf=\\\"actionName === 'Remove'\\\">\\n\\t<h1 mat-dialog-title>{{actionName}} Location</h1>\\n\\t<div mat-dialog-content>\\n\\t\\t<p> You are about to remove {{currentLocationName}}.</p>\\n\\t\\t<p>This cannot be undone. Are you sure? </p>\\n\\t</div>\\n\\t<div mat-dialog-actions>\\n\\t\\t<button mat-button mat-dialog-close>No Thanks</button>\\n\\t\\t<button mat-button [mat-dialog-close]=\\\"'Remove' + currentLocationName\\\"> Yes, Remove Location </button>\\n\\t</div>\\n</div>\\n\\n<div *ngIf=\\\"actionName === 'Add'\\\">\\n\\t<h1 mat-dialog-title>{{actionName}} Location</h1>\\n\\t<div mat-dialog-content>\\n\\t    <p>Enter New Location Name</p>\\n\\t\\t<mat-form-field class=\\\"update-location\\\" class=\\\"col-sm-6 col-sm-offset-3\\\">\\n\\t\\t    <input matInput #addLocation placeholder=\\\"Location Name\\\" id=\\\"update-location\\\">\\n\\t\\t</mat-form-field>\\n\\t</div>\\n\\t<div mat-dialog-actions>\\n\\t\\t<button mat-button mat-dialog-close>No Thanks</button>\\n\\t\\t<button mat-button [mat-dialog-close]=\\\"'Add' + addLocation.value\\\"> Add Location </button>\\n\\t</div>\\n</div>\\n\"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-location-dialog',\n  templateUrl: './location-dialog.html',\n  styleUrls: ['./location-dialog.css'],\n})\nexport class LocationDialogComponent {\n\n  public actionName = '';\n  private currentLocationName = '';\n\n  constructor(\n    public dialogRef: MatDialogRef<LocationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) {\n    this.actionName = data.action_name;\n    this.currentLocationName = data.current_location_name;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \".container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.title-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  margin: 20px;\\n}\\n\\n.section-title-letter {\\n  display: inline-block;\\n  font-size: 2.5em;\\n}\\n\\n.section-title-word {\\n  display: inline-block;\\n  white-space: nowrap;\\n  padding-right: 1.5%;\\n}\\n\\n.body-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.live-update-container {\\n  margin: 10px;\\n}\\n\\n.table-container {\\n  margin: 10px;\\n}\\n\\n.location-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\nmat-header-cell.action-button, mat-cell.action-button {\\n  max-width: 75px;\\n}\\n\\n.id-column {\\n  max-width: 100px;\\n}\\n\\n.mat-form-field {\\n  display: block;\\n}\\n\\n.row {\\n  padding: 10px;\\n}\\n\\n.location-container {\\n  display: flex;\\n  flex-flow: column;\\n}\\n\\n.location-title-container {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.with-icon {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.with-icon p {\\n  margin: 0;\\n  padding: 0;\\n}\"","module.exports = \"<div class = \\\"container\\\">\\n    <div class = \\\"title-container\\\">\\n        <div class=\\\"section-title-word\\\">\\n            <div class=\\\"section-title-letter white-text\\\">A</div>\\n            <div class=\\\"section-title-letter white-text\\\">D</div>\\n            <div class=\\\"section-title-letter white-text\\\">M</div>\\n            <div class=\\\"section-title-letter white-text\\\">I</div>\\n            <div class=\\\"section-title-letter white-text\\\">N</div>\\n        </div>\\n    </div>\\n\\n    <div class = \\\"body-container\\\">\\n        <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\">\\n            {{ errors.message }}\\n        </div>\\n        <div class = \\\"live-update-container\\\">\\n            <mat-card>\\n                <mat-card-title>\\n                    <b>Live Update - Under Construction</b>\\n                </mat-card-title>\\n                <!--<mat-card-content>-->\\n                    <!--<form class=\\\"registration-form container-fluid\\\"-->\\n                          <!--(ngSubmit)=\\\"registrationModel.form.valid ? sendMessage() : error = registrationModel.form.errors\\\"-->\\n                          <!--name=\\\"registrationFormDOM\\\"-->\\n                          <!--#registrationModel=\\\"ngForm\\\">-->\\n                        <!--<mat-form-field class=\\\"example-full-width row\\\">-->\\n                            <!--<input matInput-->\\n                                   <!--type=\\\"text\\\"-->\\n                                   <!--name=\\\"major\\\"-->\\n                                   <!--[(ngModel)]=\\\"title\\\"-->\\n                                   <!--#messageInput=\\\"ngModel\\\"-->\\n                                   <!--id=\\\"autocomplete-input-title\\\"-->\\n                                   <!--required-->\\n                                   <!--placeholder=\\\"Enter live update title\\\"-->\\n                                   <!--class=\\\"validate required\\\"-->\\n                            <!--&gt;-->\\n                        <!--</mat-form-field>-->\\n                        <!--<div class=\\\"row\\\">-->\\n                            <!--<mat-form-field class=\\\"example-full-width\\\">-->\\n                                <!--<input matInput-->\\n                                       <!--type=\\\"text\\\"-->\\n                                       <!--name=\\\"major\\\"-->\\n                                       <!--[(ngModel)]=\\\"message\\\"-->\\n                                       <!--#messageInput=\\\"ngModel\\\"-->\\n                                       <!--id=\\\"autocomplete-input-major\\\"-->\\n                                       <!--required-->\\n                                       <!--placeholder=\\\"Enter live update\\\"-->\\n                                       <!--class=\\\"validate required\\\"-->\\n                                <!--&gt;-->\\n                            <!--</mat-form-field>-->\\n                            <!--<label class=\\\"data-error\\\" *ngIf=\\\"!messageInput.valid\\\">Required</label><br>-->\\n                        <!--</div>-->\\n                        <!--<mat-checkbox class=\\\"row\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"push_notification\\\" name=\\\"push_notification\\\">Send as a push-->\\n                            <!--notification?-->\\n                        <!--</mat-checkbox>-->\\n                        <!--<button mat-button type=\\\"submit\\\" *ngIf=\\\"registrationModel.form.valid\\\">Submit</button>-->\\n                    <!--</form>-->\\n                <!--</mat-card-content>-->\\n            </mat-card>\\n        </div>\\n        <div class = \\\"table-container\\\">\\n            <mat-card>\\n                <mat-card-title>\\n                    <b> Events and Locations </b>\\n                </mat-card-title>\\n                <mat-card-content>\\n                    <mat-tab-group>\\n                        <mat-tab label=\\\"Locations\\\">\\n                            <mat-card>\\n                                <div class=\\\"location-container\\\">\\n                                    <div class =\\\"location-title-container\\\">\\n                                        <h3> Locations </h3>\\n\\n                                        <mat-form-field class=\\\"email-filter\\\">\\n                                            <input matInput (keydown)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" id=\\\"email-filter\\\">\\n                                        </mat-form-field>\\n\\n                                        <div class = \\\"with-icon\\\">\\n                                            <p>Add Locations</p>\\n                                            <button mat-icon-button (click)=\\\"openLocationEditDialog('Add', '', '')\\\">\\n                                                <mat-icon>\\n                                                    add\\n                                                </mat-icon>\\n                                            </button>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"location-table-container\\\">\\n                                        <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n                                             <!-- Location Name Column -->\\n                                            <ng-container matColumnDef=\\\"location_name\\\">\\n                                                <mat-header-cell *matHeaderCellDef class=\\\"name-column\\\"> Location Name</mat-header-cell>\\n                                                <mat-cell *matCellDef=\\\"let location\\\" class=\\\"name-column\\\">\\n                                                    {{location.location_name}}\\n                                                </mat-cell>\\n                                            </ng-container>\\n\\n                                            <!-- Location UID Column -->\\n                                            <ng-container matColumnDef=\\\"uid\\\">\\n                                                <mat-header-cell *matHeaderCellDef class=\\\"id-column\\\"> Location UID</mat-header-cell>\\n                                                <mat-cell *matCellDef=\\\"let location\\\" class=\\\"id-column\\\"> {{location.uid}}</mat-cell>\\n                                            </ng-container>\\n\\n\\n                                            <!-- Action Update Column -->\\n                                            <ng-container matColumnDef=\\\"action_update\\\" class>\\n                                                <mat-header-cell *matHeaderCellDef class=\\\"action-button\\\">\\n                                                    Update\\n                                                </mat-header-cell>\\n                                                <mat-cell *matCellDef=\\\"let location\\\" class=\\\"action-button\\\">\\n                                                    <button mat-icon-button (click)=\\\"openLocationEditDialog('Update', location.location_name, location.uid)\\\">\\n                                                        <mat-icon>\\n                                                            create\\n                                                        </mat-icon>\\n                                                    </button>\\n                                                </mat-cell>\\n                                            </ng-container>\\n\\n                                             <!-- Action Delete Column -->\\n                                            <ng-container matColumnDef=\\\"action_remove\\\">\\n                                                <mat-header-cell *matHeaderCellDef class=\\\"action-button\\\">\\n                                                    Remove\\n                                                </mat-header-cell>\\n                                                <mat-cell *matCellDef=\\\"let location\\\" class=\\\"action-button\\\">\\n                                                    <button mat-icon-button (click)=\\\"openLocationEditDialog('Remove', location.location_name, location.uid)\\\">\\n                                                        <mat-icon>\\n                                                            delete\\n                                                        </mat-icon>\\n                                                    </button>\\n                                                </mat-cell>\\n                                            </ng-container>\\n\\n                                            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                                            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n                                        </mat-table>\\n                                        <mat-paginator #paginator\\n                                                       [pageSize]=\\\"10\\\"\\n                                                       [pageSizeOptions]=\\\"[50,100,500]\\\"\\n                                                       [showFirstLastButtons]=\\\"true\\\">\\n                                        </mat-paginator>\\n                                    </div>\\n                                </div>\\n                            </mat-card>\\n                        </mat-tab>\\n                        <mat-tab label=\\\"Events\\\">\\n                                Under Construction.\\n                        </mat-tab>\\n                    </mat-tab-group>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\\n\"","/**\n * Manage admin component displays features relevant for Admin users. It currently has the ability\n * to send live updates, manage locations, and manage events.\n *\n * Working Features: Manage Locations\n * Non Working Features: Live Updates, Manage Events\n */\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\n\nimport {\n  MatDialog,\n  MatPaginator,\n  MatSnackBar,\n  MatSort,\n  MatTableDataSource,\n} from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { LocationDialogComponent } from './location-dialog';\n\n@Component({\n  selector: 'app-manage-admin',\n  providers: [\n    HttpAdminService,\n  ],\n  templateUrl: './manage-admin.component.html',\n  styleUrls: ['./manage-admin.component.css'],\n})\n\nexport class ManageAdminComponent implements OnInit, AfterViewInit {\n  private static tableCols = ['location_name', 'uid', 'action_update', 'action_remove'];\n  displayedColumns = ManageAdminComponent.tableCols;\n  public dataSource = new MatTableDataSource<any>([]);\n  /*\n   * Error array used to display error messages\n   */\n  public errors: Error = null;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) table: MatSort;\n\n  constructor(\n    public adminService: HttpAdminService,\n    private router: Router,\n    public dialog: MatDialog,\n    private activatedRoute: ActivatedRoute,\n    private snackBar: MatSnackBar,\n  ) {\n  }\n\n  /**\n   * On the initilization of all angular components, execute the functions\n   *\n   * Retrieves the current user from authentication then calls to update the location table\n   *\n   * @exception: Failure on the auth service will cause an error to be displayed on the /admin/ route page\n   * @exception: Issue with the user not existing in the auth service database will cause an error to be displayed on the /admin/ route page\n   */\n  ngOnInit() {\n    this.activatedRoute.data\n        .subscribe((user) => {\n          if (user) {\n            // this.user = user;\n            this.loadTableData();\n          } else {\n            this.errors = new Error('Error: No user');\n            console.error('No User');\n          }\n        },         (error) => {\n          this.errors = new Error('Error: Issue with authentication of user');\n          console.error(error);\n        });\n  }\n\n  /**\n   * After the initilization of all angular components, set the variables\n   *\n   * After the component view has been initialized, set the local data source paginiator property\n   * to the new instance of pagninator. Similar effect with sort.\n   *\n   */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.table;\n  }\n\n  /**\n   * Modify the data source to only have the filtered results\n   *\n   * Convert the filter value (string) to lowercase and remove any additional spacing. Then\n   * set the filter property of the local datasource to the new filter value.\n   *\n   * @param: filterValue  String to filter the datasource\n   */\n  applyFilter(filterValue: string) {\n    let mFilterValue = filterValue.trim();\n    mFilterValue = mFilterValue.toLowerCase();\n    this.dataSource.filter = mFilterValue;\n  }\n\n  /**\n   * Retrieve and load the location data into the datasource\n   *\n   * Call the admin service request to retrieve the location data. Then set the columns names to\n   * the entries defined in tableCols and the datasource data to the request response data.\n   *\n   * @exception: Failure with the admin service with cause an error to be displayed on the /admin/ route page\n   */\n  loadTableData() {\n    this.adminService.getLocations()\n        .subscribe((data) => {\n          this.displayedColumns = ManageAdminComponent.tableCols;\n          this.dataSource.data = data;\n        },         (error) => {\n          console.error(error);\n        });\n  }\n\n  /**\n   * Abstraction for refreshing the data in a table, executes the loadTableData function\n   */\n  refreshData() {\n    this.loadTableData();\n  }\n\n  /**\n   * Opens a modal for adding/removing/updateing a location, located in location-dialog.ts\n   *\n   * @param: user  single user data\n   */\n  openLocationEditDialog(actionType: string, locationName: string, locationUID: string) {\n    const temp = {};\n    temp['action_name'] = actionType;\n    temp['current_location_name'] = locationName;\n    console.log('DB:' + actionType + ' ' + locationName + ' ' + locationUID);\n\n    let windowHeight = '300px';\n\n    switch (actionType) {\n      case 'Update':\n        windowHeight = '300px';\n        break;\n      case 'Remove':\n        windowHeight = '200px';\n        break;\n      case 'Add':\n        windowHeight = '250px';\n        break;\n    }\n\n    const dialogRef = this.dialog.open(LocationDialogComponent, {\n      height: windowHeight,\n      data: temp,\n      autoFocus: false,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        if (result.slice(0, 6) === 'Update') {\n          const newLocationName = result.slice(6);\n          this.updateLocation(newLocationName, locationUID);\n        } else if (result.slice(0, 6) === 'Remove') {\n          this.removeLocation(locationUID);\n        } else if (result.slice(0, 3) === 'Add') {\n          const newLocationName = result.slice(3);\n          this.insertLocation(newLocationName);\n        }\n      } else {\n        console.log('No result from dialog');\n      }\n    },                                (error) => {\n      this.errors = new Error('Error Processing Action.');\n      console.error('Error Processing Action');\n    });\n  }\n\n  /**\n   * Calls the Admin Service to update the location with the given location uid to the new name\n   *\n   * @param: locationValue  String representing the new name of the location\n   * @param: uid  String representing the location unique identifier\n   *\n   * @exception: Failure with the admin service with cause an error to be displayed on the /admin/ route page\n   */\n  updateLocation(locationValue: string, uid: string) {\n    const mLocationValue = locationValue.trim();\n    this.adminService.updateLocation(uid, mLocationValue).subscribe((resp) => {\n      this.refreshData();\n      this.openSnackBar('Success: Updated location', '');\n    },                                                              (error) => {\n      console.error(error);\n      this.openSnackBar('Error: Failed to update location', '');\n    });\n  }\n\n  /**\n   * Calls the Admin Service to add a new location\n   *\n   * @param: locationValue  String representing the new name of the location\n   *\n   * @exception: Failure with the admin service with cause an error to be displayed on the /admin/ route page\n   */\n  insertLocation(locationValue: string) {\n    const mLocationValue = locationValue.trim();\n    // console.log(mLocationValue);\n    this.adminService.addNewLocation(mLocationValue).subscribe((resp) => {\n      this.refreshData();\n      this.openSnackBar('Success: Inserted new location', '');\n    },                                                         (error) => {\n      console.error(error);\n      this.openSnackBar('Error: Failed to insert location', '');\n    });\n  }\n\n  /**\n   * Calls the Admin Service to remove the location with the given uid\n   *\n   * @param: uid  String representing the unique identifier\n   *\n   * @exception: Failure with the admin service with cause an error to be displayed on the /admin/ route page\n   */\n  removeLocation(uid: string) {\n    console.log(uid);\n    this.adminService.removeLocation(uid).subscribe((resp) => {\n      this.refreshData();\n      this.openSnackBar('Success: Removed location', '');\n    },                                              (error) => {\n      console.error(error);\n      this.openSnackBar('Error: Failed to remove location', '');\n    });\n  }\n\n  /**\n   * Opens a snackbar at the bottom of the page for 2000ms with the given message\n   *\n   * @param: message  String message you want to display in the snackbar\n   * @param: action  String action you want associated to be done when clicking the snackbar\n   */\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n}\n\n\n","module.exports = \".mat-dialog-actions {\\n    float:right;\\n}\\n\\n.mat-form-field {\\n    width: 100%;\\n}\"","module.exports = \"<h1 mat-dialog-title>Add Event</h1>\\n<div mat-dialog-content>\\n    <mat-form-field>\\n        <input [matAutocomplete]=\\\"auto\\\" matInput [(ngModel)]=\\\"createdEvent.event_location\\\" placeholder=\\\"Event Location\\\">\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let option of locationList | async\\\" [value]=\\\"option.uid.toString()\\\">\\n                {{option.location_name}}\\n            </mat-option>\\n        </mat-autocomplete>\\n    </mat-form-field>\\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"createdEvent.event_start_time\\\" placeholder=\\\"Start date [Format: December 17, 1995 03:24:00]\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"createdEvent.event_end_time\\\" placeholder=\\\"End date [Format: December 17, 1995 03:24:00]\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"createdEvent.event_title\\\" placeholder=\\\"Event Title\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n        <textarea matInput [(ngModel)]=\\\"createdEvent.event_description\\\" placeholder=\\\"Event description\\\"></textarea>\\n    </mat-form-field>\\n    <mat-form-field>\\n        <input [matAutocomplete]=\\\"autoType\\\" matInput [(ngModel)]=\\\"createdEvent.event_type\\\" placeholder=\\\"Event type\\\">\\n        <mat-autocomplete #autoType=\\\"matAutocomplete\\\">\\n            <mat-option value=\\\"food\\\">Food</mat-option>\\n            <mat-option value=\\\"workshop\\\">Workshop</mat-option>\\n            <mat-option value=\\\"activity\\\">Activity</mat-option>\\n        </mat-autocomplete>\\n    </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-button mat-dialog-close>No Thanks</button>\\n    <button mat-button [mat-dialog-close]=\\\"createdEvent\\\" cdkFocusInitial>Ok</button>\\n</div>\\n\"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { EventModel } from '../../../models/event-model';\nimport { HttpAdminService } from '../../../services/services';\nimport { LocationModel } from '../../../models/location-model';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-event-dialog',\n  templateUrl: './add-event-dialog.html',\n  styleUrls: ['./add-event-dialog.css'],\n})\nexport class AddEventDialogComponent {\n\n  public createdEvent: EventModel;\n  public locationList: Observable<LocationModel[]>;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddEventDialogComponent>,\n    private httpService: HttpAdminService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) {\n    this.createdEvent = new EventModel();\n    this.locationList = this.httpService.getLocations().pipe(take(1));\n  }\n}\n","module.exports = \".table-container {\\n    overflow: auto;\\n}\\n\\n.table-title-container {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    width: 100%;\\n}\\n\\n.events-filter {\\n    margin: 10px;\\n    font-size: small;\\n    flex-basis: 60%;\\n  }\\n\\ntable {\\n    width: 100%;\\n}\\n\\n.mat-cell {\\n    padding: 5px;\\n}\\n\\n.mat-column-event_title {\\n    min-width: 400px;\\n}\\n\\n.mat-column-location_name {\\n    min-width: 100px;\\n}\\n\\n.mat-column-event_start_time, .mat-column-event_end_time {\\n    min-width: 150px;\\n}\\n\\n.mat-column-event_type {\\n    min-width: 100px;\\n}\\n\\n.mat-column-event_uid {\\n    min-width: 275px;\\n}\\n\\n.mat-column-action_button {\\n    min-width: 75px;\\n}\\n\\n.mat-card-title {\\n    display: flex;\\n}\\n\\n.card-title {\\n    flex: 0 0 150px;\\n}\\n\\n.context-menu {\\n    float: right;\\n}\\n\\n.item-selected {\\n    background-color: rgba(170, 202, 204, 0.3);\\n    color: #6C88B7;\\n    font-size: small;\\n}\\n\\n.item-selected p {\\n    margin: 10px;\\n}\"","module.exports = \"<mat-card>\\n    <mat-card-title>\\n        <div class=\\\"table-title-container\\\">\\n            <div class=\\\"card-title\\\">\\n                <p>\\n                    Events\\n                </p>\\n            </div>\\n            <mat-form-field class=\\\"events-filter\\\">\\n                <input matInput (keydown)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" id=\\\"email-filter\\\">\\n            </mat-form-field>\\n            <div class=\\\"context-menu\\\">\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                    <mat-icon>more_vert</mat-icon>\\n                </button>\\n                <mat-menu #menu=\\\"matMenu\\\">\\n                    <button mat-menu-item (click)=\\\"refreshData()\\\">\\n                        <mat-icon>refresh</mat-icon>\\n                        <span>Refresh Data</span>\\n                    </button>\\n                    <button mat-menu-item (click)=\\\"addEvent()\\\">\\n                        <mat-icon>add</mat-icon>\\n                        <span>Add Event</span>\\n                    </button>\\n                </mat-menu>\\n            </div>\\n        </div>\\n    </mat-card-title>\\n    <mat-card-content>\\n        <div class=\\\"table-container\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\">\\n\\n                <!-- Event Title Column -->\\n                <ng-container matColumnDef=\\\"event_title\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Event Title</th>\\n                    <td mat-cell *matCellDef=\\\"let event\\\">\\n                        <mat-accordion>\\n                            <mat-expansion-panel class=\\\"mat-elevation-z0\\\">\\n                                <mat-expansion-panel-header>\\n                                    <mat-panel-title>\\n                                        {{event.event_title}}\\n                                    </mat-panel-title>\\n                                </mat-expansion-panel-header>\\n                                {{event.event_description}}\\n                            </mat-expansion-panel>\\n                        </mat-accordion>\\n                    </td>\\n                </ng-container>\\n\\n                <!-- Location Name Column -->\\n                <ng-container matColumnDef=\\\"location_name\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Location Name</th>\\n                    <td mat-cell *matCellDef=\\\"let event\\\">\\n                        {{event.location_name}}\\n                    </td>\\n                </ng-container>\\n\\n                <!-- Event Start Time Column -->\\n                <ng-container matColumnDef=\\\"event_start_time\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Event Start Time</th>\\n                    <td mat-cell *matCellDef=\\\"let event\\\">\\n                        {{getTimeString(event.event_start_time)}}\\n                    </td>\\n                </ng-container>\\n\\n                <!-- Event End Time Column -->\\n                <ng-container matColumnDef=\\\"event_end_time\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Event End Time</th>\\n                    <td mat-cell *matCellDef=\\\"let event\\\">\\n                        {{getTimeString(event.event_end_time)}}\\n                    </td>\\n                </ng-container>\\n\\n                <!-- Event Type Column -->\\n                <ng-container matColumnDef=\\\"event_type\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Event Type</th>\\n                    <td mat-cell *matCellDef=\\\"let event\\\">\\n                        {{event.event_type}}\\n                    </td>\\n                </ng-container>\\n\\n                <!-- Event UID Column -->\\n                <ng-container matColumnDef=\\\"event_uid\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Event UID</th>\\n                    <td mat-cell *matCellDef=\\\"let event\\\">\\n                        {{event.uid}}\\n                    </td>\\n                </ng-container>\\n\\n                <!-- Action Button Column -->\\n                <ng-container matColumnDef=\\\"action_button\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Action Button</th>\\n                    <td mat-cell *matCellDef=\\\"let event\\\">\\n                        <div class=\\\"action-menu\\\">\\n                            <button mat-icon-button [matMenuTriggerFor]=\\\"crud_menu\\\">\\n                                <mat-icon>settings</mat-icon>\\n                            </button>\\n                            <mat-menu #crud_menu=\\\"matMenu\\\">\\n                                <button mat-menu-item (click)=\\\"updateEvent(event)\\\">\\n                                    <mat-icon>edit</mat-icon>\\n                                    <span>Update Event</span>\\n                                </button>\\n                                <button mat-menu-item (click)=\\\"removeEvent(event.uid)\\\">\\n                                    <mat-icon>delete</mat-icon>\\n                                    <span>Remove Event</span>\\n                                </button>\\n                            </mat-menu>\\n                        </div>\\n                    </td>\\n                </ng-container>\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n            </table>\\n            <mat-paginator #paginator\\n                [pageSize]=\\\"10\\\"\\n                [pageSizeOptions]=\\\"[50,100,500]\\\"\\n                [showFirstLastButtons]=\\\"true\\\">\\n            </mat-paginator>\\n        </div>\\n    </mat-card-content>\\n</mat-card>\"","/**\n * Component handle the management of events Users have the ability to view all current\n * events and edit them with Create/Read/Update (CRU) functionality.\n */\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { EventModel } from '../../models/event-model';\nimport {\n  MatDialog,\n  MatPaginator,\n  MatSnackBar,\n  MatSort,\n  MatTableDataSource,\n} from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddEventDialogComponent } from './add-event-dialog/add-event-dialog';\nimport { UpdateEventDialogComponent } from './update-event-dialog/update-event-dialog';\nimport { HttpAdminService } from '../../services/services';\nimport { AlertService } from 'ngx-alerts';\nimport { IApiResponseModel } from 'app/models/api-response-model';\n\n@Component({\n  selector: 'app-manage-events',\n  templateUrl: './manage-events.component.html',\n  styleUrls: ['./manage-events.component.css'],\n  providers: [\n    MatSnackBar,\n  ],\n})\n\nexport class ManageEventsComponent implements OnInit, AfterViewInit {\n\n  static get regCols(): string[] {\n    return this._regCols;\n  }\n\n  static set regCols(value: string[]) {\n    this._regCols = value;\n  }\n\n  private static _regCols =\n    [\n      'event_title',\n      'location_name',\n      'event_start_time',\n      'event_end_time',\n      'event_type',\n      'event_uid',\n      'action_button',\n    ];\n\n  public displayedColumns = ManageEventsComponent._regCols;\n  public newEvent: EventModel;\n  public dataSource = new MatTableDataSource<EventModel>([]);\n\n  /**\n   * Error array used to display error messages\n   */\n  public errors: Error = null;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) table: MatSort;\n\n  constructor(\n    private httpService: HttpAdminService,\n    public dialog: MatDialog,\n    public snackBar: MatSnackBar,\n    private activatedRoute: ActivatedRoute,\n    private _router: Router,\n    public alertsService: AlertService,\n  ) {\n    this.newEvent = new EventModel();\n  }\n\n  /**\n   * On the initilization of all angular components, execute the functions\n   *\n   * Retrieves the events list and populates the events table using the http-admin service\n   *\n   * @exception: Failure on the auth service will cause an error to be displayed on the /userdata/ route page\n   * @exception: Issue with the user not existing in the auth service database will cause an error to be displayed\n   *              on the /userdata/ route page\n   */\n  ngOnInit() {\n    this.activatedRoute.data\n        .subscribe((user) => {\n          if (user) {\n            this.getEvents();\n          } else {\n            this.errors = new Error('Error: No user');\n            console.error('No User');\n          }\n        },         (error) => {\n          this.errors = new Error('Error: Issue with authentication of user');\n          console.error(error);\n        });\n  }\n  /**\n   * Calls the HTTP service to get the events in order to populate the table\n   *\n   * @exception: Failure with the admin service will cause an error alert to be displayed on the /events/ route page\n   */\n  getEvents() {\n    this.httpService.getEvents().subscribe((events: EventModel[]) => {\n      this.dataSource.data = events;\n    },                                     (error) => {\n      console.error(error);\n      this.alertsService.danger('Error, Failed to retrieve the events');\n    });\n  }\n\n  /**\n   * After the initilization of all angular components, set the variables\n   *\n   * After the component view has been initialized, set the local data source paginiator property\n   * to the new instance of pagninator. Similar effect with sort.\n   */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.table;\n  }\n\n  /**\n   * Abstraction method for refreshing the datatable and pulling the events data from the API\n   */\n  refreshData() {\n    this.getEvents();\n  }\n\n   /**\n   * Renders/Opens the add/insert event dialog\n   *\n   * Opens a dialog for creating a new event. After the dialog is closed, if data is passed and not null,\n   * an event object will be passed to the HTTP Service to insert a new event.\n   *\n   * @exception: Failure with the admin service will cause an error to be displayed on the /events/ route page\n   */\n  addEvent() {\n    const dialogRef = this.dialog.open(AddEventDialogComponent, {\n      width: '400px',\n      data: Object.keys(this.newEvent),\n    });\n    dialogRef.afterClosed()\n    .subscribe((event: EventModel) => {\n      const e = new EventModel();\n      if (event) {\n        if (!event.equals(e)) {\n          event.event_start_time = new Date(event.event_start_time).getTime();\n          event.event_end_time = new Date(event.event_end_time).getTime();\n          return this.httpService.addEvent(event).subscribe((res: IApiResponseModel<{}>) => {\n            if (res.status === 200) {\n              this.alertsService.success('Successfully added new event ' + event.event_title + '!');\n              this.refreshData();\n            }\n          },                                                (error) => {\n            console.log(error);\n            this.alertsService.danger('Error: Failed to add a new event');\n          });\n        }\n        this.alertsService.warning('Event not created! Please fill in all the fields.');\n      }\n    });\n  }\n\n  /**\n   * Renders/Opens the update event dialog\n   *\n   * Opens a dialog for updating an event. After the dialog is closed, if data is passed and not null,\n   * an event object will be passed to the HTTP Service to update the event.\n   *\n   * @exception: Failure with the admin service will cause an error to be displayed on the /events/ route page\n   */\n  updateEvent(event: EventModel) {\n    const dialogRef = this.dialog.open(UpdateEventDialogComponent, {\n      width: '400px',\n      data: event,\n    });\n    dialogRef.afterClosed()\n    .subscribe((updatedEvent: EventModel) => {\n      if (updatedEvent) {\n        updatedEvent.event_start_time = new Date(updatedEvent.event_start_time).getTime();\n        updatedEvent.event_end_time = new Date(updatedEvent.event_end_time).getTime();\n        return this.httpService.updateEvent(updatedEvent).subscribe((res: IApiResponseModel<{}>) => {\n          if (res.status === 200) {\n            this.alertsService.success('Successfully updated event ' + updatedEvent.event_title + '!');\n            this.refreshData();\n          }\n        },                                                          (error) => {\n          console.log(error);\n          this.alertsService.danger('Error: Failed to update event');\n        });\n      }\n    });\n  }\n  /**\n   * Parses the unix timestring and formats it into a readable string\n   *\n   * @param time string unix timestring\n   */\n  getTimeString(time: string) {\n    return new Date(parseInt(time, 10)).toLocaleTimeString('nu', { day: 'numeric', month: 'short' });\n  }\n\n  /**\n   * Filters the location table to only include results containing the search string filterValue\n   *\n   * @param filterValue Search string to filter by\n   */\n  applyFilter(filterValue: string) {\n    let mFilterValue = filterValue.trim();\n    mFilterValue = mFilterValue.toLowerCase();\n    this.dataSource.filter = mFilterValue;\n  }\n}\n\n","module.exports = \".mat-dialog-actions {\\n    float:right;\\n}\\n\\n.mat-form-field {\\n    width: 100%;\\n}\"","module.exports = \"<h1 mat-dialog-title>Update Event</h1>\\n<div mat-dialog-content>\\n    <mat-form-field>\\n        <input [matAutocomplete]=\\\"auto\\\" matInput [(ngModel)]=\\\"updatedEvent.event_location\\\" placeholder=\\\"Event Location\\\">\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let option of locationList | async\\\" [value]=\\\"option.uid.toString()\\\">\\n                {{option.location_name}}\\n            </mat-option>\\n        </mat-autocomplete>\\n    </mat-form-field>\\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"eventStartTime\\\" placeholder=\\\"Start date [Format: December 17, 1995 03:24:00]\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"eventEndTime\\\" placeholder=\\\"End date [Format: December 17, 1995 03:24:00]\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"updatedEvent.event_title\\\" placeholder=\\\"Event Title\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n        <textarea matInput [(ngModel)]=\\\"updatedEvent.event_description\\\" placeholder=\\\"Event description\\\"></textarea>\\n    </mat-form-field>\\n    <mat-form-field>\\n        <input [matAutocomplete]=\\\"autoType\\\" matInput [(ngModel)]=\\\"updatedEvent.event_type\\\" placeholder=\\\"Event type\\\">\\n        <mat-autocomplete #autoType=\\\"matAutocomplete\\\">\\n            <mat-option value=\\\"food\\\">Food</mat-option>\\n            <mat-option value=\\\"workshop\\\">Workshop</mat-option>\\n            <mat-option value=\\\"activity\\\">Activity</mat-option>\\n        </mat-autocomplete>\\n    </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-button mat-dialog-close>No Thanks</button>\\n    <button mat-button (click)=\\\"dateToNumber()\\\" [mat-dialog-close]=\\\"updatedEvent\\\" cdkFocusInitial>Ok</button>\\n</div>\\n\"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { EventModel } from '../../../models/event-model';\nimport { HttpAdminService } from '../../../services/services';\nimport { LocationModel } from '../../../models/location-model';\n\n@Component({\n  selector: 'app-update-event-dialog',\n  templateUrl: './update-event-dialog.html',\n  styleUrls: ['./update-event-dialog.css'],\n})\nexport class UpdateEventDialogComponent {\n\n  public updatedEvent: EventModel;\n  public locationList: Observable<LocationModel[]>;\n  private eventStartTime: Date;\n  private eventEndTime: Date;\n\n  constructor(\n    public dialogRef: MatDialogRef<UpdateEventDialogComponent>,\n    private httpService: HttpAdminService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) {\n    this.locationList = this.httpService.getLocations().pipe(take(1));\n    this.updatedEvent = new EventModel();\n    this.updatedEvent.fromData(data);\n    this.eventStartTime = new Date(this.updatedEvent.event_start_time);\n    this.eventEndTime = new Date(this.updatedEvent.event_end_time);\n  }\n\n  private dateToNumber() {\n    this.updatedEvent.event_start_time = new Date(this.eventStartTime).getTime();\n    this.updatedEvent.event_end_time = new Date(this.eventEndTime).getTime();\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  manage-hackathon works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-hackathon',\n  templateUrl: './manage-hackathon.component.html',\n  styleUrls: ['./manage-hackathon.component.css']\n})\nexport class ManageHackathonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".mat-dialog-actions {\\n\\tdisplay: inline-block;\\n}\\n\\n.mat-form-field {\\n    float: right;\\n    width: 100%;\\n}\"","module.exports = \"<h1 mat-dialog-title>Add Location</h1>\\n<div mat-dialog-content>\\n    <p>Enter Location Name</p>\\n\\t<mat-form-field class=\\\"add-location\\\" class=\\\"col-sm-6 col-sm-offset-3\\\">\\n\\t    <input matInput #addLocation placeholder=\\\"Location Name\\\" id=\\\"add-location\\\">\\n\\t</mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n\\t<button mat-button mat-dialog-close>No Thanks</button>\\n\\t<button mat-button [mat-dialog-close]=\\\"addLocation.value\\\"> Add Location </button>\\n</div>\\n    \"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-add-location-dialog',\n  templateUrl: './add-location-dialog.html',\n  styleUrls: ['./add-location-dialog.css'],\n})\nexport class AddLocationDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<AddLocationDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \".table-title-container {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 75vh;\\n}\\n\\n.mat-header-cell.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-header-row {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  background: white;\\n  z-index: 999;\\n}\\n\\n.h4 {\\n  display: block;\\n  width: 80%;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.insert-location {\\n  display: block;\\n  width: 80%;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.location-filter {\\n  margin: 10px;\\n  font-size: small;\\n  flex-basis: 60%;\\n}\\n\\n.mat-column-select {\\n  overflow: visible;\\n}\\n\\nmat-cell {\\n    padding: 10px;\\n}\\n\\n.mat-header-row {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  background: white;\\n  z-index: 999;\\n}\\n\\n.card-title {\\n  flex: 5;\\n}\\n\\n.context-menu {\\n  margin-left: 10%;\\n  float: right;\\n}\\n\\n.item-selected {\\n  background-color: rgba(170, 202, 204, 0.3);\\n  color: #6C88B7;\\n  font-size: small;\\n}\\n\\n.item-selected p {\\n  margin: 10px;\\n}\"","module.exports = \"<mat-card>\\n    <mat-card-title>\\n        <b>Locations</b>\\n        <div class=\\\"table-title-container\\\">\\n            <div *ngIf=\\\"selection.isEmpty(); else showSelection\\\" class=\\\"card-title\\\">\\n                <h4>Location Data</h4>\\n            </div>\\n            <ng-template #showSelection>\\n                <div class=\\\"item-selected card-title\\\">\\n                    <p>\\n                    {{selection.selected.length === 1 ? selection.selected.length + \\\" row selected\\\" :\\n                    selection.selected.length + \\\" rows selected\\\"}}\\n                    <p>\\n                </div>\\n            </ng-template>\\n            <mat-form-field class=\\\"location-filter\\\">\\n                <input matInput (keydown)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" id=\\\"email-filter\\\">\\n            </mat-form-field>\\n            <div class=\\\"context-menu\\\">\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                    <mat-icon>more_vert</mat-icon>\\n                </button>\\n                <mat-menu #menu=\\\"matMenu\\\">\\n                    <button mat-menu-item (click)=\\\"refreshData()\\\">\\n                        <mat-icon>refresh</mat-icon>\\n                        <span>Refresh Data</span>\\n                    </button>\\n                    <button mat-menu-item (click)=\\\"showInsertDialog()\\\">\\n                        <mat-icon>add</mat-icon>\\n                        <span>Add Location</span>\\n                    </button>\\n                </mat-menu>\\n            </div>\\n        </div>\\n    </mat-card-title>\\n    <mat-card-content>\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <!--  Location Name Column -->\\n            <ng-container matColumnDef=\\\"location_name\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Location Name</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let location\\\"> {{location.location_name}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- UID Column -->\\n            <ng-container matColumnDef=\\\"uid\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> UID</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let location\\\"> {{location.uid}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Update Button Column-->\\n            <ng-container matColumnDef=\\\"updateButton\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Update</mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let location\\\">\\n                        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"showUpdateDialog(location.location_name, location.uid)\\\">Update</button>\\n                    </mat-cell>\\n            </ng-container>\\n\\n            <!-- Remove Button Column-->\\n            <ng-container matColumnDef=\\\"removeButton\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Remove</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let location\\\">\\n                    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"showRemoveDialog(location.location_name, location.uid)\\\">Remove</button>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n        <mat-paginator #paginator\\n                    [pageSize]=\\\"10\\\"\\n                    [pageSizeOptions]=\\\"[50,100,500]\\\"\\n                    [showFirstLastButtons]=\\\"true\\\">\\n        </mat-paginator>\\n    </mat-card-content>\\n</mat-card>\"","/**\n * Component handle the management of locations for events. Users have the ability to view all current\n * locations and edit them with Create/Read/Update/Delete (CRUD) functionality.\n */\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\n\nimport { MatDialog, MatPaginator, MatSnackBar, MatSort, MatTableDataSource } from '@angular/material';\nimport { AngularFireAuth } from 'angularfire2/auth';\n\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddLocationDialogComponent } from './add-location-dialog/add-location-dialog';\nimport { UpdateLocationDialogComponent } from './update-location-dialog/update-location-dialog';\nimport { RemoveLocationDialogComponent } from './remove-location-dialog/remove-location-dialog';\nimport { LocationModel } from 'app/models/location-model';\nimport { AlertService } from 'ngx-alerts';\n\n@Component({\n  selector: 'app-manage-locations',\n  providers: [\n    HttpAdminService,\n  ],\n  templateUrl: './manage-locations.component.html',\n  styleUrls: ['./manage-locations.component.css'],\n})\n\nexport class ManageLocationsComponent implements OnInit, AfterViewInit {\n  private static regCols = ['location_name', 'uid', 'updateButton', 'removeButton'];\n  public displayedColumns = ManageLocationsComponent.regCols;\n  public dataSource = new MatTableDataSource<LocationModel>([]);\n  private user: firebase.User;\n  public selection = new SelectionModel<any>(true, []);\n\n  /**\n   * Error array used to display error messages\n   */\n  public errors: Error = null;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) table: MatSort;\n\n  constructor(\n    public adminService: HttpAdminService,\n    public activatedRoute: ActivatedRoute,\n    private router: Router,\n    public dialog: MatDialog,\n    public alertsService: AlertService,\n    ) {\n  }\n\n  /**\n   * On the initilization of all angular components, execute the functions\n   *\n   * Retrieves the locations list and populates the locations table using the http-admin service\n   *\n   * @exception: Failure on the auth service will cause an error to be displayed in the console\n   * @exception: Issue with the user not existing in the auth service database will cause an error to be displayed\n   *                 in the console.\n   */\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((user) => {\n      if (user) {\n        this.getLocations();\n      } else {\n        this.errors = new Error('Error: No user');\n        console.error('No User');\n      }\n    },                                 (error) => {\n      this.errors = new Error('Error: Issue with authentication of user');\n      console.error(error);\n    });\n  }\n\n  /**\n   * After the initilization of all angular components, set the variables\n   *\n   * After the component view has been initialized, set the local data source paginiator property\n   * to the new instance of pagninator. Similar effect with sort.\n   */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.table;\n  }\n\n  /**\n   * Filters the location table to only include results containing the search string filterValue\n   *\n   * @param filterValue Search string to filter by\n   */\n  applyFilter(filterValue: string) {\n    let mFilterValue = filterValue.trim();\n    mFilterValue = mFilterValue.toLowerCase();\n    this.dataSource.filter = mFilterValue;\n  }\n\n  /**\n   * Checks whether the number of selected elements matches the total number of rows.\n   */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /**\n   * Selects all rows if they are not all selected; otherwise clear selection.\n   */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /**\n   * Calls the HTTP service to get the locations in order to populate the table\n   *\n   * @exception: Failure with the admin service will cause an error to be displayed on the /locations/ route page\n   */\n  getLocations() {\n    this.adminService.getLocations().subscribe((data) => {\n      this.displayedColumns = ManageLocationsComponent.regCols;\n      this.dataSource.data = data;\n    },                                         (error) => {\n      console.error(error);\n      this.alertsService.danger('Error, Failed to retrieve the locations');\n    });\n  }\n\n  /**\n   * Renders the Add/Insert Location popup dialog\n   */\n  showInsertDialog() {\n    const dialogRef = this.dialog.open(AddLocationDialogComponent, {\n      height: '240px',\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.insertLocation(result);\n      }\n    },                                (error) => {\n      console.log(error);\n      this.alertsService.danger('Error with insert location dialog. Please try again');\n    });\n  }\n\n  /**\n   * Adds a new location with the name of Locationvalue\n   *\n   * @param locationValue Name for the location\n   * @exception: Failure with the admin service will cause an error to be displayed on the /locations/ route page\n   */\n  insertLocation(locationValue: string) {\n    const mLocationValue = locationValue.trim();\n    this.adminService.addNewLocation(mLocationValue).subscribe((resp) => {\n      this.refreshData();\n      this.alertsService.success('Success, Inserted new location');\n    },                                                         (error) => {\n      console.error(error);\n      this.alertsService.danger('Error: Failed to insert location');\n    });\n  }\n\n  /**\n   * Renders the Delete/Remove Location popup dialog\n   */\n  showRemoveDialog(name: string, uid: string) {\n    const dialogRef = this.dialog.open(RemoveLocationDialogComponent, {\n      height: '200px',\n      data: name,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.removeLocation(uid);\n      }\n    },                                (error) => {\n      console.log(error);\n      this.alertsService.danger('Error with insert location dialog. Please try again');\n    });\n  }\n\n  /**\n   * Removes/deletes a location from the database\n   *\n   * @param uid Unique identifier for the location\n   * @exception: Failure with the admin service will cause an error to be displayed on the /locations/ route page\n   */\n  removeLocation(uid: string) {\n    this.adminService.removeLocation(uid).subscribe((resp) => {\n      this.refreshData();\n      this.alertsService.success('Success, removed a location');\n    },                                              (error) => {\n      console.error(error);\n      this.alertsService.danger('Error, Failed to remove location');\n    });\n  }\n\n  /**\n   * Renders the Update Location popup dialog\n   */\n  showUpdateDialog(name: string, uid: string) {\n    const dialogRef = this.dialog.open(UpdateLocationDialogComponent, {\n      height: '300px',\n      data: name,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.updateLocation(result, uid);\n      }\n    },                                (error) => {\n      console.log(error);\n      this.alertsService.danger('Error with update location dialog. Please try again');\n    });\n  }\n\n  /**\n   * Updates the Location to have a new name\n   *\n   * @param locationValue  new name of location\n   * @param uid  Unique identifier for the location\n   *\n   * @exception: Failure with the admin service will cause an error to be displayed on the /locations/ route page\n   */\n  updateLocation(locationValue: string, uid: string) {\n    const mLocationValue = locationValue.trim();\n    this.adminService.updateLocation(uid, mLocationValue).subscribe(() => {\n      this.refreshData();\n      this.alertsService.success('Success, Updated Location!');\n    },                                                              (error) => {\n      console.error(error);\n      this.alertsService.danger(error);\n    });\n  }\n\n  /**\n   * Abstraction method for refreshing the datatable and pulling the location data from the API\n   */\n  refreshData() {\n    this.getLocations();\n  }\n}\n\n","module.exports = \".mat-dialog-actions {\\n\\tdisplay: inline-block;\\n}\\n\\n.mat-form-field {\\n    float: right;\\n    width: 100%;\\n}\\n\\n.name-container {\\n    display: inline-flex;\\n    flex-direction: row;\\n}\"","module.exports = \"<h1 mat-dialog-title>Remove Location</h1>\\n<div mat-dialog-content>\\n\\t<div class='name-container'>\\n\\t\\t<p><b>Location Name: </b> {{passed_data}}</p>\\n\\t</div>\\n</div>\\n<div mat-dialog-actions>\\n\\t<button mat-button mat-dialog-close>No Thanks</button>\\n\\t<button mat-button [mat-dialog-close]=\\\"true\\\"> Remove Location </button>\\n</div>\\n    \"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-remove-location-dialog',\n  templateUrl: './remove-location-dialog.html',\n  styleUrls: ['./remove-location-dialog.css'],\n})\nexport class RemoveLocationDialogComponent {\n\n  private passed_data: any;\n  constructor(public dialogRef: MatDialogRef<RemoveLocationDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.passed_data = data;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \".mat-dialog-actions {\\n\\tdisplay: inline-block;\\n}\\n\\n.mat-form-field {\\n    float: right;\\n    width: 100%;\\n}\\n\\n.content-container {\\n    display: block\\n}\"","module.exports = \"<h1 mat-dialog-title>Update Location</h1>\\n<div mat-dialog-content>\\n\\t<div class=\\\"content-container\\\">\\n\\t\\t<div style=\\\"display: block;\\\">\\n\\t\\t\\t<p><b>Current Location Name</b></p>\\n\\t\\t\\t<p>{{passed_data}}</p>\\n\\t\\t</div>\\n\\t\\t<div style=\\\"display: block;\\\">\\n\\t\\t\\t<p><b>Enter new Location name</b></p>\\n\\t\\t\\t<mat-form-field class=\\\"update-location\\\" class=\\\"col-sm-6 col-sm-offset-3\\\">\\n\\t\\t\\t\\t<input matInput #updateLocation placeholder={{passed_data}} id=\\\"update-location\\\">\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<div mat-dialog-actions>\\n\\t<button mat-button mat-dialog-close>No Thanks</button>\\n\\t<button mat-button [mat-dialog-close]=\\\"updateLocation.value\\\"> Update Location </button>\\n</div>\\n    \"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-update-location-dialog',\n  templateUrl: './update-location-dialog.html',\n  styleUrls: ['./update-location-dialog.css'],\n})\nexport class UpdateLocationDialogComponent {\n  private passed_data: string;\n  constructor(public dialogRef: MatDialogRef<UpdateLocationDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.passed_data = data;\n  }\n\n  /**\n   * On clicking off the dialog, close the dialog\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \".table-container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 75vh;\\n}\\n\\n.mat-header-cell.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.email-filter {\\n  display: block;\\n  width: 80%;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.mat-column-select {\\n  overflow: visible;\\n}\\n\\nmat-header-cell, mat-cell {\\n  display: inline-block;\\n  width: 200px;\\n}\\n\\nmat-header-row, mat-row {\\n  display: inline-flex;\\n}\\n\\nmat-cell {\\n    padding: 10px;\\n}\\n\\n.mat-header-row {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  background: white;\\n}\\n\\n.mat-card-title {\\n    display: flex;\\n}\\n\\n.card-title {\\n    flex: 5;\\n}\\n\\n.context-menu {\\n    float: right;\\n}\\n\\n.item-selected {\\n    background-color: rgba(170, 202, 204, 0.3);\\n    color: #6C88B7;\\n    font-size: small;\\n}\\n\\n.item-selected p {\\n    margin: 10px;\\n}\"","module.exports = \"<!-- Search Bar -->\\n<div class=\\\"col s12\\\">\\n    <mat-form-field class=\\\"email-filter\\\">\\n        <input matInput (keydown)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" id=\\\"email-filter\\\">\\n    </mat-form-field>\\n</div>\\n\\n<mat-card>\\n    <!-- Table Header and Menu Actions -->\\n    <mat-card-title>\\n        <div *ngIf=\\\"selection.isEmpty(); else showSelection\\\" class=\\\"card-title\\\">\\n            <p>\\n            RSVP\\n            </p>\\n        </div>\\n        <ng-template #showSelection>\\n            <div class=\\\"item-selected card-title\\\">\\n                <p>\\n                {{selection.selected.length === 1 ? selection.selected.length + \\\" row selected\\\" :\\n                selection.selected.length + \\\" rows selected\\\"}}\\n                <p>\\n            </div>\\n        </ng-template>\\n        <div class=\\\"context-menu\\\">\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n                <button mat-menu-item (click)=\\\"refreshData()\\\">\\n                    <mat-icon>refresh</mat-icon>\\n                    <span>Refresh Data</span>\\n                </button>\\n            </mat-menu>\\n        </div>\\n    </mat-card-title>\\n\\n     <!-- Data Table -->\\n    <mat-card-content>\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <!-- First Name Column -->\\n            <ng-container matColumnDef=\\\"firstname\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> First Name</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.firstname}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Last Name Column -->\\n            <ng-container matColumnDef=\\\"lastname\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Last Name</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.lastname}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Email Column -->\\n            <ng-container matColumnDef=\\\"email\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Email</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.email}}</mat-cell>\\n            </ng-container>\\n\\n            <!--  Pin Number Column -->\\n            <ng-container matColumnDef=\\\"pin\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Pin Number</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.pin}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- UID Column -->\\n            <ng-container matColumnDef=\\\"uid\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> UID</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.idRSVP}}</mat-cell>\\n            </ng-container>\\n\\n             <!-- RSVP Time Column -->\\n            <ng-container matColumnDef=\\\"rsvp_time\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> RSVP Time</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{getDateString(user.rsvp_time)}} </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n        <mat-paginator #paginator\\n                       [pageSize]=\\\"10\\\"\\n                       [pageSizeOptions]=\\\"[50,100,500]\\\"\\n                       [showFirstLastButtons]=\\\"true\\\">\\n        </mat-paginator>\\n    </mat-card-content>\\n</mat-card>\\n\"","/**\n * TODO: Add docstring explaining component\n */\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\n\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar } from '@angular/material';\nimport { AngularFireAuth } from 'angularfire2/auth';\n\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-manage-rsvp',\n  providers: [\n    HttpAdminService,\n  ],\n  templateUrl: './manage-rsvp.component.html',\n  styleUrls: ['./manage-rsvp.component.css'],\n})\n\n\nexport class ManageRsvpComponent implements OnInit, AfterViewInit {\n  private static regCols = [/*'select',*/ 'firstname', 'lastname', 'email', 'pin', 'uid', 'rsvp_time'];\n\n  public displayedColumns = ManageRsvpComponent.regCols;\n  public dataSource = new MatTableDataSource<any>([]);\n  public selection = new SelectionModel<any>(true, []);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) table: MatSort;\n\n  static getDateString(time: string) {\n    return new Date(parseInt(time, 10)).toLocaleString()\n  }\n\n  static convertFromBaseToBase(str, fromBase, toBase) {\n    const num = parseInt(str, fromBase); // convert from one base to another\n    return num.toString(toBase);\n  }\n\n  constructor(\n    public adminService: HttpAdminService,\n    public activatedRoute: ActivatedRoute,\n    private router: Router,\n    private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((user) => {\n      if (user) {\n        this.onRSVPClick();\n      } else {\n        console.error('NO USER');\n      }\n    });\n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.table;\n  }\n\n  applyFilter(filterValue: string) {\n    let mFilterValue = filterValue.trim();\n    mFilterValue = mFilterValue.toLowerCase();\n    this.dataSource.filter = mFilterValue;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  onRSVPClick() {\n    this.adminService.getRSVPs().subscribe((data) => {\n      this.displayedColumns = ManageRsvpComponent.regCols;\n      this.dataSource.data = data;\n    },                                              (error) => {\n      console.error(error);\n      this.openSnackBar('Error: Failed to load data', '');\n    });\n  }\n\n  refreshData() {\n    this.onRSVPClick();\n  }\n\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n}\n","module.exports = \".btn {\\n    margin-left: auto;\\n    margin-right: auto;\\n    display: block;\\n}\\n\\n@font-face {\\n    font-family: 'Cornerstone';\\n    src: url('/assets/fonts/Cornerstone.ttf');\\n}\\n\\n.header-text {\\n    font-family: 'Cornerstone';\\n    font-size: 2.0em;\\n    line-height: 100%;\\n    margin-top: 25px;\\n}\\n\\n.text-center {\\n    -ms-grid-row-align: center;\\n        align-self: center;\\n    margin: 0 auto;\\n    width: 50%;\\n}\\n\\n.mat-form-field {\\n    width: 400px;\\n}\\n\\n.form-field-container {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.top-container {\\n    display: flex;\\n    justify-content: center;\\n    flex-basis: 50%;\\n}\\n\\n.mat-card {\\n    margin-top: 2.5%;\\n}\"","module.exports = \"<div class=\\\"top-container\\\">\\n    <mat-card>\\n        <mat-card-title>\\n            <div class=\\\"header-text\\\">Upgrade User</div>\\n        </mat-card-title>\\n        <mat-card-content>\\n            <form (submit)=\\\"changeUserRole(email)\\\">\\n            <div class=\\\"form-container\\\">\\n                <div class=\\\"form-field-container\\\">\\n                    <mat-form-field appearance=\\\"outline\\\">\\n                        <input matInput [(ngModel)]=\\\"email\\\" placeholder=\\\"Admin Email\\\" id=\\\"admin-maker\\\"\\n                                [formControl]=\\\"emailControl\\\"\\n                                required>\\n                    </mat-form-field>\\n                    <mat-form-field appearance=\\\"outline\\\" >\\n                        <mat-select [(value)]=\\\"level\\\">\\n                            <mat-option *ngFor=\\\"let option of options\\\" value=\\\"{{option.value}}\\\">{{option.text}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div>\\n                    <button mat-raised-button color='primary' type=\\\"submit\\\">Submit</button>\\n                </div>\\n            </div>\\n            </form>\\n        </mat-card-content>\\n    </mat-card>\\n</div>\"","/**\n * Manager users components provides an interface to elevate/demote users for the application.\n * Users are able to input an email associated to a Firebase account and change that the user role\n * linked to that account. Users are only able to elevate a user to their current user role. \n */\nimport { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertService } from 'ngx-alerts';\n\n@Component({\n  selector: 'app-manage-users',\n  providers: [\n    HttpAdminService,\n  ],\n  templateUrl: './manage-users.component.html',\n  styleUrls: ['./manage-users.component.css'],\n})\nexport class ManageUsersComponent implements OnInit {\n  get totalOptions(): { value: number; text: string }[] {\n    return this._totalOptions;\n  }\n\n  set totalOptions(value: { value: number; text: string }[]) {\n    this._totalOptions = value;\n  }\n\n  private _totalOptions = [\n    { value: 1, text: 'Volunteer' },\n    { value: 2, text: 'Team Member' },\n    { value: 3, text: 'Exec' },\n    { value: 4, text: 'Tech-exec' },\n  ];\n\n  public level: number;\n  public email: string;\n  public emailControl = new FormControl('', [Validators.required, Validators.email]);\n  public options: { text, value }[]; // TODO: Refactor into proper model\n\n  constructor(\n    public adminService: HttpAdminService,\n    public activatedRoute: ActivatedRoute,\n    public alertsService: AlertService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((user) => {\n      if (user) {\n        this.adminService.getAdminStatus()\n            .subscribe((adminData: {admin: boolean, privilege: number}) => {\n              this.options = this._totalOptions.slice(0, adminData.privilege);\n            },         (error) => { // TODO: Make better error handler\n              console.error(error);\n            });\n      } else {\n        this.alertsService.danger('Error: No user!');\n        console.error('NO USER');\n      }\n    });\n  }\n\n  changeUserRole(email: string) {\n    if (email != null) {\n      this.adminService.getUserUID(email).subscribe((resp) => {\n        this.adminService.elevateUser(resp.uid, this.level.toString())\n            .subscribe(() => {\n              this.alertsService.success('Successfully elevated user!');\n            },         (error) => {\n              this.alertsService.warning('Error: Issue with elevating user!');\n              console.error(error);\n            });\n      },                                            (error) => {\n        this.alertsService.warning('Error: Issue with getting user UID!');\n        console.error(error);\n      });\n    }\n  }\n\n}\n","module.exports = \".table-container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 75vh;\\n}\\n\\n.mat-header-cell.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.email-filter {\\n  display: block;\\n  width: 80%;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.mat-header-row {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  background: white;\\n}\\n\\n.mat-card-title {\\n    display: flex;\\n}\\n\\n.card-title {\\n    flex: 5;\\n}\\n\\n.context-menu {\\n    float: right;\\n}\\n\"","module.exports = \"<!-- Search Bar -->\\n<div class=\\\"col s12\\\">\\n    <mat-form-field class=\\\"email-filter\\\">\\n        <input matInput (keydown)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" id=\\\"email-filter\\\">\\n    </mat-form-field>\\n</div>\\n\\n<mat-card>\\n    <!-- Table Header and Menu Actions -->\\n    <mat-card-title> \\n        <div class =\\\"card-title\\\">\\n            <p>\\n                Pre-Registrations\\n            </p>\\n        </div>\\n        <div class=\\\"context-menu\\\">\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n                <button mat-menu-item (click)=\\\"refreshData()\\\">\\n                    <mat-icon>refresh</mat-icon>\\n                    <span>Refresh Data</span>\\n                </button>\\n            </mat-menu>\\n        </div>\\n    </mat-card-title>\\n\\n    <!-- Data Table -->\\n    <mat-card-content>\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n            <!-- Email Column -->\\n            <ng-container matColumnDef=\\\"email\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Email</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.email}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- UID Column -->\\n            <ng-container matColumnDef=\\\"uid\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> UID</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.id}}</mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n        <mat-paginator #paginator\\n                       [pageSize]=\\\"10\\\"\\n                       [pageSizeOptions]=\\\"[50,100,500]\\\"\\n                       [showFirstLastButtons]=\\\"true\\\">\\n        </mat-paginator>\\n    </mat-card-content>\\n</mat-card>\\n\"","/**\n * TODO: Add docstring explaining component\n */\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar } from '@angular/material';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-pre-registration-table',\n  templateUrl: './pre-registration-table.component.html',\n  providers: [\n    HttpAdminService,\n    AngularFireAuth,\n  ],\n  styleUrls: ['./pre-registration-table.component.css'],\n})\nexport class PreRegistrationTableComponent implements OnInit, AfterViewInit {\n  private static preRegCols = ['email', 'uid'];\n\n  public displayedColumns = PreRegistrationTableComponent.preRegCols;\n  public dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) table: MatSort;\n\n  constructor(\n    public adminService: HttpAdminService,\n    public activatedRoute: ActivatedRoute,\n    public snackBar: MatSnackBar,\n  ) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((user) => {\n      if (user) {\n        this.onPreRegistrationClick();\n      } else {\n        console.error('NO USER');\n        this.openSnackBar('Error: No User', '');\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.table;\n  }\n\n  applyFilter(filterValue: string) {\n    let mFilterValue = filterValue.trim();\n    mFilterValue = filterValue.toLowerCase();\n    this.dataSource.filter = mFilterValue;\n  }\n\n  onPreRegistrationClick() {\n    this.displayedColumns = [];\n    this.dataSource.data = [];\n    this.adminService.getPreRegistrations()\n        .subscribe((data) => {\n          this.displayedColumns = PreRegistrationTableComponent.preRegCols;\n          this.dataSource.data = data;\n        },         (error) => {\n          console.error(error);\n          this.openSnackBar('Error: Failed to load data', '');\n        });\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n  \n  refreshData() {\n    this.onPreRegistrationClick();\n  }\n\n}\n","module.exports = \"mat-header-cell, mat-cell {\\n  display: inline-block;\\n  width: 200px;\\n}\\n\\nmat-header-row, mat-row {\\n  display: inline-flex;\\n}\\n\\nmat-cell {\\n    padding: 10px;\\n}\\n\\n.table-container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 75vh;\\n}\\n\\n.mat-header-cell.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.email-filter {\\n  display: block;\\n  width: 80%;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.mat-column-select {\\n  overflow: visible;\\n}\\n\\n.mat-header-row {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  background: white;\\n  z-index: 9999;\\n}\\n\\n.mat-card-title {\\n    display: flex;\\n}\\n\\n.card-title {\\n    flex: 5;\\n}\\n\\n.context-menu {\\n    float: right;\\n}\\n\\n.item-selected {\\n    background-color: rgba(170, 202, 204, 0.3);\\n    color: #6C88B7;\\n    font-size: small;\\n}\\n\\n.item-selected p {\\n    margin: 10px;\\n}\\n\"","module.exports = \"<!-- Search Bar -->\\n<div class=\\\"col s12\\\">\\n    <mat-form-field class=\\\"email-filter\\\">\\n        <input matInput (keydown)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" id=\\\"email-filter\\\">\\n    </mat-form-field>\\n</div>\\n\\n<div style=\\\"display: inline-block;\\\">\\n    <mat-slide-toggle>View All Data</mat-slide-toggle>\\n    <mat-slide-toggle>Enable Selection</mat-slide-toggle>\\n</div>\\n\\n<mat-card>\\n    <!-- Table Header and Menu Actions -->\\n    <mat-card-title>\\n        <div *ngIf=\\\"selection.isEmpty(); else showSelection\\\" class=\\\"card-title\\\">\\n            <p>\\n            Registrations\\n            </p>\\n        </div>\\n        <ng-template #showSelection>\\n            <div class=\\\"item-selected card-title\\\">\\n                <p>\\n                {{selection.selected.length === 1 ? selection.selected.length + \\\" row selected\\\" :\\n                selection.selected.length + \\\" rows selected\\\"}}\\n                </p>\\n            </div>\\n        </ng-template>\\n        <div class=\\\"context-menu\\\">\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n                <button mat-menu-item (click)=\\\"refreshData()\\\">\\n                    <mat-icon>refresh</mat-icon>\\n                    <span>Refresh Data</span>\\n                </button>\\n                <button mat-menu-item *ngIf=\\\"!selection.isEmpty()\\\" (click)=\\\"sendEmail()\\\">\\n                    <mat-icon>email</mat-icon>\\n                    <span>Send email</span>\\n                </button>\\n            </mat-menu>\\n        </div>\\n    </mat-card-title>\\n\\n    <!-- Data Table -->\\n    <mat-card-content>\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n            <!-- Checkbox Column -->\\n            <ng-container matColumnDef=\\\"select\\\">\\n                <mat-header-cell *matHeaderCellDef class=\\\"masterSelect\\\">\\n                    <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                                  [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                                  [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                    </mat-checkbox>\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\">\\n                    <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                                  (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                                  [checked]=\\\"selection.isSelected(row)\\\">\\n                    </mat-checkbox>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <!-- First Name Column -->\\n            <ng-container matColumnDef=\\\"firstname\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> First Name</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.firstname}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Last Name Column -->\\n            <ng-container matColumnDef=\\\"lastname\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Last Name</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.lastname}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Email Column -->\\n            <ng-container matColumnDef=\\\"email\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Email</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.email}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- University Column -->\\n            <ng-container matColumnDef=\\\"university\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> University</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.university}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Academic Year Column -->\\n            <ng-container matColumnDef=\\\"academic_year\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Academic Year</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.academic_year}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Gender Column -->\\n            <ng-container matColumnDef=\\\"gender\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Gender</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.gender}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Coding Experience Column -->\\n            <ng-container matColumnDef=\\\"coding_experience\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Coding Experience</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.coding_experience}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- College Major Column -->\\n            <ng-container matColumnDef=\\\"major\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Major</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.major}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Shirt Size Column -->\\n            <ng-container matColumnDef=\\\"shirt_size\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Shirt Size</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.shirt_size}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Dietary Restriction Column -->\\n            <ng-container matColumnDef=\\\"dietary_restriction\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Dietary Restrictions</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.dietary_restriction ? user.dietary_restriction : \\\"\\\"}}\\n                </mat-cell>\\n            </ng-container>\\n\\n            <!-- Allergies Column -->\\n            <ng-container matColumnDef=\\\"allergies\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Allergies</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.allergies ? user.allergies : \\\"\\\"}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Travel Reimbursement Column -->\\n            <ng-container matColumnDef=\\\"travel_reimbursement\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Travel Reimbursement</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.travel_reimbursement === 1}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Veteran Column -->\\n            <ng-container matColumnDef=\\\"veteran\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Veteran</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.veteran === 1}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- First hackathon Column -->\\n            <ng-container matColumnDef=\\\"first_hackathon\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> First Hackathon</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.first_hackathon === 1}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Race Column -->\\n            <ng-container matColumnDef=\\\"race\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Ethnicity</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.race}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Expectations Column -->\\n            <ng-container matColumnDef=\\\"expectations\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Expectations from HackPSU</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.expectations}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Project Column -->\\n            <ng-container matColumnDef=\\\"project\\\" style=\\\"width: 500px;\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Project they are proud of</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.project}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Referral Column -->\\n            <ng-container matColumnDef=\\\"referral\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Where they heard about HackPSU</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.referral}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Resume Column -->\\n            <ng-container matColumnDef=\\\"resume\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Resume</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\">\\n                    <a href={{user.resume}} *ngIf=\\\"user.resume\\\" target=\\\"_blank\\\">\\n                        <mat-icon color=\\\"accent\\\">file_download</mat-icon>\\n                    </a>\\n                </mat-cell>\\n            </ng-container>\\n            \\n            <!--  Pin Number Column -->\\n            <ng-container matColumnDef=\\\"pin\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Pin Number</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{convertFromBaseToBase(user.pin, 10, 14)}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- UID Column -->\\n            <ng-container matColumnDef=\\\"uid\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> UID</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user\\\"> {{user.uid}}</mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n        <mat-paginator #paginator\\n                       [pageSize]=\\\"10\\\"\\n                       [pageSizeOptions]=\\\"[50,100,500]\\\"\\n                       [showFirstLastButtons]=\\\"true\\\">\\n        </mat-paginator>\\n    </mat-card-content>\\n</mat-card>\\n\"","/**\n * TODO: Add docstring explaining component\n */\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\n\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar } from '@angular/material';\nimport { AngularFireAuth } from 'angularfire2/auth';\n\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppConstants } from '../../helpers/AppConstants';\nimport { EmailListService } from '../../services/email-list/email-list.service';\n\n@Component({\n  selector: 'app-registration-table',\n  providers: [\n    HttpAdminService,\n  ],\n  templateUrl: './registration-table.component.html',\n  styleUrls: ['./registration-table.component.css'],\n})\n\nexport class RegistrationTableComponent implements OnInit, AfterViewInit {\n  private static regCols = ['select', 'firstname', 'lastname', 'email', 'university', 'academic_year',\n    'gender', 'coding_experience',\n    'major', 'shirt_size', 'dietary_restriction', 'allergies', 'travel_reimbursement', 'veteran',\n    'first_hackathon', 'race', 'expectations', 'project', 'referral', 'resume', 'pin', 'uid'];\n\n  public displayedColumns = RegistrationTableComponent.regCols;\n  public dataSource = new MatTableDataSource<any>([]);\n  public selection = new SelectionModel<any>(true, []);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) table: MatSort;\n\n  constructor(\n    public adminService: HttpAdminService,\n    public activatedRoute: ActivatedRoute,\n    public emailListService: EmailListService,\n    private router: Router,\n    private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((user) => {\n      if (user) {\n        this.onRegistrationClick();\n      } else {\n        console.error('NO USER');\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.table;\n  }\n\n  applyFilter(filterValue: string) {\n    let mFilterValue = filterValue.trim();\n    mFilterValue = mFilterValue.toLowerCase();\n    this.dataSource.filter = mFilterValue;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  onRegistrationClick() {\n    this.adminService.getRegistrations().subscribe((data) => {\n      this.displayedColumns = RegistrationTableComponent.regCols;\n      this.dataSource.data = data;\n    },                                                       (error) => {\n      console.error(error);\n      this.openSnackBar('Error: Failed to load data', '');\n    });\n  }\n\n  sendEmail() {\n    this.emailListService.emailList = this.selection.selected;\n    this.router.navigate([AppConstants.EMAIL_ENDPOINT])\n      .catch(e => console.error(e));\n  }\n\n  refreshData() {\n    this.onRegistrationClick();\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n  convertFromBaseToBase(str, fromBase, toBase) {\n    const num = parseInt(str, fromBase); // convert from one base to another\n    return num.toString(toBase);\n  }\n}\n","module.exports = \".mat-dialog-actions {\\n    float:right;\\n}\\n\\n.mat-form-field {\\n    width: 100%;\\n}\"","module.exports = \"<h1 mat-dialog-title>Add Recipient</h1>\\n<div mat-dialog-content>\\n    <p>Add new recipient</p>\\n    <mat-form-field *ngFor=\\\"let input of data\\\">\\n        <input matInput [(ngModel)]=\\\"outData[input]\\\" placeholder=\\\"{{input}}\\\">\\n    </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-button mat-dialog-close>No Thanks</button>\\n    <button mat-button [mat-dialog-close]=\\\"outData\\\" cdkFocusInitial>Ok</button>\\n</div>\"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-add-email-dialog',\n  templateUrl: './add-email-dialog.html',\n  styleUrls: ['./add-email-dialog.css'],\n})\nexport class AddEmailDialogComponent {\n\n  public outData: any;\n\n  constructor(public dialogRef: MatDialogRef<AddEmailDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.outData = {};\n    data.forEach(d => this.outData[d] = '');\n  }\n}\n","module.exports = \".mat-card-content {\\n    display: flex;\\n    flex-direction: row;\\n    font-family: 'Lato', sans-serif;\\n}\\n\\n.mat-card-content .mat-form-field {\\n    width: 100%;\\n}\\n\\n.mat-horizontal-stepper-content {\\n    text-align: center;\\n}\\n\\n.mat-card-header {\\n    margin-bottom: 15px;\\n}\\n\\n.mat-selection-list {\\n    max-height: 250px;\\n    overflow-y: scroll;\\n}\\n\\n@media screen and (max-width: 600px) {\\n    .mat-horizontal-stepper-header-container {\\n        display: block;\\n    }\\n}\\n\\n.email-list {\\n    flex: 2;\\n    margin: 15px;\\n}\\n\\n.mat-card-actions {\\n    float: right;\\n}\\n\\n.placeholder-button {\\n    margin: 5px;\\n}\\n\\n.email-preview-container {\\n    display: flex;\\n}\\n\\n.email-preview {\\n    flex: 5;\\n}\\n\\n.email-preview-list {\\n    flex: 2;\\n    margin: 15px;\\n    max-height: 500px;\\n    overflow-y: scroll;\\n}\\n\\n.email-preview iframe {\\n    width: 100%;\\n    height: 500px;\\n}\"","module.exports = \"<mat-card>\\n    <mat-card-title>\\n        Send email\\n    </mat-card-title>\\n    <mat-card-content>\\n        <mat-horizontal-stepper class=\\\"email-list\\\" [linear]=\\\"true\\\" #stepper=\\\"matHorizontalStepper\\\">\\n            <mat-step>\\n                <ng-template matStepLabel>Select recipients</ng-template>\\n                <div class=\\\"email-list row\\\">\\n                    <mat-selection-list dense #emails>\\n                        <mat-list-option *ngFor=\\\"let user of emailListService.emailList\\\">\\n                            <div style=\\\"display: inherit;\\\">\\n                                <mat-icon matListIcon>person</mat-icon>\\n                                <p>{{user.email}}</p>\\n                            </div>\\n                        </mat-list-option>\\n                    </mat-selection-list>\\n                    <mat-card-actions>\\n                        <button (click)=\\\"deleteSelected(emails)\\\" mat-button\\n                                color=\\\"secondary\\\" [disabled]=\\\"emails.selectedOptions.selected.length === 0\\\">\\n                            <mat-icon>delete</mat-icon>\\n                        </button>\\n                        <button (click)=\\\"addNew()\\\" mat-button color=\\\"secondary\\\">\\n                            <mat-icon>add</mat-icon>\\n                        </button>\\n                    </mat-card-actions>\\n                </div>\\n                <div>\\n                    <mat-card-actions>\\n                        <button mat-button matStepperNext color=\\\"primary\\\"\\n                                [disabled]=\\\"emailListService.emailList.length === 0\\\">Next\\n                        </button>\\n                    </mat-card-actions>\\n                </div>\\n            </mat-step>\\n            <mat-step>\\n                <ng-template matStepLabel>Select template</ng-template>\\n                <mat-slide-toggle [(ngModel)]=\\\"customHTML\\\" style=\\\"margin: 0 auto;\\\">Custom HTML template?</mat-slide-toggle>\\n                <form *ngIf=\\\"customHTML\\\" class=\\\"example-full-width\\\">\\n                    <label for=\\\"file-input\\\" class=\\\"alert\\\">Your HTML must have the appropriate substitutions already formatted</label>\\n                    <input id=\\\"file-input\\\" type=\\\"file\\\" placeholder=\\\"Upload html template\\\" (change)=\\\"htmlFileAdded($event)\\\" accept=\\\"text/html\\\">\\n                    <mat-form-field>\\n                        <input matInput [(ngModel)]=\\\"emailSubject\\\" placeholder=\\\"Email subject\\\" required name=\\\"subject\\\">\\n                    </mat-form-field>\\n                </form>\\n                <div>\\n                    <mat-card-actions>\\n                        <button mat-button matStepperNext color=\\\"primary\\\"\\n                                (click)=\\\"customHTML ? loadPreview() : noop()\\\"\\n                                [disabled]=\\\"customHTML && mDisabled\\\">Next\\n                        </button>\\n                    </mat-card-actions>\\n                </div>\\n            </mat-step>\\n            <mat-step *ngIf=\\\"!customHTML\\\" [stepControl]=\\\"secondFormGroup\\\">\\n                <div style=\\\"margin: 10px;\\\">\\n                    <button mat-raised-button class=\\\"placeholder-button\\\" color=\\\"primary\\\" (click)=\\\"addPlaceholder(key)\\\"\\n                            *ngFor=\\\"let key of keys\\\">\\n                        {{key}}\\n                    </button>\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addPlaceholder('forgot_url')\\\">\\n                        Password Reset URL\\n                    </button>\\n                </div>\\n                <form [formGroup]=\\\"secondFormGroup\\\">\\n                    <ng-template matStepLabel>Email body</ng-template>\\n                    <mat-form-field>\\n                        <input matInput [(ngModel)]=\\\"emailSubject\\\" placeholder=\\\"Email subject\\\" required formControlName=\\\"subjectCtrl\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <textarea matTextareaAutosize matAutosizeMinRows=\\\"2\\\"\\n                                  [(ngModel)]=\\\"emailBody\\\" matInput placeholder=\\\"Email body\\\" formControlName=\\\"secondCtrl\\\"\\n                                  required>\\n                        </textarea>\\n                    </mat-form-field>\\n                    <div>\\n                        <button mat-button matStepperPrevious>Back</button>\\n                        <button mat-button matStepperNext (click)=\\\"loadPreview()\\\">Next</button>\\n                    </div>\\n                </form>\\n            </mat-step>\\n            <mat-step>\\n                <ng-template matStepLabel>Confirm</ng-template>\\n                <div class=\\\"email-preview-container\\\">\\n                    <div class=\\\"email-preview-list row\\\">\\n                        <mat-list dense>\\n                            <mat-list-item *ngFor=\\\"let user of emailListService.emailList\\\">\\n                                <div style=\\\"display: inherit;\\\">\\n                                    <mat-icon matListIcon>person</mat-icon>\\n                                    <p>{{user.email}}</p>\\n                                </div>\\n                            </mat-list-item>\\n                        </mat-list>\\n                    </div>\\n                    <div class=\\\"email-preview\\\">\\n                        <iframe id=\\\"email-preview\\\" #iframe></iframe>\\n                    </div>\\n                </div>\\n                <div>\\n                    <mat-card-actions>\\n                        <button mat-button matStepperPrevious>Back</button>\\n                        <button mat-button (click)=\\\"emailConfirmClicked()\\\">Confirm</button>\\n                    </mat-card-actions>\\n                </div>\\n            </mat-step>\\n        </mat-horizontal-stepper>\\n\\n        <!--<div class=\\\"email-body-input\\\">-->\\n        <!--<mat-form-field color=\\\"primary\\\" floatLabel='Email body'>-->\\n        <!--<textarea matInput placeHolder=\\\"Email body...\\\"></textarea>-->\\n        <!--</mat-form-field>-->\\n        <!--</div>-->\\n    </mat-card-content>\\n    <!--<mat-card-actions>-->\\n    <!--<button mat-button color=\\\"primary\\\">-->\\n    <!--Cancel-->\\n    <!--</button>-->\\n    <!--<button mat-button color=\\\"primary\\\">-->\\n    <!--Send-->\\n    <!--</button>-->\\n    <!--</mat-card-actions>-->\\n</mat-card>\"","/**\n * TODO: Add docstring explaining component\n */\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n\nimport { EmailListService } from '../../services/email-list/email-list.service';\nimport { htmlTemplate } from '../../../assets/email_template';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AddEmailDialogComponent } from './add-email-dialog';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-send-email',\n  templateUrl: './send-email.component.html',\n  providers: [],\n  styleUrls: ['./send-email.component.css'],\n})\nexport class SendEmailComponent implements OnInit {\n\n  @ViewChild('iframe') iframe: ElementRef;\n\n  secondFormGroup: FormGroup;\n  keys = [];\n  emailBody = '';\n  emailSubject = '';\n  customHTML = false;\n  uploadedHTML = '';\n  mDisabled = true;\n\n  constructor(public emailListService: EmailListService, public dialog: MatDialog,\n              public adminService: HttpAdminService, public activatedRoute: ActivatedRoute,\n              private _formBuilder: FormBuilder,\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.keys = Object.keys(this.emailListService.emailList[0] ?\n                            this.emailListService.emailList[0] : { email: '' });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required],\n      subjectCtrl: ['', Validators.required],\n    });\n  }\n\n  deleteSelected(emailsDOMRef: any) {\n    console.log(emailsDOMRef);\n    const removalIndices = emailsDOMRef.selectedOptions.selected.map((location) => {\n      return emailsDOMRef.options._results.findIndex(index => index === location);\n    });\n    this.emailListService.emailList = this.emailListService.emailList.filter((\n      v,\n      i,\n    ) => removalIndices.indexOf(i) === -1);\n  }\n\n  addNew() {\n    const dialogRef = this.dialog.open(AddEmailDialogComponent, {\n      width: '300px',\n      data: this.keys,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.emailListService.emailList.push(result);\n      }\n    });\n  }\n\n  addPlaceholder(id: any) {\n    this.emailBody = this.emailBody.concat('$').concat(id).concat('$ ');\n    if (id === 'forgot_url') {\n      this.emailListService.emailList.forEach((object) => {\n        object.forgot_url = 'https://app.hackpsu.org/forgot/?email='.concat(object.email);\n      });\n    }\n  }\n\n  emailConfirmClicked() {\n    // Generate email sending request\n    const generatedBody = this.generateEmailFromTemplate();\n    this.adminService.sendEmail(\n      generatedBody,\n      this.emailSubject,\n      this.emailListService.emailList.map((value) => {\n        return {\n          email: value.email,\n          name: value.firstname ? value.firstname : '',\n          substitutions: generatedBody.match(/\\$\\w+\\$/g).reduce((substitution, arrValue) => {\n            const key = arrValue.replace(/\\$/g, '');\n            substitution[key] = value[key].toString();\n            return substitution;\n          },                                                    {}),\n        };\n      }),\n    ).subscribe((value) => {\n      console.log(value);\n    },          err => console.error(err));\n  }\n\n  generateEmailFromTemplate() {\n    return this.customHTML ? this.uploadedHTML :\n           htmlTemplate.replace(/\\$\\$BODY\\$\\$/g, this.emailBody.replace(/\\n/g, '<br>'));\n  }\n\n  loadPreview() {\n    const subHtml = this.generateEmailFromTemplate();\n    if (document.getElementById('email-preview')) {\n      const doc = this.iframe.nativeElement.contentDocument ||\n                  this.iframe.nativeElement.contentWindow;\n      doc.open();\n      doc.write(subHtml);\n      doc.close();\n    }\n  }\n\n  htmlFileAdded($event) {\n    console.log($event);\n    const fileToLoad = $event.target.files[0];\n    const fileReader = new FileReader();\n    fileReader.onload = (fileLoadedEvent: any) => {\n      this.uploadedHTML = fileLoadedEvent.target.result;\n      this.mDisabled = false;\n    };\n    fileReader.readAsText(fileToLoad, 'UTF-8');\n  }\n\n  noop() {\n    return;\n  }\n}\n\n","module.exports = \"/*********************** SIDE NAVBAR *********************************/\\n.example-container {\\n    display: flex;\\n    flex-direction: column;\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n}\\n.example-is-mobile .example-toolbar {\\n    position: fixed;\\n    /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\n    z-index: 2;\\n}\\n.example-sidenav-container {\\n    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\n       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\n    flex: 1;\\n}\\n.example-is-mobile .example-sidenav-container {\\n    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\n       `<body>` to be our scrolling element for mobile layouts. */\\n    flex: 1 0 auto;\\n}\"","module.exports = \"<mat-nav-list>\\n    <mat-accordion *ngIf=\\\"afAuth.authState | async as user; else home\\\">\\n        <a mat-list-item routerLink=\\\"/dashboard\\\">Dashboard</a>\\n        <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                    Users\\n                </mat-panel-title>\\n            </mat-expansion-panel-header>\\n            <a mat-list-item routerLink=\\\"/hackerdata\\\">Hacker Data</a>\\n            <a mat-list-item routerLink=\\\"/classes\\\"> Extra Credit Classes</a>\\n            <a mat-list-item routerLink=\\\"/users\\\"> Upgrade User</a>\\n        </mat-expansion-panel>\\n        <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                    Admin\\n                </mat-panel-title>\\n            </mat-expansion-panel-header>\\n            <a mat-list-item routerLink=\\\"/events\\\">Events</a>\\n            <a mat-list-item routerLink=\\\"/locations\\\">Locations</a>\\n            <a mat-list-item routerLink=\\\"/live\\\">Live Updates</a>\\n            <a mat-list-item routerLink=\\\"/checkout\\\">Item Checkout</a>\\n        </mat-expansion-panel>\\n        <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                    Analytics\\n                </mat-panel-title>\\n            </mat-expansion-panel-header>\\n            <a mat-list-item routerLink=\\\"/stats\\\">Statistics</a>\\n            <a mat-list-item routerLink=\\\"/vis\\\">Visualization</a>\\n        </mat-expansion-panel>\\n    </mat-accordion>\\n</mat-nav-list>\\n<ng-template #home>\\n    <a mat-list-item routerLink=\\\"\\\">Home</a>\\n</ng-template>\\n\\n\"","/**\n * TODO: Add docstring explaining component\n */\nimport { Component } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css'],\n})\nexport class SidebarComponent {\n\n  constructor(public afAuth: AngularFireAuth) {}\n\n}\n","module.exports = \".title-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  margin: 20px;\\n}\\n\\n.section-title-letter {\\n  display: inline-block;\\n  font-size: 2.5em;\\n}\\n\\n.section-title-word {\\n  display: inline-block;\\n  white-space: nowrap;\\n  padding-right: 1.5%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"title-container\\\">\\n        <div class=\\\"section-title-word\\\">\\n            <div class=\\\"section-title-letter white-text\\\">S</div>\\n            <div class=\\\"section-title-letter white-text\\\">T</div>\\n            <div class=\\\"section-title-letter white-text\\\">A</div>\\n            <div class=\\\"section-title-letter white-text\\\">T</div>\\n            <div class=\\\"section-title-letter white-text\\\">S</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"container\\\">\\n        <div class=\\\"section-title-letter white-text\\\">Shirt Size Count</div>\\n        <mat-table [dataSource]=\\\"tshirt_size\\\">\\n\\n            <ng-container matColumnDef=\\\"option\\\">\\n                <mat-header-cell *matHeaderCellDef> Shirt Size</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let option\\\"> {{option.OPTION}}</mat-cell>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"count\\\">\\n                <mat-header-cell *matHeaderCellDef> Count</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let count\\\"> {{count.COUNT}}</mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n        </mat-table>\\n\\n\\n    </div>\\n    <div class=\\\"section-title-letter white-text\\\">Dietary Restriction distribution</div>\\n    <ngx-charts-pie-chart\\n            [view]=\\\"pieDim\\\"\\n            [scheme]=\\\"piecolor\\\"\\n            [results]=\\\"dietarydata\\\"\\n            [legend]=\\\"true\\\"\\n            [explodeSlices]=\\\"false\\\"\\n            [labels]=\\\"true\\\"\\n            [doughnut]=\\\"true\\\">\\n    </ngx-charts-pie-chart>\\n\\n\\n</div>\\n\\n\"","import { MatDialog, MatSnackBar, MatTableDataSource } from '@angular/material';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\nimport { IStatisticsModel } from '../../models/statistics-model';\nimport * as firebase from 'firebase';\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-statistics',\n  providers: [\n    HttpAdminService,\n  ],\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css'],\n})\nexport class StatisticsComponent implements OnInit {\n\n  pieDim: any[] = [700, 500];\n  piecolor = {\n    domain: ['#007486', '#00743C', '#00AEBF', '#333333', '#004A68', '#EBF5FB'],\n  };\n  //legend = true;\n  labels = true;\n  dietarydata: { value: Number, name: string }[] = [];\n\n  // construct a static table with two columns with heads option and count\n  private static tableCols = ['option', 'count'];\n  public displayedColumns: string[];\n\n  get user(): firebase.User {\n    return this._user;\n  }\n\n  set user(value: firebase.User) {\n    this._user = value;\n  }\n\n  public StatData = new MatTableDataSource<IStatisticsModel>([]); // [] = array\n\n  private _user: firebase.User;\n    /*\n     * Error array used to display error messages\n     */\n  public errors: Error = null;\n\n    /*\n     *  Index of array represents the Academic Year\n     *  0: Freshmen\n     *  1: Sophomore\n     *  2: Junior\n     *  3: Senior\n     *  4: Graduate\n     */\n  private academic_year = [];\n\n  private loadpiechart = [];\n\n    /*\n     * Index of array represents the Coding Experience\n     * 0: None\n     * 1: Beginner\n     * 2: Intermediate\n     * 3: Advanced\n     */\n  private coding_experience = [];\n\n    /*\n     * Index of array represents the Dietary Restrictions\n     * 0: Vegetarian\n     * 1: Vegan\n     * 2: Kosher\n     * 3: Halal\n     * 4: Gluten Free\n     * 5: Other\n     */\n  private dietary_restriction = [];\n\n  private travel_reimbursement = -1;\n\n    /*\n     * Index of array represents the Race\n     * 0: Native American or Alaska Native\n     * 1: Asian\n     * 2: Black or African American\n     * 3: Hispanic or Latinx\n     * 4: Native Hawaiian or Other Pacific Islander\n     * 5: Caucasian\n     * 6: Prefer not to disclose\n     */\n  private race = []\n\n    /*\n     * Index of the array represents the shirt size\n     * 0: X-Small\n     * 1: Small\n     * 2: Medium\n     * 3: Large\n     * 4: X-Large\n     * 5: XX-Large\n     */\n  public tshirt_size = [];\n\n    /*\n     * Index of the array represents the gender they identify with\n     * 0: Male\n     * 1: Female\n     * 2: Non-Binary\n     * 3: Prefer not to disclose\n     */\n  private gender = [];\n\n    /*\n     * Index of the array represents the first hackathon option\n     * 0: No, not their first hackathon\n     * 1: Yes, it is their first hackathon\n     */\n  private first_hackathon = [];\n\n    /*\n     * Index of the array represents the veteran option\n     * 0: No, I am not a veteran\n     * 1: Yes, I am a veteran\n     */\n  private veteran = [];\n  constructor(\n    public adminService: HttpAdminService,\n    public activatedRoute: ActivatedRoute,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    public dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data\n        .subscribe((user) => {\n          if (user) {\n            this.getStatData();\n          } else {\n            this.errors = new Error('Error: No user');\n            console.error('No User');\n          }\n        },         (error) => {\n          this.errors = new Error('Error: Issue with authentication of user');\n          console.error(error);\n        });\n  }\n\n  //calls the https://staging-dot-hackpsu18.appspot.com/v1/admin/statistics\n  getStatData() {\n    this.adminService.getStatistics()\n            .subscribe((data) => {\n              this.displayedColumns = StatisticsComponent.tableCols;\n              data.map((value) => {\n                switch (value.CATEGORY) {\n                  case 'shirt_size': {\n                    this.tshirt_size.push(value);\n                    break;\n                  }\n                  case 'dietary_restriction': {\n                    this.dietary_restriction.push(value);\n                    break;\n                  }\n                  default: {\n                    break;\n                  }\n                }\n                this.dietarydata = this.dietary_restriction\n                    .filter(element => element.OPTION !== '' && element.OPTION !== null)\n                    .map(element => ({ value: element.COUNT, name: element.OPTION }));\n              });\n            },         (error) => {\n              this.errors = new Error('Error: Issue with getting the number of users');\n              console.error(error);\n            });\n  }\n    //filter only for shirt sizes, it specifies the category, technically it doesn't need it because of the filter in get data\n  shirtsizefilter() {\n    return this.StatData.data.filter((data) => data.CATEGORY === 'academic_year');\n  }\n}","module.exports = \".profile-image-holder {\\n    display: inline-block;\\n    position: relative;\\n    width: 50px;\\n    height: 50px;\\n    overflow: hidden;\\n    border-radius: 50%;\\n}\\n\\n@media screen and (max-width: 768px){\\n    .profile-image-holder {\\n        display: none;\\n    }\\n}\\n\\n.profile-image-holder img {\\n    height: 100%;\\n    width: 100%;\\n}\\n\\n.btn {\\n    background-color: #fff;\\n    box-shadow: none;\\n    float: right;\\n    color: #333333;\\n}\\n\\n.btn:hover {\\n    background-color: #fcfcfc;\\n}\"","module.exports = \"<div *ngIf=\\\"afAuth.authState | async as user; else showLogin\\\">\\n    <div class=\\\"profile-view valign-wrapper\\\">\\n        <div class=\\\"profile-image-holder\\\">\\n            <img class=\\\"profile-image\\\" src={{user.photoURL}} matTooltip=\\\"{{user.displayName}}\\\"/>\\n        </div>\\n        <button class=\\\"btn\\\" (click)=\\\"logout()\\\">Logout</button>\\n    </div>\\n</div>\\n<ng-template #showLogin>\\n    <button class=\\\"btn\\\"><a routerLink=\\\"login\\\">Login</a></button>\\n</ng-template>\"","/**\n * TODO: Add docstring explaining component\n */\nimport { Component } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Router } from '@angular/router';\nimport { AppConstants } from '../../helpers/AppConstants';\n\n@Component({\n  selector: 'app-user-view',\n  templateUrl: './user-view.component.html',\n  styleUrls: ['./user-view.component.css'],\n})\nexport class UserViewComponent {\n\n  constructor(public afAuth: AngularFireAuth, private router: Router) {\n  }\n\n\n  logout() {\n    this.afAuth.auth.signOut();\n    this.router.navigate([AppConstants.LOGIN_ENDPOINT]);\n  }\n\n}\n\n","module.exports = \"h1 {\\n    color: #369;\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-size: 250%;\\n}\"","module.exports = \"<div style=\\\"position: absolute; top: 20px; left: 50px; right: 0px; bottom: 50px;\\\">\\n    <mat-form-field>\\n        <mat-select [(value)]=\\\"selected\\\" placeholder=\\\"What do you want to see\\\" (change)=\\\"onOptionChange($event)\\\">\\n            <mat-option value=\\\"referral\\\"> Referral Source</mat-option>\\n            <mat-option value=\\\"gender\\\"> Gender</mat-option>\\n            <mat-option value=\\\"experience\\\"> Coding Experience</mat-option>\\n            <mat-option value=\\\"academic_year\\\">Academic Year</mat-option>\\n        </mat-select>\\n    </mat-form-field>\\n    <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"200px\\\" columnHeight=\\\"400px\\\">\\n        <mat-grid-tile\\n                *ngFor=\\\"let tile of tiles\\\"\\n                [colspan]=\\\"tile.cols\\\"\\n                [rowspan]=\\\"tile.rows\\\"\\n                [style.background]=\\\"tile.color\\\">\\n            <ngx-charts-pie-chart\\n                    *ngIf=\\\"this.multi.length >0\\\"\\n                    [view]=\\\"[400, 200]\\\"\\n                    [scheme]=\\\"colorScheme\\\"\\n                    [results]=\\\"single\\\"\\n                    [legend]=\\\"option\\\"\\n                    [explodeSlices]=\\\"false\\\"\\n                    [labels]=\\\"showLabels\\\"\\n                    [doughnut]=\\\"false\\\"\\n                    [gradient]=\\\"false\\\">\\n            </ngx-charts-pie-chart>\\n            {{tile.text}}\\n        </mat-grid-tile>\\n    </mat-grid-list>\\n    <ngx-charts-line-chart\\n            *ngIf=\\\"multi.length> 0\\\"\\n            [view]=\\\"[700, 400]\\\"\\n            [scheme]=\\\"colorScheme\\\"\\n            [results]=\\\"multi\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [xAxis]=\\\"showXAxis\\\"\\n            [yAxis]=\\\"showYAxis\\\"\\n            [legend]=\\\"showLegend\\\"\\n            [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n            [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n            [xAxisLabel]=\\\"xAxisLabel\\\"\\n            [yAxisLabel]=\\\"yAxisLabel\\\"\\n            [autoScale]=\\\"autoScale\\\"\\n            [timeline]=\\\"timeline\\\">\\n    </ngx-charts-line-chart>\\n</div>\\n\"","/**\n * TODO: Add docstring explaining component\n */\nimport { Component, OnInit } from '@angular/core';\nimport { HttpAdminService } from '../../services/http-admin/http-admin.service';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { MatSelectChange, MatGridListModule } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-vis',\n  templateUrl: './vis.component.html',\n  styleUrls: ['./vis.component.css'],\n})\n// TODO: Add public/private labels for all properties\nexport class VisComponent implements OnInit {\n  multi = [];\n    // options\n  showXAxis = true;\n  timeline = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Time';\n  showYAxisLabel = true;\n  yAxisLabel = 'Registrations';\n  single = [];\n\n  tiles = [\n        { case: 'ngx-charts-pie-chart', cols: 2, rows: 1, color: '#ffffff00' },\n  ];\n\n\n  colorScheme = {\n    domain: ['#E5704C', '#6C88B7', '#133753', '#24577C', '#D0EAF1', '#C94331', '#AACACC', '#AACACC'],\n  };\n  autoScale = true;\n  selected = 'referral';\n  private user: firebase.User;\n\n  private data: any[];\n\n    /**\n     *\n     * @param data\n     * @param key\n     */\n  static reduceParent(data, key: string) {\n      /**\n       * Reduction function for incoming data\n       * @param accumulator\n       * @param currentValue\n       * @returns {any}\n       */\n    function reduceDataG(accumulator, currentValue) {\n      const k = currentValue[key];\n      if (k) {\n        if (accumulator[k]) {\n          accumulator[k].value += 1\n        } else {\n          accumulator[k] = {};\n          accumulator[k].value = 1;\n          accumulator[k].name = currentValue[key];\n        }\n      }\n      return accumulator;\n    }\n    return data.reduce(reduceDataG, {});\n  }\n\n  static reduceData(accumulator, currentValue) {\n    const date = new Date(currentValue.sign_up_time);\n    const key = date.getDay().toString() + date.getMonth().toString() + date.getFullYear().toString();\n    if (accumulator[key]) {\n      accumulator[key].value += 1\n    } else {\n      accumulator[key] = {};\n      accumulator[key].value = 1;\n      accumulator[key].name = date;\n    }\n    return accumulator;\n  }\n\n  constructor(public adminService: HttpAdminService, public activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((user) => {\n      if (user) {\n        this.adminService.getRegistrations()\n                    .subscribe((data: any[]) => {\n                      this.data = data;\n                      this.onOptionChange(null);\n                    });\n      }\n    })\n  }\n\n  onOptionChange($event: MatSelectChange) {\n    // TODO: Possbily migrate this giant chunk of code to a service\n    switch (this.selected) {\n      case 'referral':\n        const mlh = this.data.filter(value => value.referral && value.referral.match(/mlh|major\\sleague/i));\n\n        const mlhObj = mlh.reduce(VisComponent.reduceData, {});\n\n\n                // Facebook\n        const fb = this.data.filter(value => value.referral && value.referral.match(/twitter|facebook|fb/i));\n        const fbObj = fb.reduce(VisComponent.reduceData, {});\n\n                // Friends\n        const friend = this.data.filter(value => value.referral && value.referral.match(/friend/i));\n        const friendObj = friend.reduce(VisComponent.reduceData, {});\n                // school|professor|teacher|class|course|department|PSU|major\n        const school = this.data.filter(value => value.referral && value.referral.match(/school|professor|advisor|teacher|class|course|department|PSU|major/i));\n        const schoolObj = school.reduce(VisComponent.reduceData, {});\n                // email\n        const email = this.data.filter(value => value.referral && value.referral.match(/email/i));\n        const emailObj = email.reduce(VisComponent.reduceData, {});\n                // flyer|banner|poster\n        const ads = this.data.filter(value => value.referral && value.referral.match(/flyer|banner|poster/i));\n        const adsObj = ads.reduce(VisComponent.reduceData, {});\n                // extra credit\n        const excre = this.data.filter(value => value.referral && value.referral.match(/extra|cmpsc|compsc/i));\n        const excreObj = excre.reduce(VisComponent.reduceData, {});\n\n        this.multi = [\n          {\n            name: 'MLH',\n            series: Object.keys(mlhObj).map(key => mlhObj[key]),\n          },\n          {\n            name: 'FB',\n            series: Object.keys(fbObj).map(key => fbObj[key]),\n          },\n          {\n            name: 'FRIEND',\n            series: Object.keys(friendObj).map(key => friendObj[key]),\n          },\n          {\n            name: 'SCHOOL',\n            series: Object.keys(schoolObj).map(key => schoolObj[key]),\n          },\n          {\n            name: 'EMAIL',\n            series: Object.keys(emailObj).map(key => emailObj[key]),\n          },\n          {\n            name: 'ADVERTISE',\n            series: Object.keys(adsObj).map(key => adsObj[key]),\n          },\n          {\n            name: 'EXTRA CRE',\n            series: Object.keys(excreObj).map(key => excreObj[key]),\n          },\n        ];\n\n        const rData = VisComponent.reduceParent(this.data, 'referral');\n        this.single = Object.keys(rData).map(key => rData[key]);\n        break;\n\n      case 'gender':\n        // female\n        const female = this.data.filter(value => value.gender && value.gender.match(/female/i));\n\n        const femaleObj = female.reduce(VisComponent.reduceData, {});\n\n        // male\n        const male = this.data.filter(value => value.gender && value.gender.match(/male/i));\n        const maleObj = male.reduce(VisComponent.reduceData, {});\n        this.multi = [\n          {\n            name: 'FEMALE',\n            series: Object.keys(femaleObj).map(key => femaleObj[key]),\n          },\n          {\n            name: 'MALE',\n            series: Object.keys(maleObj).map(key => maleObj[key]),\n          },\n        ];\n        const gData = VisComponent.reduceParent(this.data, 'gender');\n        this.single = Object.keys(gData).map(key => gData[key]);\n        break;\n\n      case 'experience':\n        const beginner = this.data.filter(value => value.coding_experience && value.coding_experience.match(/beginner/i));\n        const beginnerObj = beginner.reduce(VisComponent.reduceData, {});\n\n        const intermediate = this.data.filter(value => value.coding_experience && value.coding_experience.match(/intermediate/i));\n        const intermediateObj = intermediate.reduce(VisComponent.reduceData, {});\n\n        const advanced = this.data.filter(value => value.coding_experience && value.coding_experience.match(/advanced/i));\n        const advancedObj = advanced.reduce(VisComponent.reduceData, {});\n\n        const none = this.data.filter(value => value.coding_experience && value.coding_experience.match(/none/i));\n        const noneObj = none.reduce(VisComponent.reduceData, {});\n\n        this.multi = [\n          {\n            name: 'BEGINNER',\n            series: Object.keys(beginnerObj).map(key => beginnerObj[key]),\n          },\n          {\n            name: 'INTERMED',\n            series: Object.keys(intermediateObj).map(key => intermediateObj[key]),\n          },\n          {\n            name: 'ADVANCED',\n            series: Object.keys(advancedObj).map(key => advancedObj[key]),\n          },\n          {\n            name: 'NONE',\n            series: Object.keys(noneObj).map(key => noneObj[key]),\n          },\n        ];\n        const cData = VisComponent.reduceParent(this.data, 'coding_experience');\n\n        this.single = Object.keys(cData).map(key => cData[key]);\n        break;\n\n      case 'academic_year':\n        const freshman = this.data.filter(value => value.academic_year && value.academic_year.match(/freshman/i));\n        const freshmanObj = freshman.reduce(VisComponent.reduceData, {});\n\n        const sophmore = this.data.filter(value => value.academic_year && value.academic_year.match(/sophmore/i));\n        const sophmoreObj = sophmore.reduce(VisComponent.reduceData, {});\n\n        const junior = this.data.filter(value => value.academic_year && value.academic_year.match(/junior/i));\n        const juniorObj = junior.reduce(VisComponent.reduceData, {});\n\n        const senior = this.data.filter(value => value.academic_year && value.academic_year.match(/senior/i));\n        const seniorObj = senior.reduce(VisComponent.reduceData, {});\n\n        const graduate = this.data.filter(value => value.academic_year && value.academic_year.match(/graduate/i));\n        const graduateObj = graduate.reduce(VisComponent.reduceData, {});\n\n        this.multi = [\n          {\n            name: 'FRESHMAN',\n            series: Object.keys(freshmanObj).map(key => freshmanObj[key]),\n          },\n          {\n            name: 'SOPHOMORE',\n            series: Object.keys(sophmoreObj).map(key => sophmoreObj[key]),\n          },\n          {\n            name: 'JUNIOR',\n            series: Object.keys(juniorObj).map(key => juniorObj[key]),\n          },\n          {\n            name: 'SENIOR',\n            series: Object.keys(seniorObj).map(key => seniorObj[key]),\n          },\n          {\n            name: 'GRADUATE',\n            series: Object.keys(graduateObj).map(key => graduateObj[key]),\n          },\n        ];\n        const aData = VisComponent.reduceParent(this.data, 'academic_year');\n\n        this.single = Object.keys(aData).map(key => aData[key]);\n        break;\n    }\n  }\n}\n\n\n","import { environment } from '../../environments/environment';\n\nexport class AppConstants {\n\n  // public static API_BASE_URL: String = 'https://api.hackpsu.org/v1/';\n  public static API_BASE_URL: String = environment.apiUrl;\n  // public static SOCKET_BASE_URL: String = 'https://api.hackpsu.org';\n  public static SOCKET_BASE_URL: String = 'http://localhost:5000/';\n  public static LOGIN_ENDPOINT = '/login';\n  public static REGISTRATION_ENDPOINT = '/registrations';\n  public static PRE_REGISTRATION_ENDPOINT = '/preregistrations';\n  public static EMAIL_ENDPOINT =  '/email';\n  public static HTML_TEMPLATE = '../../assets/email_template.ts';\n  public static DASHBOARD_ENDPOINT =  '/dashboard';\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AppConstants } from './AppConstants';\nimport { HttpAdminService } from '../services/http-admin/http-admin.service';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { AuthService } from '../services/AuthService/auth.service';\nimport { NgProgress } from '@ngx-progressbar/core';\nimport { CustomErrorHandlerService } from '../services/services';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private httpService: HttpAdminService,\n    private progress: NgProgress,\n    private errorHandler: CustomErrorHandlerService,\n  ) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.checkLogin(route.data.privilegeLevel, state.url);\n  }\n\n  checkLogin(privilegeLevel: Number = 0, url: string): Observable<boolean> {\n    this.progress.start();\n    const navExtras = {\n      queryParams: {\n        redirectUrl: url,\n      },\n    };\n    return this.httpService.getAdminStatus()\n      .pipe(\n          map((adminData: {admin: boolean, privilege: number} ) => {\n            if (!adminData || !adminData.admin) {\n              this.authService.signOut()\n              .then(() => {\n                this.progress.complete();\n                this.router.navigate([AppConstants.LOGIN_ENDPOINT]);\n              });\n              return false;\n            }\n            this.progress.complete();\n            return adminData.privilege >= privilegeLevel;\n          }),\n          catchError((error) => {\n            console.log(error);\n            this.errorHandler.handleHttpError(error);\n            this.authService.signOut();\n            this.router.navigate([AppConstants.LOGIN_ENDPOINT], navExtras);\n            this.progress.complete();\n            return Observable.of(false);\n          }),\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ItemCheckoutComponent } from '../components/item-checkout/item-checkout.component';\nimport { LoginComponent } from '../components/login/login.component';\nimport { RegistrationTableComponent } from '../components/registration-table/registration-table.component';\nimport { ManageUsersComponent } from '../components/manage-users/manage-users.component';\nimport { AuthGuard } from './AuthGuard';\nimport { PreRegistrationTableComponent } from '../components/pre-registration-table/pre-registration-table.component';\nimport { HttpAdminService } from '../services/http-admin/http-admin.service';\nimport { LiveUpdateComponent } from '../components/live-update/live-update.component';\nimport { SendEmailComponent } from '../components/send-email/send-email.component';\nimport { ManageRsvpComponent } from '../components/manage-rsvp/manage-rsvp.component';\nimport { ManageLocationsComponent } from '../components/manage-locations/manage-locations.component';\nimport { ExtraCreditClassesComponent } from '../components/extra-credit-classes/extra-credit-classes.component';\nimport { ManageEventsComponent } from '../components/manage-events/manage-events.component';\nimport { VisComponent } from '../components/vis/vis.component';\nimport { HackerDataComponent } from '../components/hacker-data/hacker-data.component';\nimport { DashboardComponent } from '../components/dashboard/dashboard.component';\nimport { ManageAdminComponent } from '../components/manage-admin/manage-admin.component';\nimport { StatisticsComponent } from '../components/statistics/statistics.component';\nimport { UserResolver } from './resolvers/UserResolver/user.resolver';\nimport { EventStatsComponent } from '../components/event-stats/event-stats.component';\nimport { PRIVILEGE_LEVEL } from '../models/privilege-model';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.VOLUNTEER },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'hackerdata',\n    component: HackerDataComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.TEAM_MEMBER },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'admin',\n    component: ManageAdminComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.TECHNOLOGY_ADMIN },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'checkout',\n    component: ItemCheckoutComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.TEAM_MEMBER },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'stats',\n    component: StatisticsComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.VOLUNTEER },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'preregistrations',\n    component: PreRegistrationTableComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.VOLUNTEER },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'live',\n    component: LiveUpdateComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.VOLUNTEER },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'registrations',\n    component: RegistrationTableComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.TEAM_MEMBER },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'users',\n    component: ManageUsersComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.VOLUNTEER },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'email',\n    component: SendEmailComponent,\n    data: { privilegeLevel: PRIVILEGE_LEVEL.DIRECTOR },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'rsvp',\n    component: ManageRsvpComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.DIRECTOR },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'classes',\n    component: ExtraCreditClassesComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.TEAM_MEMBER },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'events',\n    component: ManageEventsComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.DIRECTOR },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'locations',\n    component: ManageLocationsComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.DIRECTOR },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'vis',\n    component: VisComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.DIRECTOR },\n    resolve: { UserResolver },\n  },\n  {\n    path: 'eventstats',\n    component: EventStatsComponent,\n    canActivate: [AuthGuard],\n    data: { privilegeLevel: PRIVILEGE_LEVEL.TEAM_MEMBER },\n    resolve: { UserResolver },\n  },\n  { path: '**', component: LoginComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), RouterModule],\n  exports: [RouterModule],\n  providers: [\n    AuthGuard,\n    HttpAdminService,\n  ],\n  declarations: [],\n})\n\nexport class AppRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSidenavModule,\n  MatTableModule,\n  MatTabsModule,\n  MatTooltipModule,\n  MatSelectModule,\n  MatIconModule,\n  MatSortModule,\n  MatCheckboxModule,\n  MatProgressBarModule,\n  MatCardModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatListModule,\n  MatMenuModule,\n  MatSlideToggleModule,\n  MatStepperModule,\n  MatToolbarModule,\n  MatGridListModule,\n  MatSnackBarModule, MatAutocompleteModule, MatBottomSheetModule,\n} from '@angular/material';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n@NgModule({\n  imports: [\n    MatToolbarModule, MatCardModule, MatDialogModule, MatStepperModule, MatListModule,\n    MatMenuModule, MatIconModule, MatSidenavModule,\n    MatProgressBarModule, MatTabsModule, MatTableModule, MatFormFieldModule,\n    MatButtonModule, MatInputModule, NoopAnimationsModule, MatPaginatorModule,\n    MatTooltipModule, MatSelectModule, MatSortModule, MatCheckboxModule,\n    MatExpansionModule, MatGridListModule, MatSlideToggleModule, MatSnackBarModule,\n    MatAutocompleteModule, MatBottomSheetModule,\n  ],\n  exports: [\n    MatToolbarModule, MatCardModule, MatDialogModule, MatStepperModule, MatListModule,\n    MatMenuModule, MatIconModule,\n    MatProgressBarModule, MatSidenavModule, MatTabsModule, MatTableModule,\n    MatFormFieldModule, MatButtonModule, MatInputModule, NoopAnimationsModule,\n    MatPaginatorModule, MatTooltipModule, MatSelectModule, MatSortModule,\n    MatCheckboxModule, MatExpansionModule, MatGridListModule, MatSlideToggleModule,\n    MatSnackBarModule, MatAutocompleteModule, MatBottomSheetModule,\n  ],\n})\nexport class CustomMaterialModule {\n}\n","import { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { map, take } from 'rxjs/operators';\nimport { AppConstants } from '../../AppConstants';\nimport { AuthService } from '../../../services/AuthService/auth.service';\nimport { NgProgress } from '@ngx-progressbar/core';\nimport 'rxjs-compat/add/observable/empty';\nimport 'rxjs-compat/add/observable/of';\nimport User = firebase.User;\n\n@Injectable()\nexport class UserResolver implements Resolve<User> {\n  constructor(private authService: AuthService,\n              private progress: NgProgress,\n              private router: Router) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<User> {\n    this.progress.start();\n    return this.authService.currentUser\n      .pipe(\n        map((user) => {\n          if (!user) {\n            this.router.navigate([AppConstants.LOGIN_ENDPOINT]);\n            return null;\n          }\n          return user;\n        }),\n        take(1),\n      );\n  }\n}\n","export class ApiRoute {\n  public URL: string;\n  public needsAuthentication: boolean;\n  public queryParams: Map<string, any> | null;\n\n  constructor(URL: string, needsAuthentication: boolean, queryParams?: Map<string, any>) {\n    this.URL = URL;\n    this.needsAuthentication = needsAuthentication;\n    this.queryParams = queryParams || null;\n  }\n}\n","import { ItemCheckoutModel } from './item-checkout-model';\nimport { RegistrationModel } from './registration-model';\n\nexport class CheckoutInstanceModel {\n  public uid: string;\n  public checkout_time: Date;\n  public return_time: Date;\n  public hackathon: string;\n  public checkoutItem: ItemCheckoutModel;\n  public user: RegistrationModel;\n\n  static parseFromJson(json: any) {\n    const parsed = new CheckoutInstanceModel();\n    parsed.uid = json.checkout_uid;\n    parsed.checkout_time = new Date(parseInt(json.checkout_time, 10));\n    parsed.return_time = json.return_time ? new Date(parseInt(json.return_time, 10)) : null;\n    parsed.hackathon = json.checkout_hackathon;\n    parsed.checkoutItem = ItemCheckoutModel.parseFromJson(json);\n    parsed.user = new RegistrationModel();\n    parsed.user.uid = json.user_uid;\n    parsed.user.name = `${json.user_firstname} ${json.user_lastname}`;\n    return parsed;\n  }\n}\n","import { Resteable } from './interfaces/resteable';\n\nexport class EventModel implements Resteable {\n\n  uid: string;\n  event_location: string;\n  event_start_time: number;\n  event_end_time: number;\n  event_title: string;\n  event_description: string;\n  event_type: string;\n  location_name: string;\n\n  static parseJSON(val: any): EventModel {\n    const e = new EventModel();\n    e.event_location = val.event_location || '';\n    e.event_title = val.event_title || '';\n    e.event_start_time = val.event_start_time || 0;\n    e.event_end_time = val.event_end_time || 0;\n    e.event_description = val.event_description || '';\n    e.event_type = val.event_type || '';\n    e.location_name = val.location_name || '';\n    e.uid = val.uid || '';\n    return e;\n  }\n  constructor() {\n    this.event_location = '';\n    this.event_start_time = 0;\n    this.event_end_time = 0;\n    this.event_title = '';\n    this.event_description = '';\n    this.event_type = '';\n    this.event_location = '';\n    this.uid = '';\n  }\n\n  fromData(event: EventModel) {\n    this.event_location = event.event_location;\n    this.event_start_time = event.event_start_time;\n    this.event_end_time = event.event_end_time;\n    this.event_title = event.event_title;\n    this.event_description = event.event_description;\n    this.event_type = event.event_type;\n    this.uid = event.uid;\n  }\n\n  restRepr() {\n    return {\n      eventLocation: this.event_location.toString(),\n      eventStartTime: new Date(this.event_start_time).getTime(),\n      eventEndTime: new Date(this.event_end_time).getTime(),\n      eventTitle: this.event_title,\n      eventDescription: this.event_description,\n      eventType: this.event_type,\n      uid: this.uid,\n    };\n  }\n\n  equals(e: EventModel) {\n    for (const i in e) {\n      if (e.hasOwnProperty(i)) {\n        if (e[i] !== this[i]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n}\n","import { Resteable } from './interfaces/resteable';\n\nexport class ItemCheckoutModel implements Resteable {\n  public availability: Number;\n  public uid: string;\n  public name: string;\n  public quantity: Number;\n\n  static parseFromJson(json: any) {\n    const parsed = new ItemCheckoutModel();\n    parsed.uid = json.uid;\n    parsed.name = json.name;\n    parsed.quantity = json.quantity;\n    parsed.availability = json.available;\n    return parsed;\n  }\n\n  restRepr() {\n    return {\n      name: this.name,\n      quantity: this.quantity,\n    };\n  }\n}\n","export class LoginModel {\n  public email: string;\n  public password: string;\n}","export enum PRIVILEGE_LEVEL {\n  NONE,\n  VOLUNTEER,\n  TEAM_MEMBER,\n  DIRECTOR,\n  TECHNOLOGY_ADMIN,\n}\n","export class RegistrationModel {\n  email: string;\n  uid: string;\n  name: string;\n}\n","export class UpdateModel {\n  public updateTitle: string;\n  public updateText: string;\n  public updateImage: string;\n  public pushNotificaiton: boolean;\n\n  constructor(updateTitle: string, updateText: string, updateImage?: string, pushNotificaiton?: boolean) {\n    this.updateTitle = updateTitle;\n    this.updateText = updateText;\n    this.updateImage = updateImage;\n    this.pushNotificaiton = pushNotificaiton;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs';\nimport * as firebase from 'firebase/app';\n\nexport enum AuthProviders {\n  GOOGLE_PROVIDER,\n  GITHUB_PROVIDER,\n  FACEBOOK_PROVIDER,\n}\n\n@Injectable()\nexport class AuthService {\n\n  constructor(public afAuth: AngularFireAuth) {}\n\n  get idToken(): Observable<String> {\n    return this.afAuth.idToken;\n  }\n\n  get currentUser() {\n    return this.afAuth.user;\n  }\n\n  get authState() {\n    return this.afAuth.authState;\n  }\n\n  signIn(email: string, password: string) {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  signInWithProvider(provider: AuthProviders): Promise<any> {\n    let authProvider: firebase.auth.AuthProvider = null;\n    switch (provider) {\n      case AuthProviders.GOOGLE_PROVIDER:\n        authProvider = new firebase.auth.GoogleAuthProvider();\n        break;\n      case AuthProviders.FACEBOOK_PROVIDER:\n        authProvider = new firebase.auth.FacebookAuthProvider();\n        break;\n      case AuthProviders.GITHUB_PROVIDER:\n        authProvider = new firebase.auth.GithubAuthProvider();\n        break;\n    }\n    return this.afAuth.auth.signInWithPopup(authProvider);\n  }\n\n  signOut(): Promise<void> {\n    return this.afAuth.auth.signOut();\n  }\n\n  createUser(email: string, password: string) {\n    return this.afAuth.auth.createUserWithEmailAndPassword(email, password);\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { AppConstants } from '../../helpers/AppConstants';\nimport { ApiRoute } from '../../models/ApiRoute';\nimport { AuthService, CustomErrorHandlerService } from '../services';\n\nexport abstract class BaseHttpService {\n  private static readonly BASE_URL = AppConstants.API_BASE_URL;\n  protected memCache: Map<ApiRoute, Observable<any>>;\n\n  protected constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private errorHandler: CustomErrorHandlerService,\n  ) {\n    this.memCache = new Map<ApiRoute, Observable<any>>();\n  }\n\n  protected genericGet<T>(apiRoute: ApiRoute): Observable<T> {\n    if (!this.memCache.has(apiRoute)) {\n      let observable;\n      if (apiRoute.needsAuthentication) {\n        observable = this.authService.idToken\n                         .pipe(\n                           take(1),\n                           switchMap((idToken: string) => {\n                             if (!idToken) {\n                               return throwError(new HttpErrorResponse({\n                                 error: {\n                                   message: 'You are not logged in. Redirecting now.',\n                                 },\n                                 status: 401,\n                               }));\n                             }\n                             let headers = new HttpHeaders();\n                             headers = headers.set('idtoken', idToken);\n                             let params = new HttpParams();\n                             if (apiRoute.queryParams) {\n                               apiRoute.queryParams.forEach((value, key) => {\n                                 params = params.append(key, value);\n                               });\n                             }\n                             return this.http.get<T>(\n                               `${BaseHttpService.BASE_URL}${apiRoute.URL}`,\n                               { headers, params, reportProgress: true },\n                             );\n                           }),\n                         );\n      } else {\n        observable = this.http.get<T>(\n          `${BaseHttpService.BASE_URL}${apiRoute.URL}`,\n          { reportProgress: true },\n        );\n      }\n      this.memCache.set(apiRoute, observable);\n    }\n    return this.memCache.get(apiRoute);\n  }\n\n  protected genericPost<T>(apiRoute: ApiRoute, data: any) {\n    this.memCache.set(apiRoute, null);\n    return this.authService.idToken.pipe(\n      take(1),\n      switchMap((idToken: string) => {\n        if (!idToken) {\n          return throwError('You are not logged in. Redirecting now.');\n        }\n        let headers = new HttpHeaders();\n        headers = headers.set('idtoken', idToken);\n        return this.http.post(\n          `${AppConstants.API_BASE_URL}${apiRoute.URL}`,\n          data,\n          { headers, reportProgress: true },\n        );\n      }),\n      catchError(err => this.errorHandler.handleHttpError(err)),\n    );\n  }\n\n  protected genericPut<T>(apiRoute: ApiRoute, data: any) {\n    this.memCache.set(apiRoute, null);\n    return this.authService.idToken.pipe(\n      take(1),\n      switchMap((idToken: string) => {\n        if (!idToken) {\n          return throwError('You are not logged in. Redirecting now.');\n        }\n        let headers = new HttpHeaders();\n        headers = headers.set('idtoken', idToken);\n        return this.http.put(\n          `${AppConstants.API_BASE_URL}${apiRoute.URL}`,\n          data,\n          { headers, reportProgress: true },\n        );\n      }),\n      catchError(err => this.errorHandler.handleHttpError(err)),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Error as GenericError } from 'tslint/lib/error';\nimport { Error } from '../../models/error.interface';\nimport { AlertService } from 'ngx-alerts';\nimport { Observable } from 'rxjs/Observable';\nimport { throwError } from 'rxjs';\nimport 'rxjs-compat/add/observable/throw';\n\n@Injectable()\nexport class CustomErrorHandlerService {\n\n  private static tryParseError(error: HttpErrorResponse): Error {\n    try {\n      return { error: error.error, message: error.message };\n    } catch (ex) {\n      return error;\n    }\n  }\n\n  private static parseGenericError(error: GenericError): Error {\n    return {\n      error: {\n        message: error.message,\n      },\n      message: error.message,\n    }\n  }\n\n  constructor(private alerts: AlertService) {\n  }\n\n  private parseCustomServerError(error: HttpErrorResponse): any {\n    if (error.status >= 500) {\n      throw new Error('Server error');\n    }\n    const body = error.message;\n    const title = error.name || 'Internal Server Error.';\n    return { title, body };\n  }\n\n  private createCustomError(error: HttpErrorResponse): HttpErrorResponse {\n    console.error(error);\n    try {\n      const parsedError = this.parseCustomServerError(error);\n      const responseOptions = {\n        error: { title: parsedError.title, message: parsedError.body },\n        status: 400,\n        headers: null,\n        url: null,\n      };\n      return new HttpErrorResponse(responseOptions);\n    } catch (ex) {\n      const responseOptions = {\n        error: {\n          title: 'Unknown Error!',\n          message: 'A Server Error Occurred. If this keeps repeating, send us an email at technology@hackpsu.org.',\n        },\n        status: 400,\n        headers: null,\n        url: null,\n      };\n      return new HttpErrorResponse(responseOptions);\n    }\n  }\n\n  private showToast(error: Error): void {\n    this.alerts.danger(error.error.message);\n  }\n\n  public handleHttpError(error: HttpErrorResponse): Observable<Error> {\n    const customError = this.createCustomError(error);\n    const parsedError = CustomErrorHandlerService.tryParseError(customError);\n    return this.handleError(parsedError);\n  }\n\n  public handleError(error: GenericError): Observable<Error> {\n    const parsedError = CustomErrorHandlerService.parseGenericError(error);\n    this.showToast(parsedError);\n    return throwError(parsedError);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class EmailListService {\n\n  public emailList: any[];\n\n  constructor() {\n    this.emailList = [];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin } from 'rxjs';\nimport { Observable } from 'rxjs/Observable';\nimport * as uuid from 'uuid/v4';\nimport 'rxjs/add/observable/throw';\nimport { map } from 'rxjs/operators';\nimport { AttendanceModel } from '../../models/attendance-model';\nimport { CheckoutInstanceModel } from '../../models/checkout-instance-model';\nimport { ClassesModel } from '../../models/classes-model';\nimport { EventModel } from '../../models/event-model';\nimport { IApiResponseModel } from '../../models/api-response-model';\nimport { ICountModel } from '../../models/count-model';\nimport { IHackerDataModel } from 'app/models/hacker-model';\nimport { IStatisticsModel } from '../../models/statistics-model';\nimport { ItemCheckoutModel } from '../../models/item-checkout-model';\nimport { LocationModel } from '../../models/location-model';\nimport { PreRegistrationModel } from '../../models/pre-registration-model';\nimport { RegistrationModel } from '../../models/registration-model';\n\nimport { ApiRoute } from '../../models/ApiRoute';\nimport { AuthService } from '../AuthService/auth.service';\nimport { BaseHttpService } from '../base-http/base-http.service';\nimport { CustomErrorHandlerService } from '../custom-error-handler/custom-error-handler.service';\n\nimport * as _ from 'lodash';\nimport { IHackerRegistrationModel } from 'app/models/hacker-registration-model';\nimport { query } from '@angular/animations';\nimport { UpdateModel } from '../../models/update-model';\nimport { IEventStatisticsModel } from '../../models/event-statistic-model';\n\n\n@Injectable()\nexport class HttpAdminService extends BaseHttpService {\n\n  constructor(http: HttpClient, authService: AuthService, errorHandler: CustomErrorHandlerService) {\n    super(http, authService, errorHandler);\n  }\n\n  /**\n   * Gets the admin and privilege status of the current user denoted by the idtoken (found in local memory)\n   * \n   * @returns IResponseModel containing admin, privilege properties\n   */\n  getAdminStatus(): Observable<{admin: boolean, privilege: number}> {\n    const apiRoute = new ApiRoute('admin/', true);\n    return super.genericGet<IApiResponseModel<{admin: boolean, privilege: number}>>(apiRoute)\n      .pipe(\n        map(response => response.body.data),\n      );\n  }\n\n  /**\n   * Gets the current list of hackers who have preregistered for the hackathon\n   * \n   * @param limit Maximun integer number of PreRegistraion entries to fetch\n   * @return Array of hackers who preregistered in PreRegistraitonModel format \n   */\n  getPreRegistrations(limit?: number): Observable<PreRegistrationModel[]> {\n    const apiRoute = new ApiRoute(\n      'admin/preregistered',\n      true,\n      limit ? new Map<string, any>().set('limit', limit).set('byHackathon', true) : null,\n    );\n    return super.genericGet<PreRegistrationModel[]>(apiRoute);\n  }\n\n  /**\n   * Gets the current list of hackers who have registered for the hackathon\n   * \n   * @param limit Maximun integer number of Registration entries to fetch\n   * @return Array of hackers who registered in RegistrationModel format \n   */\n  getRegistrations(limit?: number): Observable<RegistrationModel[]> {\n    const apiRoute = new ApiRoute(\n      'admin/register',\n      true,\n      limit ? new Map<string, any>().set('limit', limit) : null,\n    );\n    return super.genericGet<RegistrationModel[]>(apiRoute);\n  }\n\n  /**\n   * Gets the current list of available events for the hackathon\n   * \n   * @param limit Maximun integer number of Event entries to fetch\n   * @returns Array of events for the hackathon in the EventModel format\n   */\n  getEvents(limit?: number): Observable<EventModel[]> {\n    const apiParams = new Map<string, any>();\n    apiParams.set('ignoreCache', true);\n    if (limit != null) { apiParams.set('limit', limit); }\n    const apiRoute = new ApiRoute(\n      'live/events',\n      true,\n      apiParams,\n    );\n    return super.genericGet<IApiResponseModel<EventModel[]>>(apiRoute)\n      .pipe(\n        map(response => response.body.data),\n      );\n  }\n\n  /**\n   * Adds a new event to the list of available events for the hackathon\n   * \n   * @param event New EventModel format event to add\n   * @returns Response containing success message\n   */\n  addEvent(event: EventModel): Observable<{}> {\n\n\n    const apiRoute = new ApiRoute(\n      'live/events',\n      true,\n    );\n    return super.genericPost<IApiResponseModel<{}>>(apiRoute, event.restRepr());\n  }\n\n  /**\n   * Updates a current event in the list of available events for the hackathon\n   * \n   * @param event Current EvenModel format event to update\n   * @returns Response containing success message\n   */\n  updateEvent(event: EventModel): Observable<{}> {\n    const apiRoute = new ApiRoute(\n      'live/events/update',\n      true,\n    );\n    return super.genericPost<{}>(apiRoute, event.restRepr());\n  }\n\n  /**\n   * Gets the firebase unique identifier (UID) for the user associated with the email\n   * \n   * @param email Firebase user email address\n   * @returns Firebase user profile\n   */\n  getUserUID(email: string): Observable<{uid: string}> {\n    const apiRoute = new ApiRoute(\n      'admin/userid',\n      true,\n      new Map().set('email', email),\n    );\n    return super.genericGet<IApiResponseModel<{uid: string}>>(apiRoute)\n      .pipe(\n        map(response => response.body.data),\n      );\n  }\n\n  /**\n   * Elevates the privilege of a user denoted by the unique identifier (UID)\n   * \n   * @param uid Firebase unique identifier\n   * @param privilege Integer number corresponding to firebase privilege level\n   */\n  elevateUser(uid: string, privilege: string) {\n    const apiRoute = new ApiRoute(\n      'admin/makeadmin',\n      true,\n    );\n    return super.genericPost<{}>(apiRoute, { uid, privilege });\n  }\n\n  /**\n   * Sends an email containing a custom subject and body\n   * \n   * @param emailBody \n   * @param emailSubject \n   * @param emailObjects \n   */\n  sendEmail(emailBody: string, emailSubject: string, emailObjects: any[]): Observable<any> {\n    const chunkedEmails = _.chunk(emailObjects, 100);\n    const apiRoute = new ApiRoute(\n      'admin/email',\n      true,\n    );\n    // CHECK THAT REPLACEMENTS ARE VALID\n    const replacements = emailBody.match(/\\$\\w+\\$/g);\n    try {\n      replacements.forEach((replacement) => {\n        emailObjects.forEach((object) => {\n          const key = replacement.replace(/\\$/g, '');\n          if (!object.substitutions\n              || object.substitutions[key] === null\n              || typeof object.substitutions[key] === 'undefined') {\n            throw new Error('Replacements are invalid: ' + key);\n          }\n        });\n      });\n    } catch (error) {\n      return Observable.throwError(error);\n    }\n    return forkJoin(...chunkedEmails.map(batchedEmails => super.genericPost<{}>(\n      apiRoute,\n      { subject: emailSubject, html: emailBody, emails: batchedEmails },\n    )));\n  }\n\n  /**\n   * Gets the current list of hackers who have RSVP'd for the hackathon\n   * \n   * @param limit Maximun integer number of RSVP entries to fetch\n   * @return Array of hackers who RSVP'd in RegistrationModel format \n   */\n  getRSVPs(limit?: number): Observable<RegistrationModel[]> {\n    const apiRoute = new ApiRoute(\n      'admin/rsvp_list',\n      true,\n      limit ? new Map<string, any>().set('limit', limit) : null,\n    );\n    return super.genericGet<RegistrationModel[]>(apiRoute);\n  }\n\n  /**\n   * Gets the current list of available events for the hackathon\n   * \n   * @param limit Maximun integer number of Event entries to fetch\n   * @returns Array of events for the hackathon in the EventModel format\n   */\n  getLocations(limit?: number): Observable<LocationModel[]> {\n    const apiParams = new Map<string, any>();\n    if (limit > 0) { apiParams.set('limit', limit); }\n    const apiRoute = new ApiRoute(\n      'admin/location',\n      true,\n      apiParams,\n    );\n    return super.genericGet<IApiResponseModel<LocationModel[]>>(apiRoute)\n    .pipe(\n      map(response => response.body.data),\n    );\n  }\n\n  /**\n   * Add a new location to the list of available locations to use for events at the hackathon\n   * \n   * @param locationName Name of the new location entry \n   */\n  addNewLocation(locationName: string) {\n    const apiRoute = new ApiRoute(\n      'admin/location',\n      true,\n    );\n    return super.genericPost<{}>(apiRoute, { locationName });\n  }\n\n  /**\n   * Removes the location from the list of available locations to use for events at the hackathon\n   * \n   * @param uid Unique identifer (UID) for the location\n   */\n  removeLocation(uid: string) {\n    const apiRoute = new ApiRoute(\n      'admin/location/delete',\n      true,\n    );\n    return super.genericPost<{}>(apiRoute, { uid });\n  }\n\n  /**\n   * Update a location (determined by the UID), in the list of available locations to use for events\n   * at the hackathon, to have a new location name\n   * \n   * @param uid Unique identifier (UID) for the location\n   * @param location_name New name for the location\n   */\n  updateLocation(uid: string, locationName: string) {\n    const apiRoute = new ApiRoute(\n      'admin/location/update',\n      true,\n    );\n    return super.genericPost<{}>(apiRoute, { uid, locationName });\n  }\n\n  /**\n   * Gets the current list of classes that allow for extra credit from attending the hackathon\n   * \n   * @param limit Maximun integer number of Extra Credit Classes entries to fetch\n   * @returns Array of extra credit classes for the hackathon in the ClassesModel format\n   */\n  getExtraCreditClasses(limit?: number): Observable<ClassesModel[]> {\n    const apiRoute = new ApiRoute(\n      'users/extra-credit',\n      true,\n      limit ? new Map<string, number>().set('limit', limit) : null,\n    );\n    return super.genericGet<IApiResponseModel<ClassesModel[]>>(apiRoute)\n    .pipe(\n      map(response => response.body.data),\n    );\n  }\n\n  /**\n   * Associates a hacker with an extra credit class for tracking involvement at the hackathon\n   * \n   * @param uid Hacker unique identifier\n   * @param cid Class unique identifier\n   */\n  addHackerToExtraCreditClass(uid: string, cid: string): Observable<{}>  {\n    const apiRoute = new ApiRoute(\n      'users/extra-credit',\n      true,\n    );\n    return super.genericPost<IApiResponseModel<{}>>(apiRoute, { uid, cid });\n  }\n\n  /**\n   * Manually sets the hackers attendance status to be checked in with no wristband association\n   * \n   * @param uid Hacker unique indentifier\n   */\n  setHackerCheckedIn(uid: string) {\n    const wid = `NO_BAND_${uuid()}`;\n    const time: number = new Date().getTime();\n\n    const apiRoute = new ApiRoute(\n      'admin/assignment',\n      true,\n\n    );\n    return super.genericPost<{}>(apiRoute, { assignments: [{ uid, wid, time }] });\n  }\n\n  /**\n   * Gets a list of all hackers who have preregistered/registered/rsvp'd/checked-in to the hackathon\n   * \n   * @param limit Maximun integer number of hacker entries to fetch\n   * @returns Array of extra credit classes for the hackathon in the ClassesModel format\n   */\n  getAllHackers(limit?: number, hackathon?: string): Observable<IApiResponseModel<IHackerDataModel[]>> {\n    const queryParams = new Map<string, any>();\n    queryParams.set('ignoreCache', true);\n    if (limit) { queryParams.set('limit', limit); };\n    if (hackathon) { queryParams.set('hackathon', hackathon); };\n    const apiRoute = new ApiRoute(\n      'admin/data/?type=registration_stats',\n      true,\n      queryParams,\n    );\n    return super.genericGet<IApiResponseModel<IHackerDataModel[]>>(apiRoute)\n  }\n\n  /**\n   * Gets a count of all the hackers who have preregistered for the hackathon\n   * \n   * @param limit Maximun integer number PreRegistration Count entries to fetch\n   * @returns Integer number count of hackers who have preregisted in the ICountModel format\n   */\n  getPreRegCount(limit?: number): Observable<ICountModel[]> {\n    const apiRoute = new ApiRoute(\n      'admin/prereg_count',\n      true,\n      limit ? new Map<string, any>().set('limit', limit) : null,\n    );\n    return super.genericGet<ICountModel[]>(apiRoute);\n  }\n  /**\n   * Gets a count of all the hackers who have registered for the hackathon\n   * \n   * @param limit Maximun integer number Registered Count entries to fetch\n   * @returns Integer number count of hackers who have registered in the ICountModel format\n   */\n  getRegCount(limit?: number): Observable<ICountModel[]> {\n    const apiRoute = new ApiRoute(\n      'admin/reg_count',\n      true,\n      limit ? new Map<string, any>().set('limit', limit) : null,\n    );\n    return super.genericGet<ICountModel[]>(apiRoute);\n  }\n  /**\n   * Gets a count of all the hackers who have Pre/Reg/RSVP/CheckedIn for the hackathon\n   * \n   * @param limit Maximun integer number Pre/Reg/RSVP/CheckedIn Count entries to fetch\n   * @returns Integer number count of hackers who have Pre/Reg/RSVP/CheckedIn in the ICountModel format\n   */\n  getAllHackerCount(hackathon?: string): Observable<ICountModel> {\n    const queryParams = new Map<string, any>();\n    if (hackathon) { queryParams.set('hackathon', hackathon); }\n    const apiRoute = new ApiRoute(\n      'admin/data/?type=stats_count',\n      true,\n      queryParams,\n    );\n    return super.genericGet<IApiResponseModel<ICountModel>>(apiRoute)\n      .pipe(\n        map(response => response.body.data[0]),\n      );\n  }\n\n  /**\n   * Gets the count for each category option presented when hackers registered.\n   * \n   * @param limit Maximun integer number category option count entries to fetch\n   * @retuns Array of counts for each category option in the IStatisticsModel format\n   */\n  getStatistics(limit?: number): Observable<IStatisticsModel[]> {\n    const apiRoute = new ApiRoute(\n      'admin/data/?type=registration_category_count',\n      true,\n      limit ? new Map<string, any>().set('limit', limit) : null,\n    );\n    return super.genericGet<IStatisticsModel[]>(apiRoute);\n  }\n\n  /**\n   * Gets the list of available items to checkout for Item Checkout during the hackathon\n   * \n   * @returns Array of items that are available in the ItemCheckoutModel format\n   */\n  getAvailableCheckoutItems(): Observable<ItemCheckoutModel[]> {\n    const queryParams = new Map<string, any>();\n    queryParams.set('ignoreCache', true);\n    const apiRoute = new ApiRoute(\n      'admin/checkout/items/availability',\n      true,\n      queryParams,\n    );\n    return super.genericGet<IApiResponseModel<ItemCheckoutModel[]>>(apiRoute)\n    .pipe(\n      map(response => response.body.data),\n    );\n  }\n\n  addCheckoutRequest(itemId: number, userId: string) {\n    const apiRoute = new ApiRoute(\n      'admin/checkout',\n      true,\n    );\n    return super.genericPost<{}>(apiRoute, { itemId, userId });\n  }\n\n  getCurrentCheckedOutItems(): Observable<CheckoutInstanceModel[]> {\n    const queryParams = new Map<string, any>();\n    queryParams.set('ignoreCache', true);\n    const apiRoute = new ApiRoute(\n      'admin/checkout',\n      true,\n      queryParams,\n    );\n    return super.genericGet<IApiResponseModel<CheckoutInstanceModel[]>>(apiRoute)\n    .pipe(\n      map(response => response.body.data),\n    );\n  }\n\n  getEventAttendance(limit?: number, hackathon?: number): Observable<{}> {\n    const queryParams = new Map<string, any>();\n    hackathon ? queryParams.set('hackathon', hackathon) : null;\n    limit ? new Map<string, any>().set('limit', limit) : null;\n    queryParams.set('ignoreCache', true);\n    queryParams.set('type', 'attendance');\n    queryParams.set('aggregator', 'event')\n    const apiRoute = new ApiRoute(\n      'admin/data',\n      true,\n      queryParams,\n    );\n    return super.genericGet<IApiResponseModel<{}>>(apiRoute)\n    .pipe(\n      map(response => response.body.data),\n    );\n  }\n\n  returnCheckoutItem(data: CheckoutInstanceModel) {\n    const apiRoute = new ApiRoute(\n      'admin/checkout/return',\n      true,\n    );\n    return super.genericPost<{}>(apiRoute, { checkoutId: data.uid });\n  }\n\n  sendLiveUpdate(liveUpdate: UpdateModel): Observable<{}> {\n    const apiRoute = new ApiRoute(\n      'live/updates',\n      true,\n    );\n    return super.genericPost<IApiResponseModel<{}>>(apiRoute, liveUpdate);\n  }\n\n  /**\n   * Updates the Hacker's Registration Data\n   * \n   * @param data Updated Registration data for a Hacker\n   */\n  updateHackerRegistration(data: IHackerRegistrationModel) {\n    const apiRoute = new ApiRoute(\n      'admin/register/update',\n      true,\n    );\n    return super.genericPost<{}>(apiRoute, { registration: data });\n  }\n\n  getHackathons() {\n    const apiRoute = new ApiRoute(\n      'admin/hackathon',\n      true,\n    );\n    return super.genericGet<IApiResponseModel<{}>>(apiRoute)\n    .pipe(\n      map(response => response.body.data),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/filter';\nimport { AppConstants } from '../../helpers/AppConstants';\n\n\n@Injectable()\nexport class LiveUpdatesService {\n  private url = `${AppConstants.SOCKET_BASE_URL}/updates`;\n  // private socket;\n\n  private broadcastSubject: BehaviorSubject<Event> = new BehaviorSubject<Event>(new Event(''));\n\n  public next(event: Event): void {\n    return this.broadcastSubject.next(event);\n  }\n\n  public subject(event: Event): Observable<Event> {\n    return this.broadcastSubject.asObservable().filter(e => e.type === event.type);\n  }\n\n\n  constructor() {\n  }\n\n  getUpdates(idtoken: string) {\n    return new Observable(null);\n    // TODO: Change\n    // return new Observable((observer) => {\n    //   this.socket = io(this.url, {\n    //     path: '/v1/live',\n    //     transportOptions: {\n    //       polling: { extraHeaders: { idtoken } },\n    //     },\n    //   });\n    //   this.socket.on('connect', () => {\n    //     console.log('CONNECTED');\n    //     this.next(new Event('connected'));\n    //   });\n    //\n    //   this.socket.on('disconnect', () => {\n    //     console.log('DISCONNECTED');\n    //     this.next(new Event('disconnected'));\n    //   });\n    //   this.socket.on('update', (data) => {\n    //     observer.next(data);\n    //   });\n    //   this.socket.on('error', error => observer.error(error));\n    //   return () => {\n    //     this.socket.disconnect();\n    //   };\n    // });\n  }\n\n  sendMessage(message: string, title: string, push_notification: boolean) {\n    return new Observable<{ uploaded, total }>(null);\n    // this.socket.emit('upstream-update', { message, title, push_notification });\n    // return new Observable<{ uploaded, total }>((observer) => {\n    //   this.socket.on('upload-progress', (update: { uploaded, total }) => {\n    //     observer.next(update);\n    //   });\n    //   this.socket.on('upload-error', error => observer.error(error));\n    //   this.socket.on('upload-complete', () => observer.complete());\n    // });\n  }\n}\n","export { CustomErrorHandlerService } from './custom-error-handler/custom-error-handler.service';\nexport { AuthService } from './AuthService/auth.service';\nexport { HttpAdminService } from './http-admin/http-admin.service';\n","export let htmlTemplate = `<!doctype html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">\n\t<head>\n\t\t<!-- NAME: FOLLOW UP -->\n\t\t<!--[if gte mso 15]>\n\t\t<xml>\n\t\t\t<o:OfficeDocumentSettings>\n\t\t\t<o:AllowPNG/>\n\t\t\t<o:PixelsPerInch>96</o:PixelsPerInch>\n\t\t\t</o:OfficeDocumentSettings>\n\t\t</xml>\n\t\t<![endif]-->\n\t\t<meta charset=\"UTF-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <style type=\"text/css\">\n\t\tp{\n\t\t\tmargin:10px 0;\n\t\t\tpadding:0;\n\t\t}\n\t\ttable{\n\t\t\tborder-collapse:collapse;\n\t\t}\n\t\th1,h2,h3,h4,h5,h6{\n\t\t\tdisplay:block;\n\t\t\tmargin:0;\n\t\t\tpadding:0;\n\t\t}\n\t\timg,a img{\n\t\t\tborder:0;\n\t\t\theight:auto;\n\t\t\toutline:none;\n\t\t\ttext-decoration:none;\n\t\t}\n\t\tbody,#bodyTable,#bodyCell{\n\t\t\theight:100%;\n\t\t\tmargin:0;\n\t\t\tpadding:0;\n\t\t\twidth:100%;\n\t\t}\n\t\t.mcnPreviewText{\n\t\t\tdisplay:none !important;\n\t\t}\n\t\t#outlook a{\n\t\t\tpadding:0;\n\t\t}\n\t\timg{\n\t\t\t-ms-interpolation-mode:bicubic;\n\t\t}\n\t\ttable{\n\t\t\tmso-table-lspace:0pt;\n\t\t\tmso-table-rspace:0pt;\n\t\t}\n\t\t.ReadMsgBody{\n\t\t\twidth:100%;\n\t\t}\n\t\t.ExternalClass{\n\t\t\twidth:100%;\n\t\t}\n\t\tp,a,li,td,blockquote{\n\t\t\tmso-line-height-rule:exactly;\n\t\t}\n\t\ta[href^=tel],a[href^=sms]{\n\t\t\tcolor:inherit;\n\t\t\tcursor:default;\n\t\t\ttext-decoration:none;\n\t\t}\n\t\tp,a,li,td,body,table,blockquote{\n\t\t\t-ms-text-size-adjust:100%;\n\t\t\t-webkit-text-size-adjust:100%;\n\t\t}\n\t\t.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{\n\t\t\tline-height:100%;\n\t\t}\n\t\ta[x-apple-data-detectors]{\n\t\t\tcolor:inherit !important;\n\t\t\ttext-decoration:none !important;\n\t\t\tfont-size:inherit !important;\n\t\t\tfont-family:inherit !important;\n\t\t\tfont-weight:inherit !important;\n\t\t\tline-height:inherit !important;\n\t\t}\n\t\t.templateContainer{\n\t\t\tmax-width:600px !important;\n\t\t}\n\t\ta.mcnButton{\n\t\t\tdisplay:block;\n\t\t}\n\t\t.mcnImage,.mcnRetinaImage{\n\t\t\tvertical-align:bottom;\n\t\t}\n\t\t.mcnTextContent{\n\t\t\tword-break:break-word;\n\t\t}\n\t\t.mcnTextContent img{\n\t\t\theight:auto !important;\n\t\t}\n\t\t.mcnDividerBlock{\n\t\t\ttable-layout:fixed !important;\n\t\t}\n\t/*\n\t@tab Page\n\t@section Heading 1\n\t@style heading 1\n\t*/\n\t\th1{\n\t\t\t/*@editable*/color:#222222;\n\t\t\t/*@editable*/font-family:'Roboto', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\t\t\t/*@editable*/font-size:40px;\n\t\t\t/*@editable*/font-style:normal;\n\t\t\t/*@editable*/font-weight:bold;\n\t\t\t/*@editable*/line-height:150%;\n\t\t\t/*@editable*/letter-spacing:normal;\n\t\t\t/*@editable*/text-align:center;\n\t\t}\n\t/*\n\t@tab Page\n\t@section Heading 2\n\t@style heading 2\n\t*/\n\t\th2{\n\t\t\t/*@editable*/color:#222222;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:34px;\n\t\t\t/*@editable*/font-style:normal;\n\t\t\t/*@editable*/font-weight:bold;\n\t\t\t/*@editable*/line-height:150%;\n\t\t\t/*@editable*/letter-spacing:normal;\n\t\t\t/*@editable*/text-align:left;\n\t\t}\n\t/*\n\t@tab Page\n\t@section Heading 3\n\t@style heading 3\n\t*/\n\t\th3{\n\t\t\t/*@editable*/color:#444444;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:22px;\n\t\t\t/*@editable*/font-style:normal;\n\t\t\t/*@editable*/font-weight:bold;\n\t\t\t/*@editable*/line-height:150%;\n\t\t\t/*@editable*/letter-spacing:normal;\n\t\t\t/*@editable*/text-align:center;\n\t\t}\n\t/*\n\t@tab Page\n\t@section Heading 4\n\t@style heading 4\n\t*/\n\t\th4{\n\t\t\t/*@editable*/color:#999999;\n\t\t\t/*@editable*/font-family:Georgia;\n\t\t\t/*@editable*/font-size:20px;\n\t\t\t/*@editable*/font-style:italic;\n\t\t\t/*@editable*/font-weight:normal;\n\t\t\t/*@editable*/line-height:125%;\n\t\t\t/*@editable*/letter-spacing:normal;\n\t\t\t/*@editable*/text-align:left;\n\t\t}\n\t/*\n\t@tab Header\n\t@section Header Container Style\n\t*/\n\t\t#templateHeader{\n\t\t\t/*@editable*/background-color:#ffffff;\n\t\t\t/*@editable*/background-image:none;\n\t\t\t/*@editable*/background-repeat:no-repeat;\n\t\t\t/*@editable*/background-position:50% 50%;\n\t\t\t/*@editable*/background-size:contain;\n\t\t\t/*@editable*/border-top:0;\n\t\t\t/*@editable*/border-bottom:0;\n\t\t\t/*@editable*/padding-top:0px;\n\t\t\t/*@editable*/padding-bottom:0px;\n\t\t}\n\t/*\n\t@tab Header\n\t@section Header Interior Style\n\t*/\n\t\t.headerContainer{\n\t\t\t/*@editable*/background-color:#transparent;\n\t\t\t/*@editable*/background-image:none;\n\t\t\t/*@editable*/background-repeat:no-repeat;\n\t\t\t/*@editable*/background-position:center;\n\t\t\t/*@editable*/background-size:cover;\n\t\t\t/*@editable*/border-top:0;\n\t\t\t/*@editable*/border-bottom:0;\n\t\t\t/*@editable*/padding-top:0;\n\t\t\t/*@editable*/padding-bottom:0;\n\t\t}\n\t/*\n\t@tab Header\n\t@section Header Text\n\t*/\n\t\t.headerContainer .mcnTextContent,.headerContainer .mcnTextContent p{\n\t\t\t/*@editable*/color:#808080;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:16px;\n\t\t\t/*@editable*/line-height:150%;\n\t\t\t/*@editable*/text-align:left;\n\t\t}\n\t/*\n\t@tab Header\n\t@section Header Link\n\t*/\n\t\t.headerContainer .mcnTextContent a,.headerContainer .mcnTextContent p a{\n\t\t\t/*@editable*/color:#00ADD8;\n\t\t\t/*@editable*/font-weight:normal;\n\t\t\t/*@editable*/text-decoration:underline;\n\t\t}\n\t/*\n\t@tab Body\n\t@section Body Container Style\n\t*/\n\t\t#templateBody{\n\t\t\t/*@editable*/background-color:#ffffff;\n\t\t\t/*@editable*/background-image:none;\n\t\t\t/*@editable*/background-repeat:no-repeat;\n\t\t\t/*@editable*/background-position:50% 50%;\n\t\t\t/*@editable*/background-size:cover;\n\t\t\t/*@editable*/border-top:0;\n\t\t\t/*@editable*/border-bottom:0;\n\t\t\t/*@editable*/padding-top:0px;\n\t\t\t/*@editable*/padding-bottom:0px;\n\t\t}\n\t/*\n\t@tab Body\n\t@section Body Interior Style\n\t*/\n\t\t.bodyContainer{\n\t\t\t/*@editable*/background-color:#transparent;\n\t\t\t/*@editable*/background-image:none;\n\t\t\t/*@editable*/background-repeat:no-repeat;\n\t\t\t/*@editable*/background-position:center;\n\t\t\t/*@editable*/background-size:cover;\n\t\t\t/*@editable*/border-top:0;\n\t\t\t/*@editable*/border-bottom:0;\n\t\t\t/*@editable*/padding-top:0px;\n\t\t\t/*@editable*/padding-bottom:0px;\n\t\t}\n\t/*\n\t@tab Body\n\t@section Body Text\n\t*/\n\t\t.bodyContainer .mcnTextContent,.bodyContainer .mcnTextContent p{\n\t\t\t/*@editable*/color:#808080;\n\t\t\t/*@editable*/font-family:'Roboto', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\t\t\t/*@editable*/font-size:16px;\n\t\t\t/*@editable*/line-height:150%;\n\t\t\t/*@editable*/text-align:justify;\n\t\t}\n\t/*\n\t@tab Body\n\t@section Body Link\n\t*/\n\t\t.bodyContainer .mcnTextContent a,.bodyContainer .mcnTextContent p a{\n\t\t\t/*@editable*/color:#00ADD8;\n\t\t\t/*@editable*/font-weight:normal;\n\t\t\t/*@editable*/text-decoration:underline;\n\t\t}\n\t/*\n\t@tab Footer\n\t@section Footer Style\n\t*/\n\t\t#templateFooter{\n\t\t\t/*@editable*/background-color:#193752;\n\t\t\t/*@editable*/background-image:none;\n\t\t\t/*@editable*/background-repeat:no-repeat;\n\t\t\t/*@editable*/background-position:center;\n\t\t\t/*@editable*/background-size:cover;\n\t\t\t/*@editable*/border-top:0;\n\t\t\t/*@editable*/border-bottom:0;\n\t\t\t/*@editable*/padding-top:0px;\n\t\t\t/*@editable*/padding-bottom:0px;\n\t\t}\n\t/*\n\t@tab Footer\n\t@section Footer Interior Style\n\t*/\n\t\t.footerContainer{\n\t\t\t/*@editable*/background-color:#transparent;\n\t\t\t/*@editable*/background-image:none;\n\t\t\t/*@editable*/background-repeat:no-repeat;\n\t\t\t/*@editable*/background-position:center;\n\t\t\t/*@editable*/background-size:cover;\n\t\t\t/*@editable*/border-top:0;\n\t\t\t/*@editable*/border-bottom:0;\n\t\t\t/*@editable*/padding-top:0px;\n\t\t\t/*@editable*/padding-bottom:0px;\n\t\t}\n\t/*\n\t@tab Footer\n\t@section Footer Text\n\t*/\n\t\t.footerContainer .mcnTextContent,.footerContainer .mcnTextContent p{\n\t\t\t/*@editable*/color:#FFFFFF;\n\t\t\t/*@editable*/font-family:Helvetica;\n\t\t\t/*@editable*/font-size:12px;\n\t\t\t/*@editable*/line-height:150%;\n\t\t\t/*@editable*/text-align:center;\n\t\t}\n\t/*\n\t@tab Footer\n\t@section Footer Link\n\t*/\n\t\t.footerContainer .mcnTextContent a,.footerContainer .mcnTextContent p a{\n\t\t\t/*@editable*/color:#FFFFFF;\n\t\t\t/*@editable*/font-weight:normal;\n\t\t\t/*@editable*/text-decoration:underline;\n\t\t}\n\t@media only screen and (min-width:768px){\n\t\t.templateContainer{\n\t\t\twidth:600px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\tbody,table,td,p,a,li,blockquote{\n\t\t\t-webkit-text-size-adjust:none !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\tbody{\n\t\t\twidth:100% !important;\n\t\t\tmin-width:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnRetinaImage{\n\t\t\tmax-width:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImage{\n\t\t\twidth:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{\n\t\t\tmax-width:100% !important;\n\t\t\twidth:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnBoxedTextContentContainer{\n\t\t\tmin-width:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageGroupContent{\n\t\t\tpadding:9px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{\n\t\t\tpadding-top:9px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{\n\t\t\tpadding-top:18px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageCardBottomImageContent{\n\t\t\tpadding-bottom:9px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageGroupBlockInner{\n\t\t\tpadding-top:0 !important;\n\t\t\tpadding-bottom:0 !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageGroupBlockOuter{\n\t\t\tpadding-top:9px !important;\n\t\t\tpadding-bottom:9px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnTextContent,.mcnBoxedTextContentColumn{\n\t\t\tpadding-right:18px !important;\n\t\t\tpadding-left:18px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{\n\t\t\tpadding-right:18px !important;\n\t\t\tpadding-bottom:0 !important;\n\t\t\tpadding-left:18px !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t\t.mcpreview-image-uploader{\n\t\t\tdisplay:none !important;\n\t\t\twidth:100% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Heading 1\n\t@tip Make the first-level headings larger in size for better readability on small screens.\n\t*/\n\t\th1{\n\t\t\t/*@editable*/font-size:30px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Heading 2\n\t@tip Make the second-level headings larger in size for better readability on small screens.\n\t*/\n\t\th2{\n\t\t\t/*@editable*/font-size:26px !important;\n\t\t\t/*@editable*/line-height:125% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Heading 3\n\t@tip Make the third-level headings larger in size for better readability on small screens.\n\t*/\n\t\th3{\n\t\t\t/*@editable*/font-size:20px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Heading 4\n\t@tip Make the fourth-level headings larger in size for better readability on small screens.\n\t*/\n\t\th4{\n\t\t\t/*@editable*/font-size:18px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Boxed Text\n\t@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.\n\t*/\n\t\t.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{\n\t\t\t/*@editable*/font-size:14px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Header Text\n\t@tip Make the header text larger in size for better readability on small screens.\n\t*/\n\t\t.headerContainer .mcnTextContent,.headerContainer .mcnTextContent p{\n\t\t\t/*@editable*/font-size:16px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Body Text\n\t@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.\n\t*/\n\t\t.bodyContainer .mcnTextContent,.bodyContainer .mcnTextContent p{\n\t\t\t/*@editable*/font-size:16px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}\t@media only screen and (max-width: 480px){\n\t/*\n\t@tab Mobile Styles\n\t@section Footer Text\n\t@tip Make the footer content text larger in size for better readability on small screens.\n\t*/\n\t\t.footerContainer .mcnTextContent,.footerContainer .mcnTextContent p{\n\t\t\t/*@editable*/font-size:14px !important;\n\t\t\t/*@editable*/line-height:150% !important;\n\t\t}\n\n}</style></head>\n    <body>\n        <center>\n            <table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" height=\"100%\" width=\"100%\" id=\"bodyTable\">\n                <tr>\n                    <td align=\"center\" valign=\"top\" id=\"bodyCell\">\n                        <!-- BEGIN TEMPLATE // -->\n                        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td align=\"center\" valign=\"top\" id=\"templateHeader\" data-template-container>\n\t\t\t\t\t\t\t\t\t<!--[if (gte mso 9)|(IE)]>\n\t\t\t\t\t\t\t\t\t<table align=\"center\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"600\" style=\"width:600px;\">\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td align=\"center\" valign=\"top\" width=\"600\" style=\"width:600px;\">\n\t\t\t\t\t\t\t\t\t<![endif]-->\n\t\t\t\t\t\t\t\t\t<table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"templateContainer\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n                                \t\t\t<td valign=\"top\" class=\"headerContainer\"><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnImageBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnImageBlockOuter\">\n            <tr>\n                <td valign=\"top\" style=\"padding:0px\" class=\"mcnImageBlockInner\">\n                    <table align=\"left\" width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"mcnImageContentContainer\" style=\"min-width:100%;\">\n                        <tbody><tr>\n                            <td class=\"mcnImageContent\" valign=\"top\" style=\"padding-right: 0px; padding-left: 0px; padding-top: 0; padding-bottom: 0; text-align:center;\">\n\n\n                                        <img align=\"center\" alt=\"hackPSU logo\" src=\"https://gallery.mailchimp.com/c53f3a07ddfb1f5be77d895ab/images/4dcc7e05-1ab8-44e8-b38a-651dd88d9097.png\" width=\"160\" style=\"max-width:320px; padding-bottom: 0; display: inline !important; vertical-align: bottom;\" class=\"mcnImage\">\n\n\n                            </td>\n                        </tr>\n                    </tbody></table>\n                </td>\n            </tr>\n    </tbody>\n</table><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnDividerBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnDividerBlockOuter\">\n        <tr>\n            <td class=\"mcnDividerBlockInner\" style=\"min-width: 100%; padding: 20px 18px;\">\n                <table class=\"mcnDividerContent\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"min-width: 100%;border-top-width: 1px;border-top-style: solid;border-top-color: #E37051;\">\n                    <tbody><tr>\n                        <td>\n                            <span></span>\n                        </td>\n                    </tr>\n                </tbody></table>\n<!--\n                <td class=\"mcnDividerBlockInner\" style=\"padding: 18px;\">\n                <hr class=\"mcnDividerContent\" style=\"border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;\" />\n-->\n            </td>\n        </tr>\n    </tbody>\n</table><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnDividerBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnDividerBlockOuter\">\n        <tr>\n            <td class=\"mcnDividerBlockInner\" style=\"min-width: 100%; padding: 20px 18px;\">\n                <table class=\"mcnDividerContent\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"min-width: 100%;border-top-width: 1px;border-top-style: solid;border-top-color: #E37051;\">\n                    <tbody><tr>\n                        <td>\n                            <span></span>\n                        </td>\n                    </tr>\n                </tbody></table>\n<!--\n                <td class=\"mcnDividerBlockInner\" style=\"padding: 18px;\">\n                <hr class=\"mcnDividerContent\" style=\"border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;\" />\n-->\n            </td>\n        </tr>\n    </tbody>\n</table><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnTextBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnTextBlockOuter\">\n        <tr>\n            <td valign=\"top\" class=\"mcnTextBlockInner\" style=\"padding-top:9px;\">\n              \t<!--[if mso]>\n\t\t\t\t<table align=\"left\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\" style=\"width:100%;\">\n\t\t\t\t<tr>\n\t\t\t\t<![endif]-->\n\n\t\t\t\t<!--[if mso]>\n\t\t\t\t<td valign=\"top\" width=\"600\" style=\"width:600px;\">\n\t\t\t\t<![endif]-->\n                <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"max-width:100%; min-width:100%;\" width=\"100%\" class=\"mcnTextContentContainer\">\n                    <tbody><tr>\n\n                        <td valign=\"top\" class=\"mcnTextContent\" style=\"padding: 0px 18px 9px;color: #222222;\">\n\n                            <div style=\"text-align: center;\"><span style=\"font-family:source sans pro,helvetica neue,helvetica,arial,sans-serif\"><span style=\"font-size:30px\"><span style=\"color:#193752\">LEARN</span>. <span style=\"color:#e37051\">BUILD</span>. <span style=\"color:#6d89b5\">SHARE</span></span></span></div>\n\n                        </td>\n                    </tr>\n                </tbody></table>\n\t\t\t\t<!--[if mso]>\n\t\t\t\t</td>\n\t\t\t\t<![endif]-->\n\n\t\t\t\t<!--[if mso]>\n\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<![endif]-->\n            </td>\n        </tr>\n    </tbody>\n</table></td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t<!--[if (gte mso 9)|(IE)]>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t<![endif]-->\n\t\t\t\t\t\t\t\t</td>\n                            </tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td align=\"center\" valign=\"top\" id=\"templateBody\" data-template-container>\n\t\t\t\t\t\t\t\t\t<!--[if (gte mso 9)|(IE)]>\n\t\t\t\t\t\t\t\t\t<table align=\"center\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"600\" style=\"width:600px;\">\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td align=\"center\" valign=\"top\" width=\"600\" style=\"width:600px;\">\n\t\t\t\t\t\t\t\t\t<![endif]-->\n\t\t\t\t\t\t\t\t\t<table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"templateContainer\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n                                \t\t\t<td valign=\"top\" class=\"bodyContainer\"><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnDividerBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnDividerBlockOuter\">\n        <tr>\n            <td class=\"mcnDividerBlockInner\" style=\"min-width: 100%; padding: 20px 18px;\">\n                <table class=\"mcnDividerContent\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"min-width: 100%;border-top-width: 1px;border-top-style: solid;border-top-color: #E37051;\">\n                    <tbody><tr>\n                        <td>\n                            <span></span>\n                        </td>\n                    </tr>\n                </tbody></table>\n<!--\n                <td class=\"mcnDividerBlockInner\" style=\"padding: 18px;\">\n                <hr class=\"mcnDividerContent\" style=\"border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;\" />\n-->\n            </td>\n        </tr>\n    </tbody>\n</table><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnTextBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnTextBlockOuter\">\n        <tr>\n            <td valign=\"top\" class=\"mcnTextBlockInner\" style=\"padding-top:9px;\">\n              \t<!--[if mso]>\n\t\t\t\t<table align=\"left\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\" style=\"width:100%;\">\n\t\t\t\t<tr>\n\t\t\t\t<![endif]-->\n\n\t\t\t\t<!--[if mso]>\n\t\t\t\t<td valign=\"top\" width=\"600\" style=\"width:600px;\">\n\t\t\t\t<![endif]-->\n                <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"max-width:100%; min-width:100%;\" width=\"100%\" class=\"mcnTextContentContainer\">\n                    <tbody><tr>\n\n                        <td valign=\"top\" class=\"mcnTextContent\" style=\"padding: 0px 18px 9px;color: #222222;font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;font-size: 14px;line-height: 150%;\">\n                        <p style=\"text-align: left;color: #222222;font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;font-size: 14px;line-height: 150%;\">\n                            $$BODY$$\n</p>\n                        </td>\n                    </tr>\n                </tbody></table>\n\t\t\t\t<!--[if mso]>\n\t\t\t\t</td>\n\t\t\t\t<![endif]-->\n\n\t\t\t\t<!--[if mso]>\n\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<![endif]-->\n            </td>\n        </tr>\n    </tbody>\n</table><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnDividerBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnDividerBlockOuter\">\n        <tr>\n            <td class=\"mcnDividerBlockInner\" style=\"min-width: 100%; padding: 20px 18px;\">\n                <table class=\"mcnDividerContent\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"min-width: 100%;border-top-width: 1px;border-top-style: solid;border-top-color: #E37051;\">\n                    <tbody><tr>\n                        <td>\n                            <span></span>\n                        </td>\n                    </tr>\n                </tbody></table>\n<!--\n                <td class=\"mcnDividerBlockInner\" style=\"padding: 18px;\">\n                <hr class=\"mcnDividerContent\" style=\"border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;\" />\n-->\n            </td>\n        </tr>\n    </tbody>\n</table><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnDividerBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnDividerBlockOuter\">\n        <tr>\n            <td class=\"mcnDividerBlockInner\" style=\"min-width: 100%; padding: 9px 18px 0px;\">\n                <table class=\"mcnDividerContent\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"min-width:100%;\">\n                    <tbody><tr>\n                        <td>\n                            <span></span>\n                        </td>\n                    </tr>\n                </tbody></table>\n<!--\n                <td class=\"mcnDividerBlockInner\" style=\"padding: 18px;\">\n                <hr class=\"mcnDividerContent\" style=\"border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;\" />\n-->\n            </td>\n        </tr>\n    </tbody>\n</table><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnDividerBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnDividerBlockOuter\">\n        <tr>\n            <td class=\"mcnDividerBlockInner\" style=\"min-width: 100%; padding: 18px 18px 0px;\">\n                <table class=\"mcnDividerContent\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"min-width:100%;\">\n                    <tbody><tr>\n                        <td>\n                            <span></span>\n                        </td>\n                    </tr>\n                </tbody></table>\n<!--\n                <td class=\"mcnDividerBlockInner\" style=\"padding: 18px;\">\n                <hr class=\"mcnDividerContent\" style=\"border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;\" />\n-->\n            </td>\n        </tr>\n    </tbody>\n</table></td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t<!--[if (gte mso 9)|(IE)]>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t<![endif]-->\n\t\t\t\t\t\t\t\t</td>\n                            </tr>\n                            <tr>\n\t\t\t\t\t\t\t\t<td align=\"center\" valign=\"top\" id=\"templateFooter\" data-template-container>\n\t\t\t\t\t\t\t\t\t<!--[if (gte mso 9)|(IE)]>\n\t\t\t\t\t\t\t\t\t<table align=\"center\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"600\" style=\"width:600px;\">\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td align=\"center\" valign=\"top\" width=\"600\" style=\"width:600px;\">\n\t\t\t\t\t\t\t\t\t<![endif]-->\n\t\t\t\t\t\t\t\t\t<table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"templateContainer\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n                                \t\t\t<td valign=\"top\" class=\"footerContainer\"><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnFollowBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnFollowBlockOuter\">\n        <tr>\n            <td align=\"center\" valign=\"top\" style=\"padding:9px\" class=\"mcnFollowBlockInner\">\n                <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnFollowContentContainer\" style=\"min-width:100%;\">\n    <tbody><tr>\n        <td align=\"center\" style=\"padding-left:9px;padding-right:9px;\">\n            <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"min-width:100%;\" class=\"mcnFollowContent\">\n                <tbody><tr>\n                    <td align=\"center\" valign=\"top\" style=\"padding-top:9px; padding-right:9px; padding-left:9px;\">\n                        <table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n                            <tbody><tr>\n                                <td align=\"center\" valign=\"top\">\n                                    <!--[if mso]>\n                                    <table align=\"center\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                                    <tr>\n                                    <![endif]-->\n\n                                        <!--[if mso]>\n                                        <td align=\"center\" valign=\"top\">\n                                        <![endif]-->\n\n\n                                            <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"display:inline;\">\n                                                <tbody><tr>\n                                                    <td valign=\"top\" style=\"padding-right:10px; padding-bottom:9px;\" class=\"mcnFollowContentItemContainer\">\n                                                        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnFollowContentItem\">\n                                                            <tbody><tr>\n                                                                <td align=\"left\" valign=\"middle\" style=\"padding-top:5px; padding-right:10px; padding-bottom:5px; padding-left:9px;\">\n                                                                    <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"\">\n                                                                        <tbody><tr>\n\n                                                                                <td align=\"center\" valign=\"middle\" width=\"24\" class=\"mcnFollowIconContent\">\n                                                                                    <a href=\"http://www.facebook.com\" target=\"_blank\"><img src=\"https://cdn-images.mailchimp.com/icons/social-block-v2/outline-light-facebook-48.png\" style=\"display:block;\" height=\"24\" width=\"24\" class=\"\"></a>\n                                                                                </td>\n\n\n                                                                        </tr>\n                                                                    </tbody></table>\n                                                                </td>\n                                                            </tr>\n                                                        </tbody></table>\n                                                    </td>\n                                                </tr>\n                                            </tbody></table>\n\n                                        <!--[if mso]>\n                                        </td>\n                                        <![endif]-->\n\n                                        <!--[if mso]>\n                                        <td align=\"center\" valign=\"top\">\n                                        <![endif]-->\n\n\n                                            <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"display:inline;\">\n                                                <tbody><tr>\n                                                    <td valign=\"top\" style=\"padding-right:10px; padding-bottom:9px;\" class=\"mcnFollowContentItemContainer\">\n                                                        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnFollowContentItem\">\n                                                            <tbody><tr>\n                                                                <td align=\"left\" valign=\"middle\" style=\"padding-top:5px; padding-right:10px; padding-bottom:5px; padding-left:9px;\">\n                                                                    <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"\">\n                                                                        <tbody><tr>\n\n                                                                                <td align=\"center\" valign=\"middle\" width=\"24\" class=\"mcnFollowIconContent\">\n                                                                                    <a href=\"http://www.twitter.com/hackpsu\" target=\"_blank\"><img src=\"https://cdn-images.mailchimp.com/icons/social-block-v2/outline-light-twitter-48.png\" style=\"display:block;\" height=\"24\" width=\"24\" class=\"\"></a>\n                                                                                </td>\n\n\n                                                                        </tr>\n                                                                    </tbody></table>\n                                                                </td>\n                                                            </tr>\n                                                        </tbody></table>\n                                                    </td>\n                                                </tr>\n                                            </tbody></table>\n\n                                        <!--[if mso]>\n                                        </td>\n                                        <![endif]-->\n\n                                        <!--[if mso]>\n                                        <td align=\"center\" valign=\"top\">\n                                        <![endif]-->\n\n\n                                            <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"display:inline;\">\n                                                <tbody><tr>\n                                                    <td valign=\"top\" style=\"padding-right:10px; padding-bottom:9px;\" class=\"mcnFollowContentItemContainer\">\n                                                        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnFollowContentItem\">\n                                                            <tbody><tr>\n                                                                <td align=\"left\" valign=\"middle\" style=\"padding-top:5px; padding-right:10px; padding-bottom:5px; padding-left:9px;\">\n                                                                    <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"\">\n                                                                        <tbody><tr>\n\n                                                                                <td align=\"center\" valign=\"middle\" width=\"24\" class=\"mcnFollowIconContent\">\n                                                                                    <a href=\"https://www.instagram.com/hack_psu/\" target=\"_blank\"><img src=\"https://cdn-images.mailchimp.com/icons/social-block-v2/outline-light-instagram-48.png\" style=\"display:block;\" height=\"24\" width=\"24\" class=\"\"></a>\n                                                                                </td>\n\n\n                                                                        </tr>\n                                                                    </tbody></table>\n                                                                </td>\n                                                            </tr>\n                                                        </tbody></table>\n                                                    </td>\n                                                </tr>\n                                            </tbody></table>\n\n                                        <!--[if mso]>\n                                        </td>\n                                        <![endif]-->\n\n                                        <!--[if mso]>\n                                        <td align=\"center\" valign=\"top\">\n                                        <![endif]-->\n\n\n                                            <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"display:inline;\">\n                                                <tbody><tr>\n                                                    <td valign=\"top\" style=\"padding-right:0; padding-bottom:9px;\" class=\"mcnFollowContentItemContainer\">\n                                                        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnFollowContentItem\">\n                                                            <tbody><tr>\n                                                                <td align=\"left\" valign=\"middle\" style=\"padding-top:5px; padding-right:10px; padding-bottom:5px; padding-left:9px;\">\n                                                                    <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"\">\n                                                                        <tbody><tr>\n\n                                                                                <td align=\"center\" valign=\"middle\" width=\"24\" class=\"mcnFollowIconContent\">\n                                                                                    <a href=\"https://hackpsu.org\" target=\"_blank\"><img src=\"https://cdn-images.mailchimp.com/icons/social-block-v2/outline-light-link-48.png\" style=\"display:block;\" height=\"24\" width=\"24\" class=\"\"></a>\n                                                                                </td>\n\n\n                                                                        </tr>\n                                                                    </tbody></table>\n                                                                </td>\n                                                            </tr>\n                                                        </tbody></table>\n                                                    </td>\n                                                </tr>\n                                            </tbody></table>\n\n                                        <!--[if mso]>\n                                        </td>\n                                        <![endif]-->\n\n                                    <!--[if mso]>\n                                    </tr>\n                                    </table>\n                                    <![endif]-->\n                                </td>\n                            </tr>\n                        </tbody></table>\n                    </td>\n                </tr>\n            </tbody></table>\n        </td>\n    </tr>\n</tbody></table>\n\n            </td>\n        </tr>\n    </tbody>\n</table><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" class=\"mcnTextBlock\" style=\"min-width:100%;\">\n    <tbody class=\"mcnTextBlockOuter\">\n        <tr>\n            <td valign=\"top\" class=\"mcnTextBlockInner\" style=\"padding-top:9px;\">\n              \t<!--[if mso]>\n\t\t\t\t<table align=\"left\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\" style=\"width:100%;\">\n\t\t\t\t<tr>\n\t\t\t\t<![endif]-->\n\n\t\t\t\t<!--[if mso]>\n\t\t\t\t<td valign=\"top\" width=\"600\" style=\"width:600px;\">\n\t\t\t\t<![endif]-->\n                <table align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"max-width:100%; min-width:100%;\" width=\"100%\" class=\"mcnTextContentContainer\">\n                    <tbody><tr>\n\n                        <td valign=\"top\" class=\"mcnTextContent\" style=\"padding: 0px 18px 9px; font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;\">\n\n                            <em>Copyright © 2018 | HackPSU , All rights reserved.</em><br>\n<br>\n<br>\n<strong>Our mailing address is:</strong><br>\ncommunication@hackpsu.org<br>\n<br>\n<p> Just send us an email if you wish to stop receiving these emails </p>\n<br>\n&nbsp;\n                        </td>\n                    </tr>\n                </tbody></table>\n\t\t\t\t<!--[if mso]>\n\t\t\t\t</td>\n\t\t\t\t<![endif]-->\n\n\t\t\t\t<!--[if mso]>\n\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<![endif]-->\n            </td>\n        </tr>\n    </tbody>\n</table></td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t<!--[if (gte mso 9)|(IE)]>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t<![endif]-->\n\t\t\t\t\t\t\t\t</td>\n                            </tr>\n                        </table>\n                        <!-- // END TEMPLATE -->\n                    </td>\n                </tr>\n            </table>\n        </center>\n    </body>\n</html>`\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyAWejnwBUrfUoULnMRumGFpOchYjjHlfTI',\n    authDomain: 'hackpsu18-staging.firebaseapp.com',\n    databaseURL: 'https://hackpsu18-staging.firebaseio.com',\n    projectId: 'hackpsu18-staging',\n    storageBucket: 'hackpsu18-staging.appspot.com',\n    messagingSenderId: '614592542726',\n  },\n  apiUrl: 'http://localhost:5000/v2/',\n  // apiUrl: 'http://staging.hackpsu18.appspot.com/v2/',\n};\n","/**\n * TODO: Add explanation comment here\n */\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\ndeclare var $:any;\n\n$(document).ready(() => {\n  $('#sidebarCollapse').on('click', () => {\n    $('#sidebar').toggleClass('active');\n    $('.navbar-btn').toggleClass('active');\n  });\n\n});\n"],"sourceRoot":""}